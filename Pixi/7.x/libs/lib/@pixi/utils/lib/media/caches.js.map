{"version":3,"file":"caches.js","sources":["../../src/media/caches.ts"],"sourcesContent":["import type { BaseTexture, Program, Texture } from '@pixi/core';\n\n/**\n * @todo Describe property usage\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {Record<string, Program>}\n */\nexport const ProgramCache: {[key: string]: Program} = {};\n\n/**\n * @todo Describe property usage\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {Record<string, Texture>}\n */\nexport const TextureCache: {[key: string]: Texture} = Object.create(null);\n\n/**\n * @todo Describe property usage\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {Record<string, BaseTexture>}\n */\nexport const BaseTextureCache: {[key: string]: BaseTexture} = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n"],"names":[],"mappings":";AASa,MAAA,eAAyC,CAAC,GAS1C,eAAyC,uBAAO,OAAO,IAAI,GAS3D,mBAAwD,uBAAA,OAAO,IAAI;AAOzE,SAAS,sBAChB;AACQ,MAAA;AAEJ,OAAK,OAAO;AAEK,iBAAA,GAAG,EAAE;AAEtB,OAAK,OAAO;AAES,qBAAA,GAAG,EAAE;AAE9B;AAOO,SAAS,oBAChB;AACQ,MAAA;AAEJ,OAAK,OAAO;AAER,WAAO,aAAa,GAAG;AAE3B,OAAK,OAAO;AAER,WAAO,iBAAiB,GAAG;AAEnC;;;;;;"}