{"version":3,"file":"mapInternalFormatToSamplerType.js","sources":["../../../src/textures/utils/mapInternalFormatToSamplerType.ts"],"sourcesContent":["import { SAMPLER_TYPES } from '@pixi/constants';\n\n/**\n * Returns a lookup table that maps each internal format to the compatible sampler type.\n * @memberof PIXI\n * @function mapInternalFormatToSamplerType\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @returns Lookup table.\n */\nexport function mapInternalFormatToSamplerType(gl: WebGLRenderingContextBase):\nRecord<number, SAMPLER_TYPES>\n{\n    let table;\n\n    if ('WebGL2RenderingContext' in globalThis && gl instanceof globalThis.WebGL2RenderingContext)\n    {\n        table = {\n            [gl.RGB]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA]: SAMPLER_TYPES.FLOAT,\n            [gl.ALPHA]: SAMPLER_TYPES.FLOAT,\n            [gl.LUMINANCE]: SAMPLER_TYPES.FLOAT,\n            [gl.LUMINANCE_ALPHA]: SAMPLER_TYPES.FLOAT,\n            [gl.R8]: SAMPLER_TYPES.FLOAT,\n            [gl.R8_SNORM]: SAMPLER_TYPES.FLOAT,\n            [gl.RG8]: SAMPLER_TYPES.FLOAT,\n            [gl.RG8_SNORM]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB8]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB8_SNORM]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB565]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA4]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB5_A1]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA8]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA8_SNORM]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB10_A2]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB10_A2UI]: SAMPLER_TYPES.FLOAT,\n            [gl.SRGB8]: SAMPLER_TYPES.FLOAT,\n            [gl.SRGB8_ALPHA8]: SAMPLER_TYPES.FLOAT,\n            [gl.R16F]: SAMPLER_TYPES.FLOAT,\n            [gl.RG16F]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB16F]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA16F]: SAMPLER_TYPES.FLOAT,\n            [gl.R32F]: SAMPLER_TYPES.FLOAT,\n            [gl.RG32F]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB32F]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA32F]: SAMPLER_TYPES.FLOAT,\n            [gl.R11F_G11F_B10F]: SAMPLER_TYPES.FLOAT,\n            [gl.RGB9_E5]: SAMPLER_TYPES.FLOAT,\n            [gl.R8I]: SAMPLER_TYPES.INT,\n            [gl.R8UI]: SAMPLER_TYPES.UINT,\n            [gl.R16I]: SAMPLER_TYPES.INT,\n            [gl.R16UI]: SAMPLER_TYPES.UINT,\n            [gl.R32I]: SAMPLER_TYPES.INT,\n            [gl.R32UI]: SAMPLER_TYPES.UINT,\n            [gl.RG8I]: SAMPLER_TYPES.INT,\n            [gl.RG8UI]: SAMPLER_TYPES.UINT,\n            [gl.RG16I]: SAMPLER_TYPES.INT,\n            [gl.RG16UI]: SAMPLER_TYPES.UINT,\n            [gl.RG32I]: SAMPLER_TYPES.INT,\n            [gl.RG32UI]: SAMPLER_TYPES.UINT,\n            [gl.RGB8I]: SAMPLER_TYPES.INT,\n            [gl.RGB8UI]: SAMPLER_TYPES.UINT,\n            [gl.RGB16I]: SAMPLER_TYPES.INT,\n            [gl.RGB16UI]: SAMPLER_TYPES.UINT,\n            [gl.RGB32I]: SAMPLER_TYPES.INT,\n            [gl.RGB32UI]: SAMPLER_TYPES.UINT,\n            [gl.RGBA8I]: SAMPLER_TYPES.INT,\n            [gl.RGBA8UI]: SAMPLER_TYPES.UINT,\n            [gl.RGBA16I]: SAMPLER_TYPES.INT,\n            [gl.RGBA16UI]: SAMPLER_TYPES.UINT,\n            [gl.RGBA32I]: SAMPLER_TYPES.INT,\n            [gl.RGBA32UI]: SAMPLER_TYPES.UINT,\n            [gl.DEPTH_COMPONENT16]: SAMPLER_TYPES.FLOAT,\n            [gl.DEPTH_COMPONENT24]: SAMPLER_TYPES.FLOAT,\n            [gl.DEPTH_COMPONENT32F]: SAMPLER_TYPES.FLOAT,\n            [gl.DEPTH_STENCIL]: SAMPLER_TYPES.FLOAT,\n            [gl.DEPTH24_STENCIL8]: SAMPLER_TYPES.FLOAT,\n            [gl.DEPTH32F_STENCIL8]: SAMPLER_TYPES.FLOAT,\n        };\n    }\n    else\n    {\n        table = {\n            [gl.RGB]: SAMPLER_TYPES.FLOAT,\n            [gl.RGBA]: SAMPLER_TYPES.FLOAT,\n            [gl.ALPHA]: SAMPLER_TYPES.FLOAT,\n            [gl.LUMINANCE]: SAMPLER_TYPES.FLOAT,\n            [gl.LUMINANCE_ALPHA]: SAMPLER_TYPES.FLOAT,\n            [gl.DEPTH_STENCIL]: SAMPLER_TYPES.FLOAT,\n        };\n    }\n\n    return table;\n}\n"],"names":["SAMPLER_TYPES"],"mappings":"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"}