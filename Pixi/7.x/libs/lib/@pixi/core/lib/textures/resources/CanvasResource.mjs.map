{"version":3,"file":"CanvasResource.mjs","sources":["../../../src/textures/resources/CanvasResource.ts"],"sourcesContent":["import { BaseImageResource } from './BaseImageResource';\n\nimport type { ICanvas } from '@pixi/settings';\n\n/**\n * Resource type for HTMLCanvasElement and OffscreenCanvas.\n * @memberof PIXI\n */\nexport class CanvasResource extends BaseImageResource\n{\n    /**\n     * @param source - Canvas element to use\n     */\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(source: ICanvas)\n    {\n        super(source);\n    }\n\n    /**\n     * Used to auto-detect the type of resource.\n     * @param {*} source - The source object\n     * @returns {boolean} `true` if source is HTMLCanvasElement or OffscreenCanvas\n     */\n    static test(source: unknown): source is OffscreenCanvas | HTMLCanvasElement\n    {\n        const { OffscreenCanvas } = globalThis;\n\n        // Check for browsers that don't yet support OffscreenCanvas\n        if (OffscreenCanvas && source instanceof OffscreenCanvas)\n        {\n            return true;\n        }\n\n        return globalThis.HTMLCanvasElement && source instanceof HTMLCanvasElement;\n    }\n}\n"],"names":[],"mappings":";AAQO,MAAM,uBAAuB,kBACpC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,YAAY,QACZ;AACI,UAAM,MAAM;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,KAAK,QACZ;AACU,UAAA,EAAE,gBAAoB,IAAA;AAG5B,WAAI,mBAAmB,kBAAkB,kBAE9B,KAGJ,WAAW,qBAAqB,kBAAkB;AAAA,EAC7D;AACJ;"}