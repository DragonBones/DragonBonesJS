{"version":3,"file":"defaultValue.js","sources":["../../../src/shader/utils/defaultValue.ts"],"sourcesContent":["function booleanArray(size: number): Array<boolean>\n{\n    const array = new Array(size);\n\n    for (let i = 0; i < array.length; i++)\n    {\n        array[i] = false;\n    }\n\n    return array;\n}\n\n/**\n * @method defaultValue\n * @memberof PIXI.glCore.shader\n * @param {string} type - Type of value\n * @param {number} size\n * @private\n */\nexport function defaultValue(\n    type: string,\n    size: number\n): number | Float32Array | Int32Array | Uint32Array | boolean | boolean[]\n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2':\n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':\n            return new Float32Array(4 * size);\n\n        case 'int':\n        case 'uint':\n        case 'sampler2D':\n        case 'sampler2DArray':\n            return 0;\n\n        case 'ivec2':\n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4':\n            return new Int32Array(4 * size);\n\n        case 'uvec2':\n            return new Uint32Array(2 * size);\n\n        case 'uvec3':\n            return new Uint32Array(3 * size);\n\n        case 'uvec4':\n            return new Uint32Array(4 * size);\n\n        case 'bool':\n            return false;\n\n        case 'bvec2':\n\n            return booleanArray(2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n\n    return null;\n}\n"],"names":[],"mappings":";AAAA,SAAS,aAAa,MACtB;AACU,QAAA,QAAQ,IAAI,MAAM,IAAI;AAE5B,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ;AAE9B,UAAM,CAAC,IAAI;AAGR,SAAA;AACX;AASgB,SAAA,aACZ,MACA,MAEJ;AACI,UAAQ,MACR;AAAA,IACI,KAAK;AACM,aAAA;AAAA,IAEX,KAAK;AACM,aAAA,IAAI,aAAa,IAAI,IAAI;AAAA,IAEpC,KAAK;AACM,aAAA,IAAI,aAAa,IAAI,IAAI;AAAA,IAEpC,KAAK;AACM,aAAA,IAAI,aAAa,IAAI,IAAI;AAAA,IAEpC,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACM,aAAA;AAAA,IAEX,KAAK;AACM,aAAA,IAAI,WAAW,IAAI,IAAI;AAAA,IAElC,KAAK;AACM,aAAA,IAAI,WAAW,IAAI,IAAI;AAAA,IAElC,KAAK;AACM,aAAA,IAAI,WAAW,IAAI,IAAI;AAAA,IAElC,KAAK;AACM,aAAA,IAAI,YAAY,IAAI,IAAI;AAAA,IAEnC,KAAK;AACM,aAAA,IAAI,YAAY,IAAI,IAAI;AAAA,IAEnC,KAAK;AACM,aAAA,IAAI,YAAY,IAAI,IAAI;AAAA,IAEnC,KAAK;AACM,aAAA;AAAA,IAEX,KAAK;AAEM,aAAA,aAAa,IAAI,IAAI;AAAA,IAEhC,KAAK;AACM,aAAA,aAAa,IAAI,IAAI;AAAA,IAEhC,KAAK;AACM,aAAA,aAAa,IAAI,IAAI;AAAA,IAEhC,KAAK;AACD,aAAO,IAAI,aAAa;AAAA,QAAC;AAAA,QAAG;AAAA,QACxB;AAAA,QAAG;AAAA,MAAA,CAAE;AAAA,IAEb,KAAK;AACD,aAAO,IAAI,aAAa;AAAA,QAAC;AAAA,QAAG;AAAA,QAAG;AAAA,QAC3B;AAAA,QAAG;AAAA,QAAG;AAAA,QACN;AAAA,QAAG;AAAA,QAAG;AAAA,MAAA,CAAE;AAAA,IAEhB,KAAK;AACD,aAAO,IAAI,aAAa;AAAA,QAAC;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAC9B;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACT;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACT;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,MAAA,CAAE;AAAA,EACvB;AAEO,SAAA;AACX;;"}