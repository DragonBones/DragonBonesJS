"use strict";var dragonBones;(function(i){class e{constructor(t){this._clock=new i.WorldClock;this._events=[];this._objects=[];this._eventManager=null;this._eventManager=t;console.info(`DragonBones: ${e.VERSION}\nWebsite: http://www.dragonbones.cn/\nSource and Demo: https://github.com/DragonBones/`)}advanceTime(t){if(this._objects.length>0){for(const e of this._objects){e.returnToPool()}this._objects.length=0}this._clock.advanceTime(t);if(this._events.length>0){for(let t=0;t<this._events.length;++t){const a=this._events[t];const s=a.armature;if(s._armatureData!==null){s.eventDispatcher.dispatchDBEvent(a.type,a);if(a.type===i.EventObject.SOUND_EVENT){this._eventManager.dispatchDBEvent(a.type,a)}}this.bufferObject(a)}this._events.length=0}}bufferEvent(t){if(this._events.indexOf(t)<0){this._events.push(t)}}bufferObject(t){if(this._objects.indexOf(t)<0){this._objects.push(t)}}get clock(){return this._clock}get eventManager(){return this._eventManager}}e.VERSION="6.0.001";e.yDown=true;e.debug=false;e.debugDraw=false;i.DragonBones=e})(dragonBones||(dragonBones={}));if(!console.warn){console.warn=function(){}}if(!console.assert){console.assert=function(){}}if(!Date.now){Date.now=function t(){return(new Date).getTime()}}var __extends=function(t,e){function a(){this.constructor=t}for(var s in e){if(e.hasOwnProperty(s)){t[s]=e[s]}}a.prototype=e.prototype,t.prototype=new a};if(typeof global==="undefined"&&typeof window!=="undefined"){var global=window}if(typeof exports==="object"&&typeof module==="object"){module.exports=dragonBones}else if(typeof define==="function"&&define["amd"]){define(["dragonBones"],function(){return dragonBones})}else if(typeof exports==="object"){exports=dragonBones}else if(typeof global!=="undefined"){global.dragonBones=dragonBones}var dragonBones;(function(t){class i{constructor(){this.hashCode=i._hashCode++;this._isInPool=false}static _returnObject(t){const e=String(t.constructor);const a=e in i._maxCountMap?i._maxCountMap[e]:i._defaultMaxCount;const s=i._poolsMap[e]=i._poolsMap[e]||[];if(s.length<a){if(!t._isInPool){t._isInPool=true;s.push(t)}else{console.warn("The object is already in the pool.")}}else{}}static toString(){throw new Error}static setMaxCount(t,e){if(e<0||e!==e){e=0}if(t!==null){const a=String(t);const s=a in i._poolsMap?i._poolsMap[a]:null;if(s!==null&&s.length>e){s.length=e}i._maxCountMap[a]=e}else{i._defaultMaxCount=e;for(let t in i._poolsMap){const s=i._poolsMap[t];if(s.length>e){s.length=e}if(t in i._maxCountMap){i._maxCountMap[t]=e}}}}static clearPool(t=null){if(t!==null){const e=String(t);const a=e in i._poolsMap?i._poolsMap[e]:null;if(a!==null&&a.length>0){a.length=0}}else{for(let t in i._poolsMap){const a=i._poolsMap[t];a.length=0}}}static borrowObject(t){const e=String(t);const a=e in i._poolsMap?i._poolsMap[e]:null;if(a!==null&&a.length>0){const s=a.pop();s._isInPool=false;return s}const s=new t;s._onClear();return s}returnToPool(){this._onClear();i._returnObject(this)}}i._hashCode=0;i._defaultMaxCount=3e3;i._maxCountMap={};i._poolsMap={};t.BaseObject=i})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=1,e=0,a=0,s=1,i=0,r=0){this.a=t;this.b=e;this.c=a;this.d=s;this.tx=i;this.ty=r}toString(){return"[object dragonBones.Matrix] a:"+this.a+" b:"+this.b+" c:"+this.c+" d:"+this.d+" tx:"+this.tx+" ty:"+this.ty}copyFrom(t){this.a=t.a;this.b=t.b;this.c=t.c;this.d=t.d;this.tx=t.tx;this.ty=t.ty;return this}copyFromArray(t,e=0){this.a=t[e];this.b=t[e+1];this.c=t[e+2];this.d=t[e+3];this.tx=t[e+4];this.ty=t[e+5];return this}identity(){this.a=this.d=1;this.b=this.c=0;this.tx=this.ty=0;return this}concat(t){let e=this.a*t.a;let a=0;let s=0;let i=this.d*t.d;let r=this.tx*t.a+t.tx;let n=this.ty*t.d+t.ty;if(this.b!==0||this.c!==0){e+=this.b*t.c;a+=this.b*t.d;s+=this.c*t.a;i+=this.c*t.b}if(t.b!==0||t.c!==0){a+=this.a*t.b;s+=this.d*t.c;r+=this.ty*t.c;n+=this.tx*t.b}this.a=e;this.b=a;this.c=s;this.d=i;this.tx=r;this.ty=n;return this}invert(){let t=this.a;let e=this.b;let a=this.c;let s=this.d;const i=this.tx;const r=this.ty;if(e===0&&a===0){this.b=this.c=0;if(t===0||s===0){this.a=this.b=this.tx=this.ty=0}else{t=this.a=1/t;s=this.d=1/s;this.tx=-t*i;this.ty=-s*r}return this}let n=t*s-e*a;if(n===0){this.a=this.d=1;this.b=this.c=0;this.tx=this.ty=0;return this}n=1/n;let o=this.a=s*n;e=this.b=-e*n;a=this.c=-a*n;s=this.d=t*n;this.tx=-(o*i+a*r);this.ty=-(e*i+s*r);return this}transformPoint(t,e,a,s=false){a.x=this.a*t+this.c*e;a.y=this.b*t+this.d*e;if(!s){a.x+=this.tx;a.y+=this.ty}}transformRectangle(t,e=false){const a=this.a;const s=this.b;const i=this.c;const r=this.d;const n=e?0:this.tx;const o=e?0:this.ty;const l=t.x;const h=t.y;const _=l+t.width;const f=h+t.height;let c=a*l+i*h+n;let u=s*l+r*h+o;let m=a*_+i*h+n;let d=s*_+r*h+o;let p=a*_+i*f+n;let g=s*_+r*f+o;let y=a*l+i*f+n;let D=s*l+r*f+o;let T=0;if(c>m){T=c;c=m;m=T}if(p>y){T=p;p=y;y=T}t.x=Math.floor(c<p?c:p);t.width=Math.ceil((m>y?m:y)-t.x);if(u>d){T=u;u=d;d=T}if(g>D){T=g;g=D;D=T}t.y=Math.floor(u<g?u:g);t.height=Math.ceil((d>D?d:D)-t.y)}}t.Matrix=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class r{static normalizeRadian(t){t=(t+Math.PI)%(Math.PI*2);t+=t>0?-Math.PI:Math.PI;return t}constructor(t=0,e=0,a=0,s=0,i=1,r=1){this.x=t;this.y=e;this.skew=a;this.rotation=s;this.scaleX=i;this.scaleY=r}toString(){return"[object dragonBones.Transform] x:"+this.x+" y:"+this.y+" skewX:"+this.skew*180/Math.PI+" skewY:"+this.rotation*180/Math.PI+" scaleX:"+this.scaleX+" scaleY:"+this.scaleY}copyFrom(t){this.x=t.x;this.y=t.y;this.skew=t.skew;this.rotation=t.rotation;this.scaleX=t.scaleX;this.scaleY=t.scaleY;return this}identity(){this.x=this.y=0;this.skew=this.rotation=0;this.scaleX=this.scaleY=1;return this}add(t){this.x+=t.x;this.y+=t.y;this.skew+=t.skew;this.rotation+=t.rotation;this.scaleX*=t.scaleX;this.scaleY*=t.scaleY;return this}minus(t){this.x-=t.x;this.y-=t.y;this.skew-=t.skew;this.rotation-=t.rotation;this.scaleX/=t.scaleX;this.scaleY/=t.scaleY;return this}fromMatrix(t){const e=this.scaleX,a=this.scaleY;const s=r.PI_Q;this.x=t.tx;this.y=t.ty;this.rotation=Math.atan(t.b/t.a);let i=Math.atan(-t.c/t.d);this.scaleX=this.rotation>-s&&this.rotation<s?t.a/Math.cos(this.rotation):t.b/Math.sin(this.rotation);this.scaleY=i>-s&&i<s?t.d/Math.cos(i):-t.c/Math.sin(i);if(e>=0&&this.scaleX<0){this.scaleX=-this.scaleX;this.rotation=this.rotation-Math.PI}if(a>=0&&this.scaleY<0){this.scaleY=-this.scaleY;i=i-Math.PI}this.skew=i-this.rotation;return this}toMatrix(t){if(this.rotation===0){t.a=1;t.b=0}else{t.a=Math.cos(this.rotation);t.b=Math.sin(this.rotation)}if(this.skew===0){t.c=-t.b;t.d=t.a}else{t.c=-Math.sin(this.skew+this.rotation);t.d=Math.cos(this.skew+this.rotation)}if(this.scaleX!==1){t.a*=this.scaleX;t.b*=this.scaleX}if(this.scaleY!==1){t.c*=this.scaleY;t.d*=this.scaleY}t.tx=this.x;t.ty=this.y;return this}}r.PI=Math.PI;r.PI_D=Math.PI*2;r.PI_H=Math.PI/2;r.PI_Q=Math.PI/4;r.RAD_DEG=180/Math.PI;r.DEG_RAD=Math.PI/180;t.Transform=r})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=1,e=1,a=1,s=1,i=0,r=0,n=0,o=0){this.alphaMultiplier=t;this.redMultiplier=e;this.greenMultiplier=a;this.blueMultiplier=s;this.alphaOffset=i;this.redOffset=r;this.greenOffset=n;this.blueOffset=o}copyFrom(t){this.alphaMultiplier=t.alphaMultiplier;this.redMultiplier=t.redMultiplier;this.greenMultiplier=t.greenMultiplier;this.blueMultiplier=t.blueMultiplier;this.alphaOffset=t.alphaOffset;this.redOffset=t.redOffset;this.greenOffset=t.greenOffset;this.blueOffset=t.blueOffset}identity(){this.alphaMultiplier=this.redMultiplier=this.greenMultiplier=this.blueMultiplier=1;this.alphaOffset=this.redOffset=this.greenOffset=this.blueOffset=0}}t.ColorTransform=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=0,e=0){this.x=t;this.y=e}copyFrom(t){this.x=t.x;this.y=t.y}clear(){this.x=this.y=0}}t.Point=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=0,e=0,a=0,s=0){this.x=t;this.y=e;this.width=a;this.height=s}copyFrom(t){this.x=t.x;this.y=t.y;this.width=t.width;this.height=t.height}clear(){this.x=this.y=0;this.width=this.height=0}}t.Rectangle=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.ints=[];this.floats=[];this.strings=[]}static toString(){return"[class dragonBones.UserData]"}_onClear(){this.ints.length=0;this.floats.length=0;this.strings.length=0}addInt(t){this.ints.push(t)}addFloat(t){this.floats.push(t)}addString(t){this.strings.push(t)}getInt(t=0){return t>=0&&t<this.ints.length?this.ints[t]:0}getFloat(t=0){return t>=0&&t<this.floats.length?this.floats[t]:0}getString(t=0){return t>=0&&t<this.strings.length?this.strings[t]:""}}t.UserData=e;class a extends t.BaseObject{constructor(){super(...arguments);this.data=null}static toString(){return"[class dragonBones.ActionData]"}_onClear(){if(this.data!==null){this.data.returnToPool()}this.type=0;this.name="";this.bone=null;this.slot=null;this.data=null}}t.ActionData=a})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.frameIndices=[];this.cachedFrames=[];this.armatureNames=[];this.armatures={};this.userData=null}static toString(){return"[class dragonBones.DragonBonesData]"}_onClear(){for(let t in this.armatures){this.armatures[t].returnToPool();delete this.armatures[t]}if(this.userData!==null){this.userData.returnToPool()}this.autoSearch=false;this.frameRate=0;this.version="";this.name="";this.stage=null;this.frameIndices.length=0;this.cachedFrames.length=0;this.armatureNames.length=0;this.binary=null;this.intArray=null;this.floatArray=null;this.frameIntArray=null;this.frameFloatArray=null;this.frameArray=null;this.timelineArray=null;this.colorArray=null;this.userData=null}addArmature(t){if(t.name in this.armatures){console.warn("Same armature: "+t.name);return}t.parent=this;this.armatures[t.name]=t;this.armatureNames.push(t.name)}getArmature(t){return t in this.armatures?this.armatures[t]:null}}t.DragonBonesData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(c){class t extends c.BaseObject{constructor(){super(...arguments);this.aabb=new c.Rectangle;this.animationNames=[];this.sortedBones=[];this.sortedSlots=[];this.defaultActions=[];this.actions=[];this.bones={};this.slots={};this.constraints={};this.skins={};this.animations={};this.canvas=null;this.userData=null}static toString(){return"[class dragonBones.ArmatureData]"}_onClear(){for(const t of this.defaultActions){t.returnToPool()}for(const t of this.actions){t.returnToPool()}for(let t in this.bones){this.bones[t].returnToPool();delete this.bones[t]}for(let t in this.slots){this.slots[t].returnToPool();delete this.slots[t]}for(let t in this.constraints){this.constraints[t].returnToPool();delete this.constraints[t]}for(let t in this.skins){this.skins[t].returnToPool();delete this.skins[t]}for(let t in this.animations){this.animations[t].returnToPool();delete this.animations[t]}if(this.canvas!==null){this.canvas.returnToPool()}if(this.userData!==null){this.userData.returnToPool()}this.type=0;this.frameRate=0;this.cacheFrameRate=0;this.scale=1;this.name="";this.aabb.clear();this.animationNames.length=0;this.sortedBones.length=0;this.sortedSlots.length=0;this.defaultActions.length=0;this.actions.length=0;this.defaultSkin=null;this.defaultAnimation=null;this.canvas=null;this.userData=null;this.parent=null}sortBones(){const t=this.sortedBones.length;if(t<=0){return}const a=this.sortedBones.concat();let s=0;let i=0;this.sortedBones.length=0;while(i<t){const r=a[s++];if(s>=t){s=0}if(this.sortedBones.indexOf(r)>=0){continue}let e=false;for(let t in this.constraints){const n=this.constraints[t];if(n instanceof c.IKConstraintData&&n.root===r&&this.sortedBones.indexOf(n.target)<0){e=true;break}else if(n instanceof c.TransformConstraintData&&n.bones.indexOf(r)>=0&&this.sortedBones.indexOf(n.target)<0){e=true;break}else if(n instanceof c.PathConstraintData){const o=n;if(o.bones.indexOf(r)>=0){const l=o.pathSlot;const h=o.pathDisplayData.geometry.weight;if(!h){const _=l.parent;if(this.sortedBones.indexOf(_)<0){e=true;break}}else{const f=o.pathDisplayData.geometry.weight;if(f&&f.bones){let a=false;for(let t=0,e=f.bones.length;t<e;++t){const r=f.bones[t];if(this.sortedBones.indexOf(r)<0){a=true;break}}if(a){e=true;break}}}break}}}if(e){continue}if(r.parent!==null&&this.sortedBones.indexOf(r.parent)<0){continue}this.sortedBones.push(r);i++}}cacheFrames(t){if(this.cacheFrameRate>0){return}this.cacheFrameRate=t;for(let t in this.animations){this.animations[t].cacheFrames(this.cacheFrameRate)}}setCacheFrame(t,e){const a=this.parent.cachedFrames;let s=a.length;a.length+=10;a[s]=t.a;a[s+1]=t.b;a[s+2]=t.c;a[s+3]=t.d;a[s+4]=t.tx;a[s+5]=t.ty;a[s+6]=e.rotation;a[s+7]=e.skew;a[s+8]=e.scaleX;a[s+9]=e.scaleY;return s}getCacheFrame(t,e,a){const s=this.parent.cachedFrames;t.a=s[a];t.b=s[a+1];t.c=s[a+2];t.d=s[a+3];t.tx=s[a+4];t.ty=s[a+5];e.rotation=s[a+6];e.skew=s[a+7];e.scaleX=s[a+8];e.scaleY=s[a+9];e.x=t.tx;e.y=t.ty}addBone(t){if(t.name in this.bones){console.warn("Same bone: "+t.name);return}this.bones[t.name]=t;this.sortedBones.push(t)}addSlot(t){if(t.name in this.slots){console.warn("Same slot: "+t.name);return}this.slots[t.name]=t;this.sortedSlots.push(t)}addConstraint(t){if(t.name in this.constraints){console.warn("Same constraint: "+t.name);return}this.constraints[t.name]=t}addSkin(t){if(t.name in this.skins){console.warn("Same skin: "+t.name);return}t.parent=this;this.skins[t.name]=t;if(this.defaultSkin===null){this.defaultSkin=t}if(t.name==="default"){this.defaultSkin=t}}addAnimation(t){if(t.name in this.animations){console.warn("Same animation: "+t.name);return}t.parent=this;this.animations[t.name]=t;this.animationNames.push(t.name);if(this.defaultAnimation===null){this.defaultAnimation=t}}addAction(t,e){if(e){this.defaultActions.push(t)}else{this.actions.push(t)}}getBone(t){return t in this.bones?this.bones[t]:null}getSlot(t){return t in this.slots?this.slots[t]:null}getConstraint(t){return t in this.constraints?this.constraints[t]:null}getSkin(t){return t in this.skins?this.skins[t]:null}getMesh(t,e,a){const s=this.getSkin(t);if(s===null){return null}return s.getDisplay(e,a)}getDisplay(t,e,a){const s=this.getSkin(t);if(s===null){return null}return s.getDisplay(e,a)}getAnimation(t){return t in this.animations?this.animations[t]:null}}c.ArmatureData=t;class e extends c.BaseObject{constructor(){super(...arguments);this.transform=new c.Transform;this.userData=null}static toString(){return"[class dragonBones.BoneData]"}_onClear(){if(this.userData!==null){this.userData.returnToPool()}this.inheritTranslation=false;this.inheritRotation=false;this.inheritScale=false;this.inheritReflection=false;this.type=0;this.length=0;this.alpha=1;this.name="";this.transform.identity();this.userData=null;this.parent=null}}c.BoneData=e;class a extends e{constructor(){super(...arguments);this.geometry=new c.GeometryData}static toString(){return"[class dragonBones.SurfaceData]"}_onClear(){super._onClear();this.type=1;this.segmentX=0;this.segmentY=0;this.geometry.clear()}}c.SurfaceData=a;class s extends c.BaseObject{constructor(){super(...arguments);this.color=null;this.userData=null}static createColor(){return new c.ColorTransform}static toString(){return"[class dragonBones.SlotData]"}_onClear(){if(this.userData!==null){this.userData.returnToPool()}this.blendMode=0;this.displayIndex=0;this.zOrder=0;this.zIndex=0;this.alpha=1;this.name="";this.color=null;this.userData=null;this.parent=null}}s.DEFAULT_COLOR=new c.ColorTransform;c.SlotData=s})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{_onClear(){this.order=0;this.name="";this.type=0;this.target=null;this.root=null;this.bone=null}}t.ConstraintData=e;class a extends e{static toString(){return"[class dragonBones.IKConstraintData]"}_onClear(){super._onClear();this.scaleEnabled=false;this.bendPositive=false;this.weight=1}}t.IKConstraintData=a;class s extends e{static toString(){return"[class dragonBones.TransformConstraintData]"}_onClear(){super._onClear();this.targetBone=null;this.bones=[];this.offsetX=0;this.offsetY=0;this.offsetRotation=0;this.offsetScaleX=0;this.offsetScaleY=0;this.rotateWeight=0;this.scaleWeight=0;this.translateWeight=0;this.local=false;this.relative=false;this.type=2}}t.TransformConstraintData=s;class i extends e{static toString(){return"[class dragonBones.PhysicsConstraintData]"}_onClear(){super._onClear();this.x=0;this.y=0;this.rotate=0;this.scaleX=0;this.shearX=0;this.limit=0;this.fps=0;this.inertia=0;this.strength=0;this.damping=0;this.mass=0;this.wind=0;this.windDisturbance=0;this.gravity=0;this.weight=0;this.type=3}}t.PhysicsConstraintData=i;class r extends e{constructor(){super(...arguments);this.bones=[]}static toString(){return"[class dragonBones.PathConstraintData]"}_onClear(){super._onClear();this.pathSlot=null;this.pathDisplayData=null;this.bones.length=0;this.positionMode=0;this.spacingMode=1;this.rotateMode=1;this.position=0;this.spacing=0;this.rotateOffset=0;this.rotateWeight=0;this.xWeight=0;this.yWeight=0;this.type=1}AddBone(t){this.bones.push(t)}}t.PathConstraintData=r})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{static toString(){return"[class dragonBones.CanvasData]"}_onClear(){this.hasBackground=false;this.color=0;this.x=0;this.y=0;this.width=0;this.height=0}}t.CanvasData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.displays={}}static toString(){return"[class dragonBones.SkinData]"}_onClear(){for(let t in this.displays){const e=this.displays[t];for(const a of e){if(a!==null){a.returnToPool()}}delete this.displays[t]}this.name="";this.parent=null}addDisplay(t,e){if(!(t in this.displays)){this.displays[t]=[]}if(e!==null){e.parent=this}const a=this.displays[t];a.push(e)}getDisplay(t,e){const a=this.getDisplays(t);if(a!==null){for(const s of a){if(s!==null&&s.name===e){return s}}}return null}getDisplays(t){if(!(t in this.displays)){return null}return this.displays[t]}}t.SkinData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(){this.weight=null}clear(){if(!this.isShared&&this.weight!==null){this.weight.returnToPool()}this.isShared=false;this.inheritDeform=false;this.offset=0;this.data=null;this.weight=null}shareFrom(t){this.isShared=true;this.offset=t.offset;this.weight=t.weight}get vertexCount(){const t=this.data.intArray;return t[this.offset+0]}get triangleCount(){const t=this.data.intArray;return t[this.offset+1]}}t.GeometryData=e;class a extends t.BaseObject{constructor(){super(...arguments);this.transform=new t.Transform}_onClear(){this.name="";this.path="";this.transform.identity();this.parent=null}}t.DisplayData=a;class s extends a{constructor(){super(...arguments);this.geometry=new e}}t.SkinnedDisplayData=s;class i extends a{constructor(){super(...arguments);this.pivot=new t.Point}static toString(){return"[class dragonBones.ImageDisplayData]"}_onClear(){super._onClear();this.type=0;this.pivot.clear();this.texture=null}}t.ImageDisplayData=i;class r extends a{constructor(){super(...arguments);this.actions=[]}static toString(){return"[class dragonBones.ArmatureDisplayData]"}_onClear(){super._onClear();for(const t of this.actions){t.returnToPool()}this.type=1;this.inheritAnimation=false;this.actions.length=0;this.armature=null}addAction(t){this.actions.push(t)}}t.ArmatureDisplayData=r;class n extends s{static toString(){return"[class dragonBones.MeshDisplayData]"}_onClear(){super._onClear();this.type=2;this.geometry.clear();this.texture=null}}t.MeshDisplayData=n;class o extends a{constructor(){super(...arguments);this.boundingBox=null}static toString(){return"[class dragonBones.BoundingBoxDisplayData]"}_onClear(){super._onClear();if(this.boundingBox!==null){this.boundingBox.returnToPool()}this.type=3;this.boundingBox=null}}t.BoundingBoxDisplayData=o;class l extends s{constructor(){super(...arguments);this.curveLengths=[]}static toString(){return"[class dragonBones.PathDisplayData]"}_onClear(){super._onClear();this.type=4;this.closed=false;this.constantSpeed=false;this.geometry.clear();this.curveLengths.length=0}}t.PathDisplayData=l;class h extends t.BaseObject{constructor(){super(...arguments);this.bones=[]}static toString(){return"[class dragonBones.WeightData]"}_onClear(){this.count=0;this.offset=0;this.bones.length=0}addBone(t){this.bones.push(t)}}t.WeightData=h;class _ extends s{constructor(){super(...arguments);this.shape=null}static toString(){return"[class dragonBones.ShapeDisplayData]"}_onClear(){super._onClear();if(this.shape!==null){this.shape.returnToPool()}this.type=5;this.shape=null}}t.ShapeDisplayData=_})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.vertices=[];this.paths=[]}static toString(){return"[class dragonBones.ShapeData]"}_onClear(){this.x=0;this.y=0;this.offset=0;this.vertices.length=0;this.paths.length=0}}t.ShapeData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{_onClear(){this.color=0;this.width=0;this.height=0}}t.BoundingBoxData=e;class g extends e{static toString(){return"[class dragonBones.RectangleBoundingBoxData]"}static _computeOutCode(t,e,a,s,i,r){let n=0;if(t<a){n|=1}else if(t>i){n|=2}if(e<s){n|=4}else if(e>r){n|=8}return n}static rectangleIntersectsSegment(s,i,r,n,o,l,h,_,t=null,e=null,f=null){const a=s>o&&s<h&&i>l&&i<_;const c=r>o&&r<h&&n>l&&n<_;if(a&&c){return-1}let u=0;let m=g._computeOutCode(s,i,o,l,h,_);let d=g._computeOutCode(r,n,o,l,h,_);while(true){if((m|d)===0){u=2;break}else if((m&d)!==0){break}let t=0;let e=0;let a=0;const p=m!==0?m:d;if((p&4)!==0){t=s+(r-s)*(l-i)/(n-i);e=l;if(f!==null){a=-Math.PI*.5}}else if((p&8)!==0){t=s+(r-s)*(_-i)/(n-i);e=_;if(f!==null){a=Math.PI*.5}}else if((p&2)!==0){e=i+(n-i)*(h-s)/(r-s);t=h;if(f!==null){a=0}}else if((p&1)!==0){e=i+(n-i)*(o-s)/(r-s);t=o;if(f!==null){a=Math.PI}}if(p===m){s=t;i=e;m=g._computeOutCode(s,i,o,l,h,_);if(f!==null){f.x=a}}else{r=t;n=e;d=g._computeOutCode(r,n,o,l,h,_);if(f!==null){f.y=a}}}if(u){if(a){u=2;if(t!==null){t.x=r;t.y=n}if(e!==null){e.x=r;e.y=r}if(f!==null){f.x=f.y+Math.PI}}else if(c){u=1;if(t!==null){t.x=s;t.y=i}if(e!==null){e.x=s;e.y=i}if(f!==null){f.y=f.x+Math.PI}}else{u=3;if(t!==null){t.x=s;t.y=i}if(e!==null){e.x=r;e.y=n}}}return u}_onClear(){super._onClear();this.type=0}containsPoint(t,e){const a=this.width*.5;if(t>=-a&&t<=a){const s=this.height*.5;if(e>=-s&&e<=s){return true}}return false}intersectsSegment(t,e,a,s,i=null,r=null,n=null){const o=this.width*.5;const l=this.height*.5;const h=g.rectangleIntersectsSegment(t,e,a,s,-o,-l,o,l,i,r,n);return h}}t.RectangleBoundingBoxData=g;class l extends e{static toString(){return"[class dragonBones.EllipseData]"}static ellipseIntersectsSegment(t,e,a,s,i,r,n,o,l=null,h=null,_=null){const f=n/o;const c=f*f;e*=f;s*=f;const u=a-t;const m=s-e;const d=Math.sqrt(u*u+m*m);const p=u/d;const g=m/d;const y=(i-t)*p+(r-e)*g;const D=y*y;const T=t*t+e*e;const b=n*n;const A=b-T+D;let S=0;if(A>=0){const P=Math.sqrt(A);const O=y-P;const x=y+P;const B=O<0?-1:O<=d?0:1;const E=x<0?-1:x<=d?0:1;const I=B*E;if(I<0){return-1}else if(I===0){if(B===-1){S=2;a=t+x*p;s=(e+x*g)/f;if(l!==null){l.x=a;l.y=s}if(h!==null){h.x=a;h.y=s}if(_!==null){_.x=Math.atan2(s/b*c,a/b);_.y=_.x+Math.PI}}else if(E===1){S=1;t=t+O*p;e=(e+O*g)/f;if(l!==null){l.x=t;l.y=e}if(h!==null){h.x=t;h.y=e}if(_!==null){_.x=Math.atan2(e/b*c,t/b);_.y=_.x+Math.PI}}else{S=3;if(l!==null){l.x=t+O*p;l.y=(e+O*g)/f;if(_!==null){_.x=Math.atan2(l.y/b*c,l.x/b)}}if(h!==null){h.x=t+x*p;h.y=(e+x*g)/f;if(_!==null){_.y=Math.atan2(h.y/b*c,h.x/b)}}}}}return S}_onClear(){super._onClear();this.type=1}containsPoint(t,e){const a=this.width*.5;if(t>=-a&&t<=a){const s=this.height*.5;if(e>=-s&&e<=s){e*=a/s;return Math.sqrt(t*t+e*e)<=a}}return false}intersectsSegment(t,e,a,s,i=null,r=null,n=null){const o=l.ellipseIntersectsSegment(t,e,a,s,0,0,this.width*.5,this.height*.5,i,r,n);return o}}t.EllipseBoundingBoxData=l;class h extends e{constructor(){super(...arguments);this.vertices=[]}static toString(){return"[class dragonBones.PolygonBoundingBoxData]"}static polygonIntersectsSegment(e,a,s,i,r,t=null,n=null,o=null){if(e===s){e=s+1e-6}if(a===i){a=i+1e-6}const l=r.length;const h=e-s;const _=a-i;const f=e*i-a*s;let c=0;let u=r[l-2];let m=r[l-1];let d=0;let p=0;let g=0;let y=0;let D=0;let T=0;for(let t=0;t<l;t+=2){const b=r[t];const A=r[t+1];if(u===b){u=b+1e-4}if(m===A){m=A+1e-4}const S=u-b;const P=m-A;const O=u*A-m*b;const x=h*P-_*S;const B=(f*S-h*O)/x;if((B>=u&&B<=b||B>=b&&B<=u)&&(h===0||B>=e&&B<=s||B>=s&&B<=e)){const E=(f*P-_*O)/x;if((E>=m&&E<=A||E>=A&&E<=m)&&(_===0||E>=a&&E<=i||E>=i&&E<=a)){if(n!==null){let t=B-e;if(t<0){t=-t}if(c===0){d=t;p=t;g=B;y=E;D=B;T=E;if(o!==null){o.x=Math.atan2(A-m,b-u)-Math.PI*.5;o.y=o.x}}else{if(t<d){d=t;g=B;y=E;if(o!==null){o.x=Math.atan2(A-m,b-u)-Math.PI*.5}}if(t>p){p=t;D=B;T=E;if(o!==null){o.y=Math.atan2(A-m,b-u)-Math.PI*.5}}}c++}else{g=B;y=E;D=B;T=E;c++;if(o!==null){o.x=Math.atan2(A-m,b-u)-Math.PI*.5;o.y=o.x}break}}}u=b;m=A}if(c===1){if(t!==null){t.x=g;t.y=y}if(n!==null){n.x=g;n.y=y}if(o!==null){o.y=o.x+Math.PI}}else if(c>1){c++;if(t!==null){t.x=g;t.y=y}if(n!==null){n.x=D;n.y=T}}return c}_onClear(){super._onClear();this.type=2;this.x=0;this.y=0;this.vertices.length=0}containsPoint(s,i){let r=false;if(s>=this.x&&s<=this.width&&i>=this.y&&i<=this.height){for(let t=0,e=this.vertices.length,a=e-2;t<e;t+=2){const n=this.vertices[a+1];const o=this.vertices[t+1];if(o<i&&n>=i||n<i&&o>=i){const l=this.vertices[a];const h=this.vertices[t];if((i-o)*(l-h)/(n-o)+h<s){r=!r}}a=t}}return r}intersectsSegment(t,e,a,s,i=null,r=null,n=null){let o=0;if(g.rectangleIntersectsSegment(t,e,a,s,this.x,this.y,this.x+this.width,this.y+this.height,null,null,null)!==0){o=h.polygonIntersectsSegment(t,e,a,s,this.vertices,i,r,n)}return o}}t.PolygonBoundingBoxData=h})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.cachedFrames=[];this.boneTimelines={};this.slotTimelines={};this.constraintTimelines={};this.animationTimelines={};this.boneCachedFrameIndices={};this.slotCachedFrameIndices={};this.actionTimeline=null;this.zOrderTimeline=null}static toString(){return"[class dragonBones.AnimationData]"}_onClear(){for(let t in this.boneTimelines){for(const e of this.boneTimelines[t]){e.returnToPool()}delete this.boneTimelines[t]}for(let t in this.slotTimelines){for(const e of this.slotTimelines[t]){e.returnToPool()}delete this.slotTimelines[t]}for(let t in this.constraintTimelines){for(const e of this.constraintTimelines[t]){e.returnToPool()}delete this.constraintTimelines[t]}for(let t in this.animationTimelines){for(const e of this.animationTimelines[t]){e.returnToPool()}delete this.animationTimelines[t]}for(let t in this.boneCachedFrameIndices){delete this.boneCachedFrameIndices[t]}for(let t in this.slotCachedFrameIndices){delete this.slotCachedFrameIndices[t]}if(this.actionTimeline!==null){this.actionTimeline.returnToPool()}if(this.zOrderTimeline!==null){this.zOrderTimeline.returnToPool()}this.frameIntOffset=0;this.frameFloatOffset=0;this.frameOffset=0;this.blendType=0;this.frameCount=0;this.playTimes=0;this.duration=0;this.scale=1;this.fadeInTime=0;this.cacheFrameRate=0;this.name="";this.cachedFrames.length=0;this.actionTimeline=null;this.zOrderTimeline=null;this.parent=null}cacheFrames(t){if(this.cacheFrameRate>0){return}this.cacheFrameRate=Math.max(Math.ceil(t*this.scale),1);const e=Math.ceil(this.cacheFrameRate*this.duration)+1;this.cachedFrames.length=e;for(let t=0,e=this.cacheFrames.length;t<e;++t){this.cachedFrames[t]=false}for(const a of this.parent.sortedBones){const s=new Array(e);for(let t=0,e=s.length;t<e;++t){s[t]=-1}this.boneCachedFrameIndices[a.name]=s}for(const i of this.parent.sortedSlots){const s=new Array(e);for(let t=0,e=s.length;t<e;++t){s[t]=-1}this.slotCachedFrameIndices[i.name]=s}}addBoneTimeline(t,e){const a=t in this.boneTimelines?this.boneTimelines[t]:this.boneTimelines[t]=[];if(a.indexOf(e)<0){a.push(e)}}addSlotTimeline(t,e){const a=t in this.slotTimelines?this.slotTimelines[t]:this.slotTimelines[t]=[];if(a.indexOf(e)<0){a.push(e)}}addConstraintTimeline(t,e){const a=t in this.constraintTimelines?this.constraintTimelines[t]:this.constraintTimelines[t]=[];if(a.indexOf(e)<0){a.push(e)}}addAnimationTimeline(t,e){const a=t in this.animationTimelines?this.animationTimelines[t]:this.animationTimelines[t]=[];if(a.indexOf(e)<0){a.push(e)}}getBoneTimelines(t){return t in this.boneTimelines?this.boneTimelines[t]:null}getSlotTimelines(t){return t in this.slotTimelines?this.slotTimelines[t]:null}getConstraintTimelines(t){return t in this.constraintTimelines?this.constraintTimelines[t]:null}getAnimationTimelines(t){return t in this.animationTimelines?this.animationTimelines[t]:null}getBoneCachedFrameIndices(t){return t in this.boneCachedFrameIndices?this.boneCachedFrameIndices[t]:null}getSlotCachedFrameIndices(t){return t in this.slotCachedFrameIndices?this.slotCachedFrameIndices[t]:null}}t.AnimationData=e;class a extends t.BaseObject{static toString(){return"[class dragonBones.TimelineData]"}_onClear(){this.type=10;this.offset=0;this.frameIndicesOffset=-1}}t.TimelineData=a;class s extends a{static toString(){return"[class dragonBones.AnimationTimelineData]"}_onClear(){super._onClear();this.x=0;this.y=0}}t.AnimationTimelineData=s})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.boneMask=[]}static toString(){return"[class dragonBones.AnimationConfig]"}_onClear(){this.pauseFadeOut=true;this.fadeOutMode=4;this.fadeOutTweenType=1;this.fadeOutTime=-1;this.actionEnabled=true;this.additive=false;this.displayControl=true;this.pauseFadeIn=true;this.resetToPose=true;this.fadeInTweenType=1;this.playTimes=-1;this.layer=0;this.position=0;this.duration=-1;this.timeScale=-100;this.weight=1;this.fadeInTime=-1;this.autoFadeOutTime=-1;this.name="";this.animation="";this.group="";this.boneMask.length=0}clear(){this._onClear()}copyFrom(a){this.pauseFadeOut=a.pauseFadeOut;this.fadeOutMode=a.fadeOutMode;this.autoFadeOutTime=a.autoFadeOutTime;this.fadeOutTweenType=a.fadeOutTweenType;this.actionEnabled=a.actionEnabled;this.additive=a.additive;this.displayControl=a.displayControl;this.pauseFadeIn=a.pauseFadeIn;this.resetToPose=a.resetToPose;this.playTimes=a.playTimes;this.layer=a.layer;this.position=a.position;this.duration=a.duration;this.timeScale=a.timeScale;this.fadeInTime=a.fadeInTime;this.fadeOutTime=a.fadeOutTime;this.fadeInTweenType=a.fadeInTweenType;this.weight=a.weight;this.name=a.name;this.animation=a.animation;this.group=a.group;this.boneMask.length=a.boneMask.length;for(let t=0,e=this.boneMask.length;t<e;++t){this.boneMask[t]=a.boneMask[t]}}}t.AnimationConfig=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.textures={}}_onClear(){for(let t in this.textures){this.textures[t].returnToPool();delete this.textures[t]}this.autoSearch=false;this.width=0;this.height=0;this.scale=1;this.name="";this.imagePath=""}copyFrom(e){this.autoSearch=e.autoSearch;this.scale=e.scale;this.width=e.width;this.height=e.height;this.name=e.name;this.imagePath=e.imagePath;for(let t in this.textures){this.textures[t].returnToPool();delete this.textures[t]}for(let t in e.textures){const a=this.createTexture();a.copyFrom(e.textures[t]);this.textures[t]=a}}addTexture(t){if(t.name in this.textures){console.warn("Same texture: "+t.name);return}t.parent=this;this.textures[t.name]=t}getTexture(t){return t in this.textures?this.textures[t]:null}}t.TextureAtlasData=e;class a extends t.BaseObject{constructor(){super(...arguments);this.region=new t.Rectangle;this.frame=null}static createRectangle(){return new t.Rectangle}_onClear(){this.rotated=false;this.name="";this.region.clear();this.parent=null;this.frame=null}copyFrom(t){this.rotated=t.rotated;this.name=t.name;this.region.copyFrom(t.region);this.parent=t.parent;if(this.frame===null&&t.frame!==null){this.frame=a.createRectangle()}else if(this.frame!==null&&t.frame===null){this.frame=null}if(this.frame!==null&&t.frame!==null){this.frame.copyFrom(t.frame)}}}t.TextureData=a})(dragonBones||(dragonBones={}));var dragonBones;(function(i){class o extends i.BaseObject{constructor(){super(...arguments);this._bones=[];this._slots=[];this._constraints=[];this._actions=[];this._animation=null;this._proxy=null;this._replaceTextureAtlasData=null;this._clock=null}static toString(){return"[class dragonBones.Armature]"}static _onSortSlots(t,e){return t._zIndex*1e3+t._zOrder>e._zIndex*1e3+e._zOrder?1:-1}_onClear(){if(this._clock!==null){this._clock.remove(this)}for(const t of this._bones){t.returnToPool()}for(const e of this._slots){e.returnToPool()}for(const a of this._constraints){a.returnToPool()}for(const s of this._actions){s.returnToPool()}if(this._animation!==null){this._animation.returnToPool()}if(this._proxy!==null){this._proxy.dbClear()}if(this._replaceTextureAtlasData!==null){this._replaceTextureAtlasData.returnToPool()}this.inheritAnimation=true;this.userData=null;this._lockUpdate=false;this._slotsDirty=true;this._zOrderDirty=false;this._zIndexDirty=false;this._alphaDirty=true;this._flipX=false;this._flipY=false;this._cacheFrameIndex=-1;this._alpha=1;this._globalAlpha=1;this._bones.length=0;this._slots.length=0;this._constraints.length=0;this._actions.length=0;this._armatureData=null;this._animation=null;this._proxy=null;this._display=null;this._replaceTextureAtlasData=null;this._replacedTexture=null;this._dragonBones=null;this._clock=null;this._parent=null}_sortZOrder(a,s){const i=this._armatureData.sortedSlots;const r=a===null;if(this._zOrderDirty||!r){for(let t=0,e=i.length;t<e;++t){const n=r?t:a[s+t];if(n<0||n>=e){continue}const o=i[n];const l=this.getSlot(o.name);if(l!==null){l._setZOrder(t)}}this._slotsDirty=true;this._zOrderDirty=!r}}_addBone(t){if(this._bones.indexOf(t)<0){this._bones.push(t)}}_addSlot(t){if(this._slots.indexOf(t)<0){this._slots.push(t)}}_addConstraint(t){if(this._constraints.indexOf(t)<0){this._constraints.push(t)}}_bufferAction(t,e){if(this._actions.indexOf(t)<0){if(e){this._actions.push(t)}else{this._actions.unshift(t)}}}dispose(){if(this._armatureData!==null){this._lockUpdate=true;this._dragonBones.bufferObject(this);if(this._constraints){for(const t of this._constraints){t.returnToPool()}}if(this._bones){for(const e of this._bones){if(e._transformConstraint){e._transformConstraint.returnToPool();e._transformConstraint=null}if(e._physicsConstraint){e._physicsConstraint.returnToPool();e._physicsConstraint=null}e.returnToPool()}}}}init(t,e,a,s){if(this._armatureData!==null){return}this._armatureData=t;this._animation=i.BaseObject.borrowObject(i.Animation);this._proxy=e;this._display=a;this._dragonBones=s;this._proxy.dbInit(this);this._animation.init(this);this._animation.animations=this._armatureData.animations}advanceTime(t){if(this._lockUpdate){return}this._lockUpdate=true;if(this._armatureData===null){console.warn("The armature has been disposed.");return}else if(this._armatureData.parent===null){console.warn("The armature data has been disposed.\nPlease make sure dispose armature before call factory.clear().");return}const e=this._cacheFrameIndex;this._animation.advanceTime(t);if(this._slotsDirty||this._zIndexDirty){this._slots.sort(o._onSortSlots);this._maskDirty=true;if(this._zIndexDirty){for(let t=0,e=this._slots.length;t<e;++t){this._slots[t]._setZOrder(t)}}this._slotsDirty=false;this._zIndexDirty=false}if(this._alphaDirty){this._alphaDirty=false;this._globalAlpha=this._alpha*(this._parent!==null?this._parent._globalAlpha:1);for(const a of this._bones){a._updateAlpha()}for(const s of this._slots){s._updateAlpha()}}if(this._cacheFrameIndex<0||this._cacheFrameIndex!==e){let t=0,e=0;for(t=0,e=this._bones.length;t<e;++t){this._bones[t].update(this._cacheFrameIndex)}for(t=0,e=this._slots.length;t<e;++t){this._slots[t].update(this._cacheFrameIndex)}}if(this._maskDirty){this._maskDirty=false;let t=0,e=0;for(t=0,e=this._slots.length;t<e;++t){const s=this._slots[t];if(s._mask&&s._maskRange>0){s._updateMask()}}}if(this._actions.length>0){for(const i of this._actions){const r=i.actionData;if(r!==null){if(r.type===0){if(i.slot!==null){const n=i.slot.childArmature;if(n!==null){n.animation.fadeIn(r.name)}}else if(i.bone!==null){for(const s of this.getSlots()){if(s.parent===i.bone){const n=s.childArmature;if(n!==null){n.animation.fadeIn(r.name)}}}}else{this._animation.fadeIn(r.name)}}}i.returnToPool()}this._actions.length=0}this._lockUpdate=false;this._proxy.dbUpdate()}invalidUpdate(t=null,e=false){if(t!==null&&t.length>0){const a=this.getBone(t);if(a!==null){a.invalidUpdate();if(e){for(const s of this._slots){if(s.parent===a){s.invalidUpdate()}}}}}else{for(const a of this._bones){a.invalidUpdate()}if(e){for(const s of this._slots){s.invalidUpdate()}}}}containsPoint(t,e){for(const a of this._slots){if(a.containsPoint(t,e)){return a}}return null}intersectsSegment(e,a,t,s,i=null,r=null,n=null){const o=e===t;let l=0;let h=0;let _=0;let f=0;let c=0;let u=0;let m=0;let d=0;let p=null;let g=null;for(const y of this._slots){const D=y.intersectsSegment(e,a,t,s,i,r,n);if(D>0){if(i!==null||r!==null){if(i!==null){let t=o?i.y-a:i.x-e;if(t<0){t=-t}if(p===null||t<l){l=t;_=i.x;f=i.y;p=y;if(n){m=n.x}}}if(r!==null){let t=r.x-e;if(t<0){t=-t}if(g===null||t>h){h=t;c=r.x;u=r.y;g=y;if(n!==null){d=n.y}}}}else{p=y;break}}}if(p!==null&&i!==null){i.x=_;i.y=f;if(n!==null){n.x=m}}if(g!==null&&r!==null){r.x=c;r.y=u;if(n!==null){n.y=d}}return p}getBone(t){for(const e of this._bones){if(e.name===t){return e}}return null}getBoneByDisplay(t){const e=this.getSlotByDisplay(t);return e!==null?e.parent:null}getSlot(t){for(const e of this._slots){if(e.name===t){return e}}return null}getSlotByDisplay(t){if(t!==null){for(const e of this._slots){if(e.display===t){return e}}}return null}getBones(){return this._bones}getSlots(){return this._slots}getPathConstraints(){if(this._constraints){const t=[];for(const e of this._constraints){if(e instanceof i.PathConstraint){t.push(e)}}return t}return[]}get flipX(){return this._flipX}set flipX(t){if(this._flipX===t){return}this._flipX=t;this.invalidUpdate()}get flipY(){return this._flipY}set flipY(t){if(this._flipY===t){return}this._flipY=t;this.invalidUpdate()}get cacheFrameRate(){return this._armatureData.cacheFrameRate}set cacheFrameRate(t){if(this._armatureData.cacheFrameRate!==t){this._armatureData.cacheFrames(t);for(const e of this._slots){const a=e.childArmature;if(a!==null){a.cacheFrameRate=t}}}}get name(){return this._armatureData.name}get armatureData(){return this._armatureData}get animation(){return this._animation}get proxy(){return this._proxy}get eventDispatcher(){return this._proxy}get display(){return this._display}get replacedTexture(){return this._replacedTexture}set replacedTexture(t){if(this._replacedTexture===t){return}if(this._replaceTextureAtlasData!==null){this._replaceTextureAtlasData.returnToPool();this._replaceTextureAtlasData=null}this._replacedTexture=t;for(const e of this._slots){e.invalidUpdate();e.update(-1)}}get clock(){return this._clock}set clock(t){if(this._clock===t){return}if(this._clock!==null){this._clock.remove(this)}this._clock=t;if(this._clock){this._clock.add(this)}for(const e of this._slots){const a=e.childArmature;if(a!==null){a.clock=this._clock}}}get parent(){return this._parent}getDisplay(){return this._display}}i.Armature=o})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.globalTransformMatrix=new t.Matrix;this.global=new t.Transform;this.offset=new t.Transform}_onClear(){this.globalTransformMatrix.identity();this.global.identity();this.offset.identity();this.origin=null;this.userData=null;this._globalDirty=false;this._alpha=1;this._globalAlpha=1;this._armature=null}updateGlobalTransform(){if(this._globalDirty){this._globalDirty=false;this.global.fromMatrix(this.globalTransformMatrix)}}get armature(){return this._armature}}e._helpMatrix=new t.Matrix;e._helpTransform=new t.Transform;e._helpPoint=new t.Point;t.TransformObject=e})(dragonBones||(dragonBones={}));var dragonBones;(function(g){class t extends g.TransformObject{constructor(){super(...arguments);this.animationPose=new g.Transform}static toString(){return"[class dragonBones.Bone]"}_onClear(){super._onClear();this.offsetMode=1;this.animationPose.identity();this._transformDirty=false;this._childrenTransformDirty=false;this._localDirty=true;this._hasConstraint=false;this._visible=true;this._cachedFrameIndex=-1;this._boneData=null;this._parent=null;this._cachedFrameIndices=null}_updateGlobalTransformMatrix(t){const e=this._boneData;const a=this.global;const s=this.globalTransformMatrix;const i=this.origin;const r=this.offset;const n=this.animationPose;const o=this._parent;const l=this._armature.flipX;const h=this._armature.flipY===g.DragonBones.yDown;let _=o!==null;let f=0;if(this.offsetMode===1){if(i!==null){a.x=i.x+r.x+n.x;a.scaleX=i.scaleX*r.scaleX*n.scaleX;a.scaleY=i.scaleY*r.scaleY*n.scaleY;if(g.DragonBones.yDown){a.y=i.y+r.y+n.y;a.skew=i.skew+r.skew+n.skew;a.rotation=i.rotation+r.rotation+n.rotation}else{a.y=i.y-r.y+n.y;a.skew=i.skew-r.skew+n.skew;a.rotation=i.rotation-r.rotation+n.rotation}}else{a.copyFrom(r);if(!g.DragonBones.yDown){a.y=-a.y;a.skew=-a.skew;a.rotation=-a.rotation}a.add(n)}}else if(this.offsetMode===0){if(i!==null){a.copyFrom(i).add(n)}else{a.copyFrom(n)}}else{_=false;a.copyFrom(r);if(!g.DragonBones.yDown){a.y=-a.y;a.skew=-a.skew;a.rotation=-a.rotation}}if(_){const c=o._boneData.type===1;const u=c?o._bone:null;const m=c?o._getGlobalTransformMatrix(a.x,a.y):o.globalTransformMatrix;if(e.inheritScale&&(!c||u!==null)){if(c){if(e.inheritRotation){a.rotation+=o.global.rotation}u.updateGlobalTransform();a.scaleX*=u.global.scaleX;a.scaleY*=u.global.scaleY;m.transformPoint(a.x,a.y,a);a.toMatrix(s);if(e.inheritTranslation){a.x=s.tx;a.y=s.ty}else{s.tx=a.x;s.ty=a.y}}else{if(!e.inheritRotation){o.updateGlobalTransform();if(l&&h){f=a.rotation-(o.global.rotation+Math.PI)}else if(l){f=a.rotation+o.global.rotation+Math.PI}else if(h){f=a.rotation+o.global.rotation}else{f=a.rotation-o.global.rotation}a.rotation=f}a.toMatrix(s);s.concat(m);if(e.inheritTranslation){a.x=s.tx;a.y=s.ty}else{s.tx=a.x;s.ty=a.y}if(t){a.fromMatrix(s);this._globalDirty=false}else{this._globalDirty=true}}}else{if(e.inheritTranslation){const d=a.x;const p=a.y;a.x=m.a*d+m.c*p+m.tx;a.y=m.b*d+m.d*p+m.ty}else{if(l){a.x=-a.x}if(h){a.y=-a.y}}if(e.inheritRotation){o.updateGlobalTransform();if(o.global.scaleX<0){f=a.rotation+o.global.rotation+Math.PI}else{f=a.rotation+o.global.rotation}if(m.a*m.d-m.b*m.c<0){f-=a.rotation*2;if(l!==h||e.inheritReflection){a.skew+=Math.PI}if(!g.DragonBones.yDown){a.skew=-a.skew}}a.rotation=f}else if(l||h){if(l&&h){f=a.rotation+Math.PI}else{if(l){f=Math.PI-a.rotation}else{f=-a.rotation}a.skew+=Math.PI}a.rotation=f}a.toMatrix(s)}}else{if(l||h){if(l){a.x=-a.x}if(h){a.y=-a.y}if(l&&h){f=a.rotation+Math.PI}else{if(l){f=Math.PI-a.rotation}else{f=-a.rotation}a.skew+=Math.PI}a.rotation=f}a.toMatrix(s)}if(this._transformConstraint){this._transformConstraint._dirty=true}if(this._targetTransformConstraint){this._targetTransformConstraint._dirty=true}if(this._physicsConstraint){this._physicsConstraint._sleeping=false}}_updateAlpha(){if(this._parent!==null){this._globalAlpha=this._alpha*this._parent._globalAlpha}else{this._globalAlpha=this._alpha*this._armature._globalAlpha}}init(t,e){if(this._boneData!==null){return}this._boneData=t;this._armature=e;this._alpha=this._boneData.alpha;if(this._boneData.parent!==null){this._parent=this._armature.getBone(this._boneData.parent.name)}this._armature._addBone(this);this.origin=this._boneData.transform}update(t){if(this._transformConstraint&&this._transformConstraint._dirty){this._transformDirty=true}if(this._physicsConstraint&&!this._physicsConstraint._sleeping){this._transformDirty=true}if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e){this._transformDirty=false}else if(e>=0){this._transformDirty=true;this._cachedFrameIndex=e}else{if(this._hasConstraint){for(const a of this._armature._constraints){if(a._root===this){a.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){this._transformDirty=true;this._cachedFrameIndex=-1}else if(this._cachedFrameIndex>=0){this._transformDirty=false;this._cachedFrameIndices[t]=this._cachedFrameIndex}else{this._transformDirty=true;this._cachedFrameIndex=-1}}}else{if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){t=-1;this._transformDirty=true;this._cachedFrameIndex=-1}}if(this._transformDirty){this._transformDirty=false;this._childrenTransformDirty=true;if(this._cachedFrameIndex<0){const s=t>=0;if(this._localDirty){this._updateGlobalTransformMatrix(s)}if(s&&this._cachedFrameIndices!==null){this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global)}}else{this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex)}}else if(this._childrenTransformDirty){this._childrenTransformDirty=false}if(this._transformConstraint){this._transformConstraint.update();this._localDirty=false}if(this._hasConstraint){for(const a of this._armature._constraints){if(a._root===this){a.update()}}}if(this._physicsConstraint&&!this._physicsConstraint._sleeping){this._physicsConstraint.update()}this._localDirty=true}updateByConstraint(){if(this._localDirty){this._localDirty=false;if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){this._updateGlobalTransformMatrix(true)}else if(this._globalDirty){this.global.fromMatrix(this.globalTransformMatrix)}this._transformDirty=true}}forceUpdateTransform(){this._updateGlobalTransformMatrix(true)}invalidUpdate(){this._transformDirty=true}contains(t){if(t===this){return false}let e=t;while(e!==this&&e!==null){e=e.parent}return e===this}get boneData(){return this._boneData}get visible(){return this._visible}set visible(t){if(this._visible===t){return}this._visible=t;for(const e of this._armature.getSlots()){if(e.parent===this){e._updateVisible()}}}get name(){return this._boneData.name}get parent(){return this._parent}}g.Bone=t})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class P extends t.Bone{constructor(){super(...arguments);this._vertices=[];this._deformVertices=[];this._hullCache=[];this._matrixCahce=[]}static toString(){return"[class dragonBones.Surface]"}_onClear(){super._onClear();this._dX=0;this._dY=0;this._k=0;this._kX=0;this._kY=0;this._vertices.length=0;this._deformVertices.length=0;this._matrixCahce.length=0;this._hullCache.length=0;this._bone=null}_getAffineTransform(t,e,a,s,i,r,n,o,l,h,_,f,c){const u=n-i;const m=o-r;const d=l-i;const p=h-r;_.rotation=Math.atan2(m,u);_.skew=Math.atan2(p,d)-Math.PI*.5-_.rotation;if(c){_.rotation+=Math.PI}_.scaleX=Math.sqrt(u*u+m*m)/a;_.scaleY=Math.sqrt(d*d+p*p)/s;_.toMatrix(f);_.x=f.tx=i-(f.a*t+f.c*e);_.y=f.ty=r-(f.b*t+f.d*e)}_updateVertices(){const t=this._armature.armatureData.parent;const e=this._boneData.geometry;const a=t.intArray;const s=t.floatArray;const i=a[e.offset+0];const r=a[e.offset+2];const n=this._vertices;const o=this._deformVertices;if(this._parent!==null){if(this._parent._boneData.type===1){for(let t=0,e=i;t<e;++t){const l=t*2;const h=s[r+l]+o[l];const _=s[r+l+1]+o[l+1];const f=this._parent._getGlobalTransformMatrix(h,_);n[l]=f.a*h+f.c*_+f.tx;n[l+1]=f.b*h+f.d*_+f.ty}}else{const c=this._parent.globalTransformMatrix;for(let t=0,e=i;t<e;++t){const l=t*2;const h=s[r+l]+o[l];const _=s[r+l+1]+o[l+1];n[l]=c.a*h+c.c*_+c.tx;n[l+1]=c.b*h+c.d*_+c.ty}}}else{for(let t=0,e=i;t<e;++t){const l=t*2;n[l]=s[r+l]+o[l];n[l+1]=s[r+l+1]+o[l+1]}}}_updateGlobalTransformMatrix(t){t;const e=this._boneData.segmentX*2;const a=this._vertices.length-2;const s=200;const i=this._vertices[0];const r=this._vertices[1];const n=this._vertices[e];const o=this._vertices[e+1];const l=this._vertices[a];const h=this._vertices[a+1];const _=this._vertices[a-e];const f=this._vertices[a-e+1];const c=i+(l-i)*.5;const u=r+(h-r)*.5;const m=n+(_-n)*.5;const d=o+(f-o)*.5;const p=c+(m-c)*.5;const g=u+(d-u)*.5;const y=n+(l-n)*.5;const D=o+(h-o)*.5;const T=_+(l-_)*.5;const b=f+(h-f)*.5;this._getAffineTransform(0,0,s,s,p,g,y,D,T,b,this.global,this.globalTransformMatrix,false);this._globalDirty=false}_getGlobalTransformMatrix(t,e){const a=200;const s=1e3;if(t<-s||s<t||e<-s||s<e){return this.globalTransformMatrix}let i=false;const r=this._boneData;const n=r.segmentX;const o=r.segmentY;const l=r.segmentX*2;const h=this._dX;const _=this._dY;const f=Math.floor((t+a)/h);const c=Math.floor((e+a)/_);let u=0;let m=f*h-a;let d=c*_-a;const p=this._matrixCahce;const g=P._helpMatrix;if(t<-a){if(e<-a||e>=a){return this.globalTransformMatrix}i=e>this._kX*(t+a)+d;u=((n*o+n+o+o+c)*2+(i?1:0))*7;if(p[u]>0){g.copyFromArray(p,u+1)}else{const y=c*(l+2);const D=this._hullCache[4];const T=this._hullCache[5];const b=this._hullCache[2]-(o-c)*D;const A=this._hullCache[3]-(o-c)*T;const S=this._vertices;if(i){this._getAffineTransform(-a,d+_,s-a,_,S[y+l+2],S[y+l+3],b+D,A+T,S[y],S[y+1],P._helpTransform,g,true)}else{this._getAffineTransform(-s,d,s-a,_,b,A,S[y],S[y+1],b+D,A+T,P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else if(t>=a){if(e<-a||e>=a){return this.globalTransformMatrix}i=e>this._kX*(t-s)+d;u=((n*o+n+c)*2+(i?1:0))*7;if(p[u]>0){g.copyFromArray(p,u+1)}else{const y=(c+1)*(l+2)-2;const D=this._hullCache[4];const T=this._hullCache[5];const b=this._hullCache[0]+c*D;const A=this._hullCache[1]+c*T;const S=this._vertices;if(i){this._getAffineTransform(s,d+_,s-a,_,b+D,A+T,S[y+l+2],S[y+l+3],b,A,P._helpTransform,g,true)}else{this._getAffineTransform(a,d,s-a,_,S[y],S[y+1],b,A,S[y+l+2],S[y+l+3],P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else if(e<-a){if(t<-a||t>=a){return this.globalTransformMatrix}i=e>this._kY*(t-m-h)-s;u=((n*o+f)*2+(i?1:0))*7;if(p[u]>0){g.copyFromArray(p,u+1)}else{const y=f*2;const D=this._hullCache[10];const T=this._hullCache[11];const b=this._hullCache[8]+f*D;const A=this._hullCache[9]+f*T;const S=this._vertices;if(i){this._getAffineTransform(m+h,-a,h,s-a,S[y+2],S[y+3],S[y],S[y+1],b+D,A+T,P._helpTransform,g,true)}else{this._getAffineTransform(m,-s,h,s-a,b,A,b+D,A+T,S[y],S[y+1],P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else if(e>=a){if(t<-a||t>=a){return this.globalTransformMatrix}i=e>this._kY*(t-m-h)+a;u=((n*o+n+o+f)*2+(i?1:0))*7;if(p[u]>0){g.copyFromArray(p,u+1)}else{const y=o*(l+2)+f*2;const D=this._hullCache[10];const T=this._hullCache[11];const b=this._hullCache[6]-(n-f)*D;const A=this._hullCache[7]-(n-f)*T;const S=this._vertices;if(i){this._getAffineTransform(m+h,s,h,s-a,b+D,A+T,b,A,S[y+2],S[y+3],P._helpTransform,g,true)}else{this._getAffineTransform(m,a,h,s-a,S[y],S[y+1],S[y+2],S[y+3],b,A,P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else{i=e>this._k*(t-m-h)+d;u=((n*c+f)*2+(i?1:0))*7;if(p[u]>0){g.copyFromArray(p,u+1)}else{const y=f*2+c*(l+2);const S=this._vertices;if(i){this._getAffineTransform(m+h,d+_,h,_,S[y+l+4],S[y+l+5],S[y+l+2],S[y+l+3],S[y+2],S[y+3],P._helpTransform,g,true)}else{this._getAffineTransform(m,d,h,_,S[y],S[y+1],S[y+2],S[y+3],S[y+l+2],S[y+l+3],P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}return g}init(t,e){if(this._boneData!==null){return}super.init(t,e);const a=t.segmentX;const s=t.segmentY;const i=this._armature.armatureData.parent.intArray[t.geometry.offset+0];const r=1e3;const n=200;this._dX=n*2/a;this._dY=n*2/s;this._k=-this._dY/this._dX;this._kX=-this._dY/(r-n);this._kY=-(r-n)/this._dX;this._vertices.length=i*2;this._deformVertices.length=i*2;this._matrixCahce.length=(a*s+a*2+s*2)*2*7;this._hullCache.length=10;for(let t=0;t<i*2;++t){this._deformVertices[t]=0}if(this._parent!==null){if(this._parent.boneData.type===0){this._bone=this._parent}else{this._bone=this._parent._bone}}}update(t){if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e){this._transformDirty=false}else if(e>=0){this._transformDirty=true;this._cachedFrameIndex=e}else{if(this._hasConstraint){for(const a of this._armature._constraints){if(a._root===this){a.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){this._transformDirty=true;this._cachedFrameIndex=-1}else if(this._cachedFrameIndex>=0){this._transformDirty=false;this._cachedFrameIndices[t]=this._cachedFrameIndex}else{this._transformDirty=true;this._cachedFrameIndex=-1}}}else{if(this._hasConstraint){for(const a of this._armature._constraints){if(a._root===this){a.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){t=-1;this._transformDirty=true;this._cachedFrameIndex=-1}}if(this._transformDirty){this._transformDirty=false;this._childrenTransformDirty=true;for(let t=0,e=this._matrixCahce.length;t<e;t+=7){this._matrixCahce[t]=-1}this._updateVertices();if(this._cachedFrameIndex<0){const l=t>=0;if(this._localDirty){this._updateGlobalTransformMatrix(l)}if(l&&this._cachedFrameIndices!==null){this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global)}}else{this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex)}const s=1e3;const i=200;const r=2*this.global.x;const n=2*this.global.y;const o=P._helpPoint;this.globalTransformMatrix.transformPoint(s,-i,o);this._hullCache[0]=o.x;this._hullCache[1]=o.y;this._hullCache[2]=r-o.x;this._hullCache[3]=n-o.y;this.globalTransformMatrix.transformPoint(0,this._dY,o,true);this._hullCache[4]=o.x;this._hullCache[5]=o.y;this.globalTransformMatrix.transformPoint(i,s,o);this._hullCache[6]=o.x;this._hullCache[7]=o.y;this._hullCache[8]=r-o.x;this._hullCache[9]=n-o.y;this.globalTransformMatrix.transformPoint(this._dX,0,o,true);this._hullCache[10]=o.x;this._hullCache[11]=o.y}else if(this._childrenTransformDirty){this._childrenTransformDirty=false}this._localDirty=true}}t.Surface=P})(dragonBones||(dragonBones={}));var dragonBones;(function(f){class s extends f.BaseObject{constructor(){super(...arguments);this.deformVertices=[]}static toString(){return"[class dragonBones.DisplayFrame]"}_onClear(){this.rawDisplayData=null;this.displayData=null;this.textureData=null;this.display=null;this.deformVertices.length=0}updateDeformVertices(){if(this.rawDisplayData===null||this.deformVertices.length!==0){return}let t;if(this.rawDisplayData.type===2){t=this.rawDisplayData.geometry}else if(this.rawDisplayData.type===4){t=this.rawDisplayData.geometry}else if(this.rawDisplayData.type===5){t=this.rawDisplayData.geometry}else{return}let e=0;if(t.weight!==null){e=t.weight.count*2}else{e=t.data.intArray[t.offset+0]*2}this.deformVertices.length=e;for(let t=0,e=this.deformVertices.length;t<e;++t){this.deformVertices[t]=0}}getGeometryData(){if(this.displayData!==null){if(this.displayData.type===2){return this.displayData.geometry}if(this.displayData.type===4){return this.displayData.geometry}if(this.displayData.type===5){return this.displayData.geometry}}if(this.rawDisplayData!==null){if(this.rawDisplayData.type===2){return this.rawDisplayData.geometry}if(this.rawDisplayData.type===4){return this.rawDisplayData.geometry}if(this.rawDisplayData.type===5){return this.rawDisplayData.geometry}}return null}getShapeData(){if(this.displayData!==null&&this.displayData.type===5){return this.displayData.shape}if(this.rawDisplayData!==null&&this.rawDisplayData.type===5){return this.rawDisplayData.shape}return null}getBoundingBox(){if(this.displayData!==null&&this.displayData.type===3){return this.displayData.boundingBox}if(this.rawDisplayData!==null&&this.rawDisplayData.type===3){return this.rawDisplayData.boundingBox}return null}getTextureData(){if(this.displayData!==null){if(this.displayData.type===0){return this.displayData.texture}if(this.displayData.type===2){return this.displayData.texture}}if(this.textureData!==null){return this.textureData}if(this.rawDisplayData!==null){if(this.rawDisplayData.type===0){return this.rawDisplayData.texture}if(this.rawDisplayData.type===2){return this.rawDisplayData.texture}}return null}}f.DisplayFrame=s;class c extends f.TransformObject{constructor(){super(...arguments);this._localMatrix=new f.Matrix;this._colorTransform=new f.ColorTransform;this._displayFrames=[];this._geometryBones=[];this._rawDisplay=null;this._meshDisplay=null;this._shapeDisplay=null;this._display=null}_onClear(){super._onClear();const t=[];for(const e of this._displayFrames){const a=e.display;if(a!==this._rawDisplay&&a!==this._meshDisplay&&t.indexOf(a)<0){t.push(a)}e.returnToPool()}for(const s of t){if(s instanceof f.Armature){s.dispose()}else{this._disposeDisplay(s,true)}}if(this._meshDisplay!==null&&this._meshDisplay!==this._rawDisplay){this._disposeDisplay(this._meshDisplay,false)}if(this._shapeDisplay!==null&&this._shapeDisplay!==this._rawDisplay){this._disposeDisplay(this._shapeDisplay,false)}if(this._rawDisplay!==null){this._disposeDisplay(this._rawDisplay,false)}this.displayController=null;this._displayDataDirty=false;this._displayDirty=false;this._geometryDirty=false;this._textureDirty=false;this._shapeDirty=false;this._visibleDirty=false;this._blendModeDirty=false;this._zOrderDirty=false;this._colorDirty=false;this._verticesDirty=false;this._transformDirty=false;this._visible=true;this._blendMode=0;this._displayIndex=-1;this._animationDisplayIndex=-1;this._zOrder=0;this._zIndex=0;this._cachedFrameIndex=-1;this._pivotX=0;this._pivotY=0;this._localMatrix.identity();this._colorTransform.identity();this._displayFrames.length=0;this._geometryBones.length=0;this._slotData=null;this._displayFrame=null;this._geometryData=null;this._shapeData=null;this._boundingBoxData=null;this._textureData=null;this._rawDisplay=null;this._meshDisplay=null;this._display=null;this._childArmature=null;this._parent=null;this._cachedFrameIndices=null}_hasDisplay(t){for(const e of this._displayFrames){if(e.display===t){return true}}return false}_isBonesUpdate(){for(const t of this._geometryBones){if(t!==null&&t._childrenTransformDirty){return true}}return false}_updateAlpha(){const t=this._alpha*this._parent._globalAlpha;if(this._globalAlpha!==t){this._globalAlpha=t;this._colorDirty=true}}_updateDisplayData(){const t=this._displayFrame;const e=this._geometryData;const a=this._textureData;const s=this._shapeData;let i=null;let r=null;this._displayFrame=null;this._geometryData=null;this._shapeData=null;this._boundingBoxData=null;this._textureData=null;if(this._displayIndex>=0&&this._displayIndex<this._displayFrames.length){this._displayFrame=this._displayFrames[this._displayIndex];i=this._displayFrame.rawDisplayData;r=this._displayFrame.displayData;this._geometryData=this._displayFrame.getGeometryData();this._boundingBoxData=this._displayFrame.getBoundingBox();this._textureData=this._displayFrame.getTextureData();this._shapeData=this._displayFrame.getShapeData();this._mask=i?i.mask:false;this._maskRange=i?i.maskRange:0}if(this._displayFrame!==t||this._geometryData!==e||this._textureData!==a||this._shapeData!==s){if(this._geometryData===null&&this._textureData!==null){const n=r!==null&&r.type===0?r:i;const o=this._textureData.parent.scale*this._armature._armatureData.scale;const l=this._textureData.frame;this._pivotX=n.pivot.x;this._pivotY=n.pivot.y;const h=l!==null?l:this._textureData.region;let t=h.width;let e=h.height;if(this._textureData.rotated&&l===null){t=h.height;e=h.width}this._pivotX*=t*o;this._pivotY*=e*o;if(i!==null&&n!==i){i.transform.toMatrix(c._helpMatrix);c._helpMatrix.invert();c._helpMatrix.transformPoint(0,0,c._helpPoint);this._pivotX-=c._helpPoint.x;this._pivotY-=c._helpPoint.y;n.transform.toMatrix(c._helpMatrix);c._helpMatrix.invert();c._helpMatrix.transformPoint(0,0,c._helpPoint);this._pivotX+=c._helpPoint.x;this._pivotY+=c._helpPoint.y}if(!f.DragonBones.yDown){this._pivotY=(this._textureData.rotated?this._textureData.region.width:this._textureData.region.height)*o-this._pivotY}}else if(this._shapeData!==null){}else{this._pivotX=0;this._pivotY=0}if(i!==null){this.origin=i.transform}else if(r!==null){this.origin=r.transform}else{this.origin=null}if(this.origin!==null){this.global.copyFrom(this.origin).add(this.offset).toMatrix(this._localMatrix)}else{this.global.copyFrom(this.offset).toMatrix(this._localMatrix)}if(this._geometryData!==e){this._geometryDirty=true;this._verticesDirty=true;if(this._geometryData!==null){this._geometryBones.length=0;if(this._geometryData.weight!==null){for(let t=0,e=this._geometryData.weight.bones.length;t<e;++t){const _=this._armature.getBone(this._geometryData.weight.bones[t].name);this._geometryBones.push(_)}}}else{this._geometryBones.length=0;this._geometryData=null}}if(this._shapeData!==s){this._shapeDirty=true}this._textureDirty=this._textureData!==a;this._transformDirty=true}}_updateDisplay(){const t=this._display!==null?this._display:this._rawDisplay;const e=this._childArmature;if(this._displayFrame!==null){this._display=this._displayFrame.display;if(this._display!==null&&this._display instanceof f.Armature){this._childArmature=this._display;this._display=this._childArmature.display}else{this._childArmature=null}}else{this._display=null;this._childArmature=null}const a=this._display!==null?this._display:this._rawDisplay;if(a!==t){this._textureDirty=true;this._visibleDirty=true;this._blendModeDirty=true;this._colorDirty=true;this._transformDirty=true;this._onUpdateDisplay();this._replaceDisplay(t)}if(this._childArmature!==e){if(e!==null){e._parent=null;e.clock=null;if(e.inheritAnimation){e.animation.reset()}}if(this._childArmature!==null){this._childArmature._parent=this;this._childArmature.clock=this._armature.clock;if(this._childArmature.inheritAnimation){if(this._childArmature.cacheFrameRate===0){const s=this._armature.cacheFrameRate;if(s!==0){this._childArmature.cacheFrameRate=s}}if(this._displayFrame!==null){let t=null;let e=this._displayFrame.displayData!==null?this._displayFrame.displayData:this._displayFrame.rawDisplayData;if(e!==null&&e.type===1){t=e.actions}if(t!==null&&t.length>0){for(const i of t){const r=f.BaseObject.borrowObject(f.EventObject);f.EventObject.actionDataToInstance(i,r,this._armature);r.slot=this;this._armature._bufferAction(r,false)}}else{this._childArmature.animation.play()}}}}}}_updateGlobalTransformMatrix(t){const e=this._parent._boneData.type===0?this._parent.globalTransformMatrix:this._parent._getGlobalTransformMatrix(this.global.x,this.global.y);this.globalTransformMatrix.copyFrom(this._localMatrix);this.globalTransformMatrix.concat(e);if(t){this.global.fromMatrix(this.globalTransformMatrix)}else{this._globalDirty=true}}_setDisplayIndex(t,e=false){if(e){if(this._animationDisplayIndex===t){return}this._animationDisplayIndex=t}if(this._displayIndex===t){return}this._displayIndex=t<this._displayFrames.length?t:this._displayFrames.length-1;this._displayDataDirty=true;this._displayDirty=this._displayIndex<0||this._display!==this._displayFrames[this._displayIndex].display}_setZOrder(t){if(this._zOrder===t){}this._zOrder=t;this._zOrderDirty=true;return this._zOrderDirty}_setColor(t){this._colorTransform.copyFrom(t);return this._colorDirty=true}init(t,e,a,s,i){if(this._slotData!==null){return}this._slotData=t;this._colorDirty=true;this._blendModeDirty=true;this._blendMode=this._slotData.blendMode;this._zOrder=this._slotData.zOrder;this._zIndex=this._slotData.zIndex;this._alpha=this._slotData.alpha;this._colorTransform.copyFrom(this._slotData.color);this._rawDisplay=a;this._meshDisplay=s;this._shapeDisplay=i;this._armature=e;const r=this._armature.getBone(this._slotData.parent.name);if(r!==null){this._parent=r}else{}this._armature._addSlot(this);this._initDisplay(this._rawDisplay,false);if(this._rawDisplay!==this._meshDisplay){this._initDisplay(this._meshDisplay,false)}if(this._rawDisplay!==this._shapeDisplay){this._initDisplay(this._shapeDisplay,false)}this._onUpdateDisplay();this._addDisplay()}update(t){if(this._displayDataDirty){this._updateDisplayData();this._displayDataDirty=false}if(this._displayDirty){this._updateDisplay();this._displayDirty=false}if(this._geometryDirty||this._textureDirty){if(this._display===null||this._display===this._rawDisplay||this._display===this._meshDisplay){this._updateFrame()}this._geometryDirty=false;this._textureDirty=false}if(this._display===null){return}if(this._visibleDirty){this._updateVisible();this._visibleDirty=false}if(this._blendModeDirty){this._updateBlendMode();this._blendModeDirty=false}if(this._colorDirty){this._updateColor();this._colorDirty=false}if(this._maskDirty){this._updateMask();this._maskDirty=false}if(this._zOrderDirty){this._updateZOrder();this._zOrderDirty=false;this._maskDirty=true}if(this._geometryData!==null&&this._display===this._meshDisplay){const e=this._geometryData.weight!==null;const a=this._parent._boneData.type!==0;if(this._verticesDirty||e&&this._isBonesUpdate()||a&&this._parent._childrenTransformDirty){this._verticesDirty=false;this._updateMesh()}if(e||a){return}}if(this._shapeData!==null&&this._display===this._shapeDisplay){let t=false;if(this._geometryData&&this._geometryData.weight){t=true}if(this._shapeDirty||this._verticesDirty||t&&this._isBonesUpdate()){this._verticesDirty=false;this._shapeDirty=false;this._updateShape()}if(t){return}}if(t>=0&&this._cachedFrameIndices!==null){const s=this._cachedFrameIndices[t];if(s>=0&&this._cachedFrameIndex===s){this._transformDirty=false}else if(s>=0){this._transformDirty=true;this._cachedFrameIndex=s}else if(this._transformDirty||this._parent._childrenTransformDirty){this._transformDirty=true;this._cachedFrameIndex=-1}else if(this._cachedFrameIndex>=0){this._transformDirty=false;this._cachedFrameIndices[t]=this._cachedFrameIndex}else{this._transformDirty=true;this._cachedFrameIndex=-1}}else if(this._transformDirty||this._parent._childrenTransformDirty){t=-1;this._transformDirty=true;this._cachedFrameIndex=-1}if(this._transformDirty){if(this._cachedFrameIndex<0){const i=t>=0;this._updateGlobalTransformMatrix(i);if(i&&this._cachedFrameIndices!==null){this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global)}}else{this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex)}this._updateTransform();this._transformDirty=false}}invalidUpdate(){this._displayDataDirty=true;this._displayDirty=true;this._transformDirty=true}updateTransformAndMatrix(){if(this._transformDirty){this._updateGlobalTransformMatrix(false);this._transformDirty=false}}replaceRawDisplayData(t,e=-1){if(e<0){e=this._displayIndex<0?0:this._displayIndex}else if(e>=this._displayFrames.length){return}const a=this._displayFrames[e];if(a.rawDisplayData!==t){a.deformVertices.length=0;a.rawDisplayData=t;if(a.rawDisplayData===null){const s=this._armature._armatureData.defaultSkin;if(s!==null){const i=s.getDisplays(this._slotData.name);if(i!==null&&e<i.length){a.rawDisplayData=i[e]}}}if(e===this._displayIndex){this._displayDataDirty=true}}}replaceDisplayData(t,e=-1){if(e<0){e=this._displayIndex<0?0:this._displayIndex}else if(e>=this._displayFrames.length){return}const a=this._displayFrames[e];if(a.displayData!==t&&a.rawDisplayData!==t){a.displayData=t;if(e===this._displayIndex){this._displayDataDirty=true}}}replaceTextureData(t,e=-1){if(e<0){e=this._displayIndex<0?0:this._displayIndex}else if(e>=this._displayFrames.length){return}const a=this._displayFrames[e];if(a.textureData!==t){a.textureData=t;if(e===this._displayIndex){this._displayDataDirty=true}}}replaceDisplay(t,e=-1){if(e<0){e=this._displayIndex<0?0:this._displayIndex}else if(e>=this._displayFrames.length){return}const a=this._displayFrames[e];if(a.display!==t){const s=a.display;a.display=t;if(s!==null&&s!==this._rawDisplay&&s!==this._meshDisplay&&!this._hasDisplay(s)){if(s instanceof f.Armature){}else{this._disposeDisplay(s,true)}}if(t!==null&&t!==this._rawDisplay&&t!==this._meshDisplay&&!this._hasDisplay(s)&&!(t instanceof f.Armature)){this._initDisplay(t,true)}if(e===this._displayIndex){this._displayDirty=true}}}containsPoint(t,e){if(this._boundingBoxData===null){return false}this.updateTransformAndMatrix();c._helpMatrix.copyFrom(this.globalTransformMatrix);c._helpMatrix.invert();c._helpMatrix.transformPoint(t,e,c._helpPoint);return this._boundingBoxData.containsPoint(c._helpPoint.x,c._helpPoint.y)}intersectsSegment(t,e,a,s,i=null,r=null,n=null){if(this._boundingBoxData===null){return 0}this.updateTransformAndMatrix();c._helpMatrix.copyFrom(this.globalTransformMatrix);c._helpMatrix.invert();c._helpMatrix.transformPoint(t,e,c._helpPoint);t=c._helpPoint.x;e=c._helpPoint.y;c._helpMatrix.transformPoint(a,s,c._helpPoint);a=c._helpPoint.x;s=c._helpPoint.y;const o=this._boundingBoxData.intersectsSegment(t,e,a,s,i,r,n);if(o>0){if(o===1||o===2){if(i!==null){this.globalTransformMatrix.transformPoint(i.x,i.y,i);if(r!==null){r.x=i.x;r.y=i.y}}else if(r!==null){this.globalTransformMatrix.transformPoint(r.x,r.y,r)}}else{if(i!==null){this.globalTransformMatrix.transformPoint(i.x,i.y,i)}if(r!==null){this.globalTransformMatrix.transformPoint(r.x,r.y,r)}}if(n!==null){this.globalTransformMatrix.transformPoint(Math.cos(n.x),Math.sin(n.x),c._helpPoint,true);n.x=Math.atan2(c._helpPoint.y,c._helpPoint.x);this.globalTransformMatrix.transformPoint(Math.cos(n.y),Math.sin(n.y),c._helpPoint,true);n.y=Math.atan2(c._helpPoint.y,c._helpPoint.x)}}return o}getDisplayFrameAt(t){return this._displayFrames[t]}get visible(){return this._visible}set visible(t){if(this._visible===t){return}this._visible=t;this._updateVisible()}get displayFrameCount(){return this._displayFrames.length}set displayFrameCount(e){const a=this._displayFrames.length;if(a<e){this._displayFrames.length=e;for(let t=a;t<e;++t){this._displayFrames[t]=f.BaseObject.borrowObject(s)}}else if(a>e){for(let t=a-1;t<e;--t){this.replaceDisplay(null,t);this._displayFrames[t].returnToPool()}this._displayFrames.length=e}}get displayIndex(){return this._displayIndex}set displayIndex(t){this._setDisplayIndex(t);this.update(-1)}get name(){return this._slotData.name}get displayList(){const t=new Array;for(const e of this._displayFrames){t.push(e.display)}return t}set displayList(t){this.displayFrameCount=t.length;let e=0;for(const a of t){this.replaceDisplay(a,e++)}}get slotData(){return this._slotData}get boundingBoxData(){return this._boundingBoxData}get rawDisplay(){return this._rawDisplay}get meshDisplay(){return this._meshDisplay}get shapeDisplay(){return this._shapeDisplay}get display(){return this._display}set display(t){if(this._display===t){return}if(this._displayFrames.length===0){this.displayFrameCount=1;this._displayIndex=0}this.replaceDisplay(t,this._displayIndex)}get childArmature(){return this._childArmature}set childArmature(t){if(this._childArmature===t){return}this.display=t}get parent(){return this._parent}getDisplay(){return this._display}setDisplay(t){this.display=t}}f.Slot=c})(dragonBones||(dragonBones={}));var dragonBones;(function(N){class t extends N.BaseObject{_onClear(){this._armature=null;this._target=null;this._root=null;this._bone=null}get name(){return this._constraintData.name}}t._helpMatrix=new N.Matrix;t._helpTransform=new N.Transform;t._helpPoint=new N.Point;N.Constraint=t;class e extends t{static toString(){return"[class dragonBones.IKConstraint]"}_onClear(){super._onClear();this._bendPositive=false;this._weight=1;this._constraintData=null}_computeA(){const t=this._target.global;const e=this._root.global;const a=this._root.globalTransformMatrix;let s=Math.atan2(t.y-e.y,t.x-e.x);if(e.scaleX<0){s+=Math.PI}e.rotation+=N.Transform.normalizeRadian(s-e.rotation)*this._weight;e.toMatrix(a)}_computeB(){const t=this._bone._boneData.length;const e=this._root;const a=this._target.global;const s=e.global;const i=this._bone.global;const r=this._bone.globalTransformMatrix;const n=r.a*t;const o=r.b*t;const l=n*n+o*o;const h=Math.sqrt(l);let _=i.x-s.x;let f=i.y-s.y;const c=_*_+f*f;const u=Math.sqrt(c);const m=i.rotation;const d=s.rotation;const p=Math.atan2(f,_);_=a.x-s.x;f=a.y-s.y;const g=_*_+f*f;const y=Math.sqrt(g);let D=0;if(h+u<=y||y+h<=u||y+u<=h){D=Math.atan2(a.y-s.y,a.x-s.x);if(h+u<=y){}else if(u<h){D+=Math.PI}}else{const S=(c-l+g)/(2*g);const P=Math.sqrt(c-S*S*g)/y;const O=s.x+_*S;const x=s.y+f*S;const B=-f*P;const E=_*P;let t=false;const I=e.parent;if(I!==null){const M=I.globalTransformMatrix;t=M.a*M.d-M.b*M.c<0}if(t!==this._bendPositive){i.x=O-B;i.y=x-E}else{i.x=O+B;i.y=x+E}D=Math.atan2(i.y-s.y,i.x-s.x)}const T=N.Transform.normalizeRadian(D-p);s.rotation=d+T*this._weight;s.toMatrix(e.globalTransformMatrix);const b=p+T*this._weight;i.x=s.x+Math.cos(b)*u;i.y=s.y+Math.sin(b)*u;let A=Math.atan2(a.y-i.y,a.x-i.x);if(i.scaleX<0){A+=Math.PI}i.rotation=s.rotation+m-d+N.Transform.normalizeRadian(A-T-m)*this._weight;i.toMatrix(r)}init(t,e){if(this._constraintData!==null){return}this._constraintData=t;this._armature=e;this._target=this._armature.getBone(this._constraintData.target.name);this._root=this._armature.getBone(this._constraintData.root.name);this._bone=this._constraintData.bone!==null?this._armature.getBone(this._constraintData.bone.name):null;{const a=this._constraintData;this._bendPositive=a.bendPositive;this._weight=a.weight}this._root._hasConstraint=true}update(){this._root.updateByConstraint();if(this._bone!==null){this._bone.updateByConstraint();this._computeB()}else{this._computeA()}}invalidUpdate(){this._root.invalidUpdate();if(this._bone!==null){this._bone.invalidUpdate()}}}N.IKConstraint=e;class a extends t{constructor(){super(...arguments);this._helpMatrix1=new N.Matrix;this._helpMatrix2=new N.Matrix;this._helpTransform=new N.Transform;this._dirty=true;this.index=-1}static toString(){return"[class dragonBones.TransformConstraint]"}_onClear(){super._onClear();this._constraintData=null;this.index=-1}init(t,e){if(this._constraintData!==null){return}if(this.index<0){return}this._constraintData=t;this._armature=e;this._target=this._armature.getBone(this._constraintData.target.name);const a=this._constraintData;const s=a.bones[this.index].name;this._bone=this._armature.getBone(s);if(!this._bone){return}this._rotateWeight=a.rotateWeight;this._scaleWeight=a.scaleWeight;this._translateWeight=a.translateWeight;this._root=this._bone;this._root._transformConstraint=this;this._target._targetTransformConstraint=this}update(){if(!this._dirty){return}if(!this._root||!this._target||!this._bone){return}if(this._bone!==null){this._compute()}this._dirty=false}_compute(){if(this._target&&this._root){if(this._scaleWeight===0&&this._rotateWeight===0&&this._translateWeight===0){return}const t=this._constraintData;const{offsetX:e,offsetY:a,offsetRotation:s,offsetScaleX:i,offsetScaleY:r,local:n}=t;const o=this._root.globalTransformMatrix;this._root.global.fromMatrix(o);if(n){const l=this._target.globalTransformMatrix;const h=this._helpMatrix1.copyFrom(l);if(this._target.parent){const f=this._helpMatrix2.copyFrom(this._target.parent.globalTransformMatrix);const c=f.invert();h.concat(c)}const _=this._helpTransform.fromMatrix(h);if(this._translateWeight!==0){this._root.global.x=this._root.global.x*(1-this._translateWeight)+(_.x+e)*this._translateWeight;this._root.global.y=this._root.global.y*(1-this._translateWeight)+(_.y+a)*this._translateWeight}if(this._rotateWeight!==0){this._root.global.rotation=this._root.global.rotation*(1-this._rotateWeight)+(_.rotation+s)*this._rotateWeight}if(this._scaleWeight!==0){this._root.global.scaleX=this._root.global.scaleX*(1-this._scaleWeight)+(_.scaleX+i)*this._scaleWeight;this._root.global.scaleY=this._root.global.scaleY*(1-this._scaleWeight)+(_.scaleY+r)*this._scaleWeight}this._root.global.toMatrix(o)}else{const u=this._helpTransform.fromMatrix(this._target.globalTransformMatrix);if(this._translateWeight!==0){this._root.global.x=this._root.global.x*(1-this._translateWeight)+(u.x+e)*this._translateWeight;this._root.global.y=this._root.global.y*(1-this._translateWeight)+(u.y+a)*this._translateWeight}if(this._rotateWeight!==0){this._root.global.rotation=this._root.global.rotation*(1-this._rotateWeight)+(u.rotation+s)*this._rotateWeight}if(this._scaleWeight!==0){this._root.global.scaleX=this._root.global.scaleX*(1-this._scaleWeight)+(u.scaleX+i)*this._scaleWeight;this._root.global.scaleY=this._root.global.scaleY*(1-this._scaleWeight)+(u.scaleY+r)*this._scaleWeight}this._root.global.toMatrix(o)}}}invalidUpdate(){if(this._root){this._root.invalidUpdate()}}}N.TransformConstraint=a;class s extends t{constructor(){super(...arguments);this._sleeping=false;this._massInverse=0;this._fpsTime=0;this._dump=0;this._remaining=0;this._lastTime=0;this._xOffset=0;this._xVelocity=0;this._yOffset=0;this._yVelocity=0;this._rotateOffset=0;this._rotateVelocity=0;this._scaleOffset=0;this._scaleVelocity=0;this._lastReset=false;this._by=0;this._bx=0;this._cx=0;this._cy=0;this._tx=0;this._ty=0;this.PI2=N.Transform.PI_D;this.PI1_2=1/this.PI2}static toString(){return"[class dragonBones.PhysicsConstraint]"}_onClear(){super._onClear();this._constraintData=null}init(t,e){if(this._constraintData!==null){return}this._constraintData=t;this._armature=e;this._target=this._armature.getBone(this._constraintData.target.name);if(this._target){this._target._physicsConstraint=this}const a=this._constraintData;this._inertia=a.inertia;this._strength=a.strength;this._damping=a.damping;this._mass=a.mass;this._wind=a.wind;this._windDisturbance=a.windDisturbance||0;this._gravity=a.gravity;this._weight=a.weight;this._fpsTime=1/a.fps;this._massInverse=1/this._mass;this._dump=1-this._damping;this._reset=true}isNumberEqual(t,e,a=.001){if(t+a>=e&&t-a<=e){return true}return false}update(){if(this._sleeping){return}const f=this._constraintData;if(this._armature.clock){const c=this._target;const e=f.x>0;const a=f.y>0;const u=f.rotate>0||f.shearX>0;const m=f.scaleX>0;const d=c.boneData.length;const p=(Math.random()*2-1)*this._windDisturbance;if(this._reset){this.reset();this._reset=false;this._lastReset=true}else{this._sleeping=true;const i=this._armature.clock.time;const r=Math.max(i-this._lastTime,0);this._remaining+=r;this._lastTime=i;const n=c.global.x;const y=c.global.y;if(this._lastReset){this._lastReset=false;this._bx=n;this._by=y}else{const D=100;const T=1;const b=1;const A=N.DragonBones.yDown;let t=this._remaining;let o=D;let l=-1;let h=f.limit*r;let _=h*Math.abs(T);h*=Math.abs(b);if(e||a){if(e){const S=(this._bx-n)*this._inertia;this._xOffset+=S>h?h:S<-h?-h:S;this._bx=n}if(a){const S=(this._by-y)*this._inertia;this._yOffset+=S>_?_:S<-_?-_:S;this._by=y}if(t>=this._fpsTime){l=this._dump;const P=(this._wind+p)*o*T;const O=this._gravity*o*b;do{if(e){const x=(P-this._xOffset*this._strength)*this._massInverse*this._fpsTime;this._xVelocity+=x;const B=this._xVelocity*this._fpsTime;this._xOffset+=B;this._xVelocity*=l}if(a){this._yVelocity+=(O-this._yOffset*this._strength)*this._massInverse*this._fpsTime;this._yOffset+=this._yVelocity*this._fpsTime;this._yVelocity*=l}t-=this._fpsTime}while(t>=this._fpsTime)}if(e){let t=this._xOffset*this._weight*f.x;if(Math.abs(t)>f.limit){t=t>0?f.limit:-f.limit}c.global.x+=t;if(!this.isNumberEqual(t,0)){this._sleeping=false}}if(a){let t=this._yOffset*this._weight*f.y;if(Math.abs(t)>f.limit){t=t>0?f.limit:-f.limit}c.global.y+=t;if(!this.isNumberEqual(t,0)){this._sleeping=false}}}if(u||m){const g=c.globalTransformMatrix;let e=Math.atan2(g.c,g.a);let a=0;let s=0;let i=0;let r=this._cx-c.global.x;let n=this._cy-c.global.y;if(r>h)r=h;else if(r<-h)r=-h;if(n>_)n=_;else if(n<-_)n=-_;if(u){i=(f.rotate+f.shearX)*this._weight;let t=Math.atan2(n+this._ty,r+this._tx)-e-this._rotateOffset*i;t=t-Math.ceil(t*this.PI1_2-.5)*this.PI2;const E=t*this._inertia;if(!this.isNumberEqual(E,0,1e-4)){this._sleeping=false}this._rotateOffset+=E;t=this._rotateOffset*i+e;a=Math.cos(t);s=Math.sin(t);if(m){t=d*c.global.scaleX;if(t>0){this._scaleOffset+=(r*a+n*s)*this._inertia/t}}}else{a=Math.cos(e);s=Math.sin(e);const I=d*c.global.scaleX;if(I>0){this._scaleOffset+=(r*a+n*s)*this._inertia/I}}t=this._remaining;if(t>=this._fpsTime){if(l==-1){l=this._dump}const M=this._massInverse*this._fpsTime;const C=this._strength;const F=this._wind+p;const w=A?this._gravity:-this._gravity;const v=d/o;while(true){t-=this._fpsTime;if(m){this._scaleVelocity+=(F*a-w*s-this._scaleOffset*C)*M;this._scaleOffset+=this._scaleVelocity*this._fpsTime;this._scaleVelocity*=l}if(u){this._rotateVelocity-=((F*s+w*a)*v+this._rotateOffset*C)*M;this._rotateOffset+=this._rotateVelocity*this._fpsTime;if(Math.abs(this._rotateOffset)>this.PI2){this._rotateOffset=this._rotateOffset>0?this.PI2:-this.PI2}if(!this.isNumberEqual(this._rotateVelocity,0,1e-4)){this._sleeping=false}this._rotateVelocity*=l;if(t<this._fpsTime){break}const I=this._rotateOffset*i+e;a=Math.cos(I);s=Math.sin(I)}else if(t<this._fpsTime)break}}}this._remaining=t}this._cx=c.global.x;this._cy=c.global.y}const g=this._target.globalTransformMatrix;if(u){let e=this._rotateOffset*this._weight,a=0,s=0,i=0;if(f.shearX>0){let t=0;if(f.rotate>0){t=e*f.rotate;a=Math.sin(t);s=Math.cos(t);i=g.b;g.b=s*i-a*g.d;g.d=a*i+s*g.d}t+=e*f.shearX;a=Math.sin(t);s=Math.cos(t);i=g.a;g.a=s*i-a*g.c;g.c=a*i+s*g.c}else{e*=f.rotate;a=Math.sin(e);s=Math.cos(e);i=g.a;g.a=s*i-a*g.c;g.c=a*i+s*g.c;i=g.b;g.b=s*i-a*g.d;g.d=a*i+s*g.d}}if(m){const o=1+this._scaleOffset*this._weight*f.scaleX;g.a*=o;g.c*=o}this._tx=d*g.a;this._ty=d*g.c;g.tx=c.global.x;g.ty=c.global.y;const t=c.global.rotation;const s=c.global.skew;c.global.fromMatrix(g);if(!this.isNumberEqual(t,c.global.rotation)||!this.isNumberEqual(s,c.global.skew)){this._sleeping=false}}}reset(){this._remaining=0;this._lastTime=this._armature.clock?this._armature.clock.time:0;this._xOffset=0;this._xVelocity=0;this._yOffset=0;this._yVelocity=0;this._rotateOffset=0;this._rotateVelocity=0;this._scaleOffset=0;this._scaleVelocity=0}invalidUpdate(){if(this._root){this._root.invalidUpdate()}}}N.PhysicsConstraint=s;class i extends t{constructor(){super(...arguments);this._bones=[];this._spaces=[];this._positions=[];this._curves=[];this._boneLengths=[];this._pathGlobalVertices=[];this._segments=[10]}static toString(){return"[class dragonBones.PathConstraint]"}_onClear(){super._onClear();this.dirty=false;this.pathOffset=0;this.position=0;this.spacing=0;this.rotateOffset=0;this.rotateWeight=1;this.xWeight=1;this.yWeight=1;this._pathSlot=null;this._bones.length=0;this._spaces.length=0;this._positions.length=0;this._curves.length=0;this._boneLengths.length=0;this._pathGlobalVertices.length=0}_updatePathVertices(t,e){const a=this._armature;const s=a.armatureData.parent;const o=a.armatureData.scale;const l=s.intArray;const h=s.floatArray;const i=t.offset;const _=l[i+0];const r=l[i+2];this._pathGlobalVertices.length=_*2;const f=t.weight;if(f===null){const n=this._pathSlot.parent;n.updateByConstraint();const c=n.globalTransformMatrix;if(e&&e.deformVertices&&e.deformVertices.length===_*2){const u=e.deformVertices;for(let t=0,e=r;t<_*2;t+=2){const m=(h[e++]+u[t])*o;const d=(h[e++]+u[t+1])*o;const p=c.a*m+c.c*d+c.tx;const g=c.b*m+c.d*d+c.ty;this._pathGlobalVertices[t]=p;this._pathGlobalVertices[t+1]=g}}else{for(let t=0,e=r;t<_*2;t+=2){const m=h[e++]*o;const d=h[e++]*o;const p=c.a*m+c.c*d+c.tx;const g=c.b*m+c.d*d+c.ty;this._pathGlobalVertices[t]=p;this._pathGlobalVertices[t+1]=g}}return}else{const y=this._pathSlot._geometryBones;const D=f.bones.length;const u=e&&e.deformVertices;const T=u&&u.length>0;const b=f.offset;const A=l[b+1];let i=A;let r=b+2+D;let n=0;for(let t=0,e=0;t<_;t++){const S=l[r++];let a=0,s=0;for(let t=0,e=S;t<e;t++){const P=l[r++];const O=y[P];if(O===null){continue}const c=O.globalTransformMatrix;const x=h[i++];let t=h[i++]*o;let e=h[i++]*o;if(T&&u){t+=u[n++];e+=u[n++]}a+=(c.a*t+c.c*e+c.tx)*x;s+=(c.b*t+c.d*e+c.ty)*x}this._pathGlobalVertices[e++]=a;this._pathGlobalVertices[e++]=s}}}_computeVertices(a,s,i,r){for(let t=i,e=a;t<s;t+=2){r[t]=this._pathGlobalVertices[e++];r[t+1]=this._pathGlobalVertices[e++]}}_computeBezierCurve(t,r,V,e,a){const s=this._armature;const L=s.armatureData.parent.intArray;const Y=L[t.geometry.offset+0];const n=this._positions;const o=this._spaces;const l=t.closed;const h=Array();let i=Y*2;let _=i/6;let f=-1;let c=this.position;n.length=r*3+2;let u=t.curveLengths[t.curveLengths.length-1];if(!t.constantSpeed){const w=t.curveLengths;_-=l?1:1;if(e){c*=u}if(a){for(let t=0;t<r;t++){o[t]*=u}}h.length=10;for(let e=0,a=0,s=0;e<r;e++,a+=3){const v=o[e];c+=v;let t=0;if(l){c%=u;if(c<0){c+=u}s=0}if(c<0){t=c/u;s=0}else if(c>u){t=c/u;s=_-1}else{for(;;s++){const N=w[s];if(c>N){continue}if(s===0){t=c/N}else{const R=w[s-1];t=(c-R)/(N-R)}break}}if(s!==f){f=s;if(l&&s===_){this._computeVertices(i-4,4,0,h);this._computeVertices(0,10,4,h)}else{this._computeVertices(s*6+2,10,0,h)}}this.addCurvePosition2(t,h,n,a,V,u)}return}if(l){i+=2;h.length=Y;this._computeVertices(2,i-4,0,h);this._computeVertices(0,2,i-4,h);h[i-2]=h[0];h[i-1]=h[1]}else{_--;i-=4;h.length=i;this._computeVertices(2,i,0,h)}let m=new Array(_);u=0;let d=h[0],p=h[1],g=0,y=0,D=0,T=0,b=0,A=0;let S,P,O,x,B,E,I,M;for(let t=0,e=2;t<_;t++,e+=6){g=h[e];y=h[e+1];D=h[e+2];T=h[e+3];b=h[e+4];A=h[e+5];S=(d-g*2+D)*.1875;P=(p-y*2+T)*.1875;O=((g-D)*3-d+b)*.09375;x=((y-T)*3-p+A)*.09375;B=S*2+O;E=P*2+x;I=(g-d)*.75+S+O*.16666667;M=(y-p)*.75+P+x*.16666667;u+=Math.sqrt(I*I+M*M);I+=B;M+=E;B+=O;E+=x;u+=Math.sqrt(I*I+M*M);I+=B;M+=E;u+=Math.sqrt(I*I+M*M);I+=B+O;M+=E+x;u+=Math.sqrt(I*I+M*M);m[t]=u;d=b;p=A}if(e){c*=u}if(a){for(let t=0;t<r;t++){o[t]*=u}}let C=this._segments;let F=0;for(let e=0,a=0,s=0,i=0;e<r;e++,a+=3){const v=o[e];c+=v;let t=c;if(l){t%=u;if(t<0)t+=u;s=0}else if(t<0){continue}else if(t>u){continue}for(;;s++){const k=m[s];if(t>k)continue;if(s===0)t/=k;else{const j=m[s-1];t=(t-j)/(k-j)}break}if(s!==f){f=s;let t=s*6;d=h[t];p=h[t+1];g=h[t+2];y=h[t+3];D=h[t+4];T=h[t+5];b=h[t+6];A=h[t+7];S=(d-g*2+D)*.03;P=(p-y*2+T)*.03;O=((g-D)*3-d+b)*.006;x=((y-T)*3-p+A)*.006;B=S*2+O;E=P*2+x;I=(g-d)*.3+S+O*.16666667;M=(y-p)*.3+P+x*.16666667;F=Math.sqrt(I*I+M*M);C[0]=F;for(t=1;t<8;t++){I+=B;M+=E;B+=O;E+=x;F+=Math.sqrt(I*I+M*M);C[t]=F}I+=B;M+=E;F+=Math.sqrt(I*I+M*M);C[8]=F;I+=B+O;M+=E+x;F+=Math.sqrt(I*I+M*M);C[9]=F;i=0}t*=F;for(;;i++){const k=C[i];if(t>k)continue;if(i===0)t/=k;else{const j=C[i-1];t=i+(t-j)/(k-j)}break}this.addCurvePosition(t*.1,d,p,g,y,D,T,b,A,n,a,V)}}addCurvePosition(t,e,a,s,i,r,n,o,l,h,_,f){if(t===0){h[_]=e;h[_+1]=a;h[_+2]=0;return}if(t===1){h[_]=o;h[_+1]=l;h[_+2]=0;return}const c=1-t;const u=c*c;const m=t*t;const d=u*c;const p=u*t*3;const g=c*m*3;const y=t*m;const D=d*e+p*s+g*r+y*o;const T=d*a+p*i+g*n+y*l;h[_]=D;h[_+1]=T;if(f){h[_+2]=Math.atan2(T-(d*a+p*i+g*n),D-(d*e+p*s+g*r))}else{h[_+2]=0}}addCurvePosition2(t,e,a,s,i,r){if(e.length!==10){a[s]=0;a[s+1]=0;a[s+2]=0;return}const n=e[0];const o=e[1];const l=e[2];const h=e[3];const _=e[4];const f=e[5];const c=e[6];const u=e[7];const m=e[8];const d=e[9];if(t<0){const S=h-o;const P=l-n;const O=Math.atan2(S,P);const x=r*t;a[s]=n+x*Math.cos(O);a[s+1]=o+x*Math.sin(O);a[s+2]=O;return}if(t>1){const S=d-u;const P=m-c;const O=Math.atan2(S,P);const x=r*(1-t);a[s]=c+x*Math.cos(O);a[s+1]=u+x*Math.sin(O);a[s+2]=O}if(t===0){a[s]=n;a[s+1]=o;const S=h-o;const P=l-n;a[s+2]=Math.atan2(S,P);return}if(t===1){a[s]=c;a[s+1]=u;const S=d-u;const P=m-c;a[s+2]=Math.atan2(S,P);return}const p=1-t;const g=p*p;const y=g*p;const D=t*t;const T=D*t;const b=y*n+3*g*t*l+3*p*D*_+T*c;const A=y*o+3*g*t*h+3*p*D*f+T*u;a[s]=b;a[s+1]=A;if(i){const P=3*((l-n)*g+2*(_-l)*p*t+(c-_)*D);const S=3*((h-o)*g+2*(f-h)*p*t+(u-f)*D);a[s+2]=Math.atan2(S,P)}else{a[s+2]=0}}init(t,e){this._constraintData=t;this._armature=e;let a=t;this.pathOffset=a.pathDisplayData.geometry.offset;this.position=a.position;this.spacing=a.spacing;this.rotateOffset=a.rotateOffset;this.rotateWeight=a.rotateWeight;this.xWeight=a.xWeight;this.yWeight=a.yWeight;this._root=this._armature.getBone(a.root.name);this._target=this._armature.getBone(a.target.name);this._pathSlot=this._armature.getSlot(a.pathSlot.name);for(let t=0,e=a.bones.length;t<e;t++){const s=this._armature.getBone(a.bones[t].name);if(s!==null){this._bones.push(s)}}if(a.rotateMode===2){this._boneLengths.length=this._bones.length}this._root._hasConstraint=true}update(){const t=this._pathSlot;if(t._geometryData===null||t._geometryData.offset!==this.pathOffset){return}const e=this._constraintData;let a=false;if(this._root._childrenTransformDirty){this._updatePathVertices(t._geometryData,t._displayFrame);a=true}else if(t._verticesDirty||t._isBonesUpdate()){this._updatePathVertices(t._geometryData,t._displayFrame);t._verticesDirty=false;a=true}if(!a&&!this.dirty){return}const s=e.positionMode;const i=e.spacingMode;const r=e.rotateMode;const n=this._bones;const o=i===0;const _=r===2;const f=r===0;const l=n.length;const h=f?l:l+1;const c=this.spacing;let u=this._spaces;u.length=h;if(_||o){u[0]=0;for(let t=0,e=h-1;t<e;t++){const A=n[t];A.updateByConstraint();const S=A._boneData.length;const P=A.globalTransformMatrix;const O=S*P.a;const x=S*P.b;const B=Math.sqrt(O*O+x*x);if(_){this._boneLengths[t]=B}u[t+1]=(S+c)*B/S}}else{for(let t=0;t<h;t++){if(i===2){if(t===0){u[0]=0}else{u[t]=c*.01}}}}this._computeBezierCurve(t._displayFrame.rawDisplayData,h,f,s===1,i===2);const m=this._positions;let d=this.rotateOffset;let p=m[0],g=m[1];let y;if(d===0){y=r===1}else{y=false;const A=t.parent;if(A!==null){const P=A.globalTransformMatrix;d*=P.a*P.d-P.b*P.c>0?N.Transform.DEG_RAD:-N.Transform.DEG_RAD}}const D=this.rotateWeight;const T=this.xWeight;const b=this.yWeight;for(let t=0,h=3;t<l;t++,h+=3){let o=n[t];o.forceUpdateTransform();o.updateByConstraint();let l=o.globalTransformMatrix;l.tx+=(p-l.tx)*T;l.ty+=(g-l.ty)*b;const O=m[h],x=m[h+1];const E=O-p,I=x-g;if(_){const M=this._boneLengths[t];const C=(Math.sqrt(E*E+I*I)/M-1)*D+1;l.a*=C;l.b*=C}p=O;g=x;if(D>0){let t=l.a,e=l.b,a=l.c,s=l.d,i,r,n;if(f){i=m[h-1]}else{i=Math.atan2(I,E)}i-=Math.atan2(e,t);if(y){r=Math.cos(i);n=Math.sin(i);const F=o._boneData.length;p+=(F*(r*t-n*e)-E)*D;g+=(F*(n*t+r*e)-I)*D}else{i+=d}if(i>N.Transform.PI){i-=N.Transform.PI_D}else if(i<-N.Transform.PI){i+=N.Transform.PI_D}i*=D;r=Math.cos(i);n=Math.sin(i);l.a=r*t-n*e;l.b=n*t+r*e;l.c=r*a-n*s;l.d=n*a+r*s}o.global.fromMatrix(l)}this.dirty=false}invalidUpdate(){}}N.PathConstraint=i})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=0){this.time=0;this.timeScale=1;this._systemTime=0;this._animatebles=[];this._clock=null;this.time=t;this._systemTime=(new Date).getTime()*.001}advanceTime(t){if(t!==t){t=0}const e=Date.now()*.001;if(t<0){t=e-this._systemTime}this._systemTime=e;if(this.timeScale!==1){t*=this.timeScale}if(t===0){return}if(t<0){this.time-=t}else{this.time+=t}let a=0,s=0,i=this._animatebles.length;for(;a<i;++a){const r=this._animatebles[a];if(r!==null){if(s>0){this._animatebles[a-s]=r;this._animatebles[a]=null}r.advanceTime(t)}else{s++}}if(s>0){i=this._animatebles.length;for(;a<i;++a){const n=this._animatebles[a];if(n!==null){this._animatebles[a-s]=n}else{s++}}this._animatebles.length-=s}}contains(t){if(t===this){return false}let e=t;while(e!==this&&e!==null){e=e.clock}return e===this}add(t){if(this._animatebles.indexOf(t)<0){this._animatebles.push(t);t.clock=this}}remove(t){const e=this._animatebles.indexOf(t);if(e>=0){this._animatebles[e]=null;t.clock=null}}clear(){for(const t of this._animatebles){if(t!==null){t.clock=null}}}get clock(){return this._clock}set clock(t){if(this._clock===t){return}if(this._clock!==null){this._clock.remove(this)}this._clock=t;if(this._clock!==null){this._clock.add(this)}}}t.WorldClock=e})(dragonBones||(dragonBones={}));var dragonBones;(function(_){class t extends _.BaseObject{constructor(){super(...arguments);this._animationNames=[];this._animationStates=[];this._animations={};this._blendStates={};this._animationConfig=null}static toString(){return"[class dragonBones.Animation]"}_onClear(){for(const t of this._animationStates){t.returnToPool()}for(let t in this._animations){delete this._animations[t]}for(let t in this._blendStates){const e=this._blendStates[t];for(let t in e){e[t].returnToPool()}delete this._blendStates[t]}if(this._animationConfig!==null){this._animationConfig.returnToPool()}this.timeScale=1;this._animationDirty=false;this._inheritTimeScale=1;this._animationNames.length=0;this._animationStates.length=0;this._armature=null;this._animationConfig=null;this._lastAnimationState=null}_fadeOut(t){switch(t.fadeOutMode){case 1:for(const e of this._animationStates){if(e._parent!==null){continue}if(e.layer===t.layer){e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}break;case 2:for(const e of this._animationStates){if(e._parent!==null){continue}if(e.group===t.group){e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}break;case 3:for(const e of this._animationStates){if(e._parent!==null){continue}if(e.layer===t.layer&&e.group===t.group){e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}break;case 4:for(const e of this._animationStates){if(e._parent!==null){continue}e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}break;case 5:default:break}}init(t){if(this._armature!==null){return}this._armature=t;this._animationConfig=_.BaseObject.borrowObject(_.AnimationConfig)}advanceTime(a){if(a<0){a=-a}if(this._armature.inheritAnimation&&this._armature._parent!==null){this._inheritTimeScale=this._armature._parent._armature.animation._inheritTimeScale*this.timeScale}else{this._inheritTimeScale=this.timeScale}if(this._inheritTimeScale!==1){a*=this._inheritTimeScale}for(let t in this._blendStates){const e=this._blendStates[t];for(let t in e){e[t].reset()}}const s=this._animationStates.length;if(s===1){const i=this._animationStates[0];if(i._fadeState>0&&i._subFadeState>0){this._armature._dragonBones.bufferObject(i);this._animationStates.length=0;this._lastAnimationState=null}else{const t=i.animationData;const r=t.cacheFrameRate;if(this._animationDirty&&r>0){this._animationDirty=false;for(const n of this._armature.getBones()){n._cachedFrameIndices=t.getBoneCachedFrameIndices(n.name)}for(const o of this._armature.getSlots()){if(o.displayFrameCount>0){const l=o.getDisplayFrameAt(0).rawDisplayData;if(l!==null&&l.parent===this._armature.armatureData.defaultSkin){o._cachedFrameIndices=t.getSlotCachedFrameIndices(o.name);continue}}o._cachedFrameIndices=null}}i.advanceTime(a,r)}}else if(s>1){for(let t=0,e=0;t<s;++t){const i=this._animationStates[t];if(i._fadeState>0&&i._subFadeState>0){e++;this._armature._dragonBones.bufferObject(i);this._animationDirty=true;if(this._lastAnimationState===i){this._lastAnimationState=null}}else{if(e>0){this._animationStates[t-e]=i}i.advanceTime(a,0)}if(t===s-1&&e>0){this._animationStates.length-=e;if(this._lastAnimationState===null&&this._animationStates.length>0){this._lastAnimationState=this._animationStates[this._animationStates.length-1]}}}this._armature._cacheFrameIndex=-1}else{this._armature._cacheFrameIndex=-1}}reset(){for(const t of this._animationStates){t.returnToPool()}this._animationDirty=false;this._animationConfig.clear();this._animationStates.length=0;this._lastAnimationState=null}stop(t=null){if(t!==null){const e=this.getState(t);if(e!==null){e.stop()}}else{for(const e of this._animationStates){e.stop()}}}playConfig(t){const e=t.animation;if(!(e in this._animations)){console.warn("Non-existent animation.\n","DragonBones name: "+this._armature.armatureData.parent.name,"Armature name: "+this._armature.name,"Animation name: "+e);return null}const a=this._animations[e];if(t.fadeOutMode===5){for(const s of this._animationStates){if(s._fadeState<1&&s.layer===t.layer&&s.animationData===a){return s}}}if(this._animationStates.length===0){t.fadeInTime=0}else if(t.fadeInTime<0){t.fadeInTime=a.fadeInTime}if(t.fadeOutTime<0){t.fadeOutTime=t.fadeInTime}if(t.timeScale<=-100){t.timeScale=1/a.scale}if(a.frameCount>0){if(t.position<0){t.position%=a.duration;t.position=a.duration-t.position}else if(t.position===a.duration){t.position-=1e-6}else if(t.position>a.duration){t.position%=a.duration}if(t.duration>0&&t.position+t.duration>a.duration){t.duration=a.duration-t.position}if(t.playTimes<0){t.playTimes=a.playTimes}}else{t.playTimes=1;t.position=0;if(t.duration>0){t.duration=0}}if(t.duration===0){t.duration=-1}this._fadeOut(t);const s=_.BaseObject.borrowObject(_.AnimationState);s.init(this._armature,a,t);this._animationDirty=true;this._armature._cacheFrameIndex=-1;if(this._animationStates.length>0){let a=false;for(let t=0,e=this._animationStates.length;t<e;++t){if(s.layer>this._animationStates[t].layer){a=true;this._animationStates.splice(t,0,s);break}else if(t!==e-1&&s.layer>this._animationStates[t+1].layer){a=true;this._animationStates.splice(t+1,0,s);break}}if(!a){this._animationStates.push(s)}}else{this._animationStates.push(s)}for(const i of this._armature.getSlots()){const r=i.childArmature;if(r!==null&&r.inheritAnimation&&r.animation.hasAnimation(e)&&r.animation.getState(e)===null){r.animation.fadeIn(e)}}for(let t in a.animationTimelines){const n=this.fadeIn(t,0,1,s.layer,"",5);if(n===null){continue}const o=a.animationTimelines[t];n.actionEnabled=false;n.resetToPose=false;n.stop();s.addState(n,o);const l=this._animationStates.indexOf(s);const h=this._animationStates.indexOf(n);if(h<l){this._animationStates.splice(l,1);this._animationStates.splice(h,0,s)}}this._lastAnimationState=s;return s}play(t=null,e=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=e;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t!==null?t:"";if(t!==null&&t.length>0){this.playConfig(this._animationConfig)}else if(this._lastAnimationState===null){const a=this._armature.armatureData.defaultAnimation;if(a!==null){this._animationConfig.animation=a.name;this.playConfig(this._animationConfig)}}else if(!this._lastAnimationState.isPlaying&&!this._lastAnimationState.isCompleted){this._lastAnimationState.play()}else{this._animationConfig.animation=this._lastAnimationState.name;this.playConfig(this._animationConfig)}return this._lastAnimationState}fadeIn(t,e=-1,a=-1,s=0,i=null,r=3){this._animationConfig.clear();this._animationConfig.fadeOutMode=r;this._animationConfig.playTimes=a;this._animationConfig.layer=s;this._animationConfig.fadeInTime=e;this._animationConfig.animation=t;this._animationConfig.group=i!==null?i:"";return this.playConfig(this._animationConfig)}gotoAndPlayByTime(t,e=0,a=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=a;this._animationConfig.position=e;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t;return this.playConfig(this._animationConfig)}gotoAndPlayByFrame(t,e=0,a=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=a;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t;const s=t in this._animations?this._animations[t]:null;if(s!==null){this._animationConfig.position=s.frameCount>0?s.duration*e/s.frameCount:0}return this.playConfig(this._animationConfig)}gotoAndPlayByProgress(t,e=0,a=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=a;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t;const s=t in this._animations?this._animations[t]:null;if(s!==null){this._animationConfig.position=s.duration*(e>0?e:0)}return this.playConfig(this._animationConfig)}gotoAndStopByTime(t,e=0){const a=this.gotoAndPlayByTime(t,e,1);if(a!==null){a.stop()}return a}gotoAndStopByFrame(t,e=0){const a=this.gotoAndPlayByFrame(t,e,1);if(a!==null){a.stop()}return a}gotoAndStopByProgress(t,e=0){const a=this.gotoAndPlayByProgress(t,e,1);if(a!==null){a.stop()}return a}getBlendState(t,e,a){if(!(t in this._blendStates)){this._blendStates[t]={}}const s=this._blendStates[t];if(!(e in s)){const i=s[e]=_.BaseObject.borrowObject(_.BlendState);i.target=a}return s[e]}getState(t,e=-1){let a=this._animationStates.length;while(a--){const s=this._animationStates[a];if(s.name===t&&(e<0||s.layer===e)){return s}}return null}hasAnimation(t){return t in this._animations}getStates(){return this._animationStates}get isPlaying(){for(const t of this._animationStates){if(t.isPlaying){return true}}return false}get isCompleted(){for(const t of this._animationStates){if(!t.isCompleted){return false}}return this._animationStates.length>0}get lastAnimationName(){return this._lastAnimationState!==null?this._lastAnimationState.name:""}get animationNames(){return this._animationNames}get animations(){return this._animations}set animations(e){if(this._animations===e){return}this._animationNames.length=0;for(let t in this._animations){delete this._animations[t]}for(let t in e){this._animationNames.push(t);this._animations[t]=e[t]}}get animationConfig(){this._animationConfig.clear();return this._animationConfig}get lastAnimationState(){return this._lastAnimationState}}_.Animation=t})(dragonBones||(dragonBones={}));var dragonBones;(function(T){class t extends T.BaseObject{constructor(){super(...arguments);this._boneMask=[];this._boneTimelines=[];this._boneBlendTimelines=[];this._slotTimelines=[];this._slotBlendTimelines=[];this._constraintTimelines=[];this._animationTimelines=[];this._poseTimelines=[];this._actionTimeline=null;this._zOrderTimeline=null}static toString(){return"[class dragonBones.AnimationState]"}_onClear(){for(const t of this._boneTimelines){t.returnToPool()}for(const t of this._boneBlendTimelines){t.returnToPool()}for(const t of this._slotTimelines){t.returnToPool()}for(const t of this._slotBlendTimelines){t.returnToPool()}for(const t of this._constraintTimelines){t.returnToPool()}for(const t of this._animationTimelines){const e=t.target;if(e._parent===this){e._fadeState=1;e._subFadeState=1;e._parent=null}t.returnToPool()}if(this._actionTimeline!==null){this._actionTimeline.returnToPool()}if(this._zOrderTimeline!==null){this._zOrderTimeline.returnToPool()}this.actionEnabled=false;this.additive=false;this.displayControl=false;this.resetToPose=false;this.blendType=0;this.playTimes=1;this.layer=0;this.timeScale=1;this._weight=1;this.parameterX=0;this.parameterY=0;this.positionX=0;this.positionY=0;this.autoFadeOutTime=0;this.fadeTotalTime=0;this.name="";this.group="";this._timelineDirty=2;this._playheadState=0;this._fadeState=-1;this._subFadeState=-1;this._position=0;this._duration=0;this._fadeTime=0;this._time=0;this._fadeProgress=0;this._weightResult=0;this._boneMask.length=0;this._boneTimelines.length=0;this._boneBlendTimelines.length=0;this._slotTimelines.length=0;this._slotBlendTimelines.length=0;this._constraintTimelines.length=0;this._animationTimelines.length=0;this._poseTimelines.length=0;this._animationData=null;this._armature=null;this._actionTimeline=null;this._zOrderTimeline=null;this._activeChildA=null;this._activeChildB=null;this._parent=null}_updateTimelines(){{for(const t of this._armature._constraints){const e=this._animationData.getConstraintTimelines(t.name);if(e!==null){for(const a of e){switch(a.type){case 30:{const s=T.BaseObject.borrowObject(T.IKConstraintTimelineState);s.target=t;s.init(this._armature,this,a);this._constraintTimelines.push(s);break}case 31:{const s=T.BaseObject.borrowObject(T.PathConstraintPositionTimelineState);s.target=t;s.init(this._armature,this,a);this._constraintTimelines.push(s);break}case 32:{const s=T.BaseObject.borrowObject(T.PathConstraintSpacingTimelineState);s.target=t;s.init(this._armature,this,a);this._constraintTimelines.push(s);break}case 33:{const s=T.BaseObject.borrowObject(T.PathConstraintWeightTimelineState);s.target=t;s.init(this._armature,this,a);this._constraintTimelines.push(s);break}default:break}}}else if(this.resetToPose){const s=T.BaseObject.borrowObject(T.IKConstraintTimelineState);s.target=t;s.init(this._armature,this,null);this._constraintTimelines.push(s);this._poseTimelines.push(s)}}}}_updateBoneAndSlotTimelines(){{const e={};for(const s of this._boneTimelines){const a=s.target.target.name;if(!(a in e)){e[a]=[]}e[a].push(s)}for(const s of this._boneBlendTimelines){const a=s.target.target.name;if(!(a in e)){e[a]=[]}e[a].push(s)}for(const t of this._armature.getBones()){const a=t.name;if(!this.containsBoneMask(a)){continue}if(a in e){delete e[a]}else{const i=this._animationData.getBoneTimelines(a);const r=this._armature.animation.getBlendState(b.BONE_TRANSFORM,t.name,t);if(i!==null){for(const n of i){switch(n.type){case 10:{const s=T.BaseObject.borrowObject(T.BoneAllTimelineState);s.target=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 11:{const s=T.BaseObject.borrowObject(T.BoneTranslateTimelineState);s.target=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 12:{const s=T.BaseObject.borrowObject(T.BoneRotateTimelineState);s.target=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 13:{const s=T.BaseObject.borrowObject(T.BoneScaleTimelineState);s.target=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 60:{const s=T.BaseObject.borrowObject(T.AlphaTimelineState);s.target=this._armature.animation.getBlendState(b.BONE_ALPHA,t.name,t);s.init(this._armature,this,n);this._boneBlendTimelines.push(s);break}case 50:{const s=T.BaseObject.borrowObject(T.SurfaceTimelineState);s.target=this._armature.animation.getBlendState(b.SURFACE,t.name,t);s.init(this._armature,this,n);this._boneBlendTimelines.push(s);break}default:break}}}else if(this.resetToPose){if(t._boneData.type===0){const s=T.BaseObject.borrowObject(T.BoneAllTimelineState);s.target=r;s.init(this._armature,this,null);this._boneTimelines.push(s);this._poseTimelines.push(s)}else{const s=T.BaseObject.borrowObject(T.SurfaceTimelineState);s.target=this._armature.animation.getBlendState(b.SURFACE,t.name,t);s.init(this._armature,this,null);this._boneBlendTimelines.push(s);this._poseTimelines.push(s)}}}}for(let t in e){for(const s of e[t]){let t=this._boneTimelines.indexOf(s);if(t>=0){this._boneTimelines.splice(t,1);s.returnToPool()}t=this._boneBlendTimelines.indexOf(s);if(t>=0){this._boneBlendTimelines.splice(t,1);s.returnToPool()}}}}{const o={};const l=[];const h=[];const _=[];for(const s of this._slotTimelines){const a=s.target.name;if(!(a in o)){o[a]=[]}o[a].push(s)}for(const s of this._slotBlendTimelines){const a=s.target.target.name;if(!(a in o)){o[a]=[]}o[a].push(s)}for(const f of this._armature.getSlots()){const c=f.parent.name;if(!this.containsBoneMask(c)){continue}const a=f.name;if(a in o){delete o[a]}else{let t=false;let e=false;l.length=0;_.length=0;h.length=0;const i=this._animationData.getSlotTimelines(a);if(i!==null){for(const n of i){switch(n.type){case 20:{const s=T.BaseObject.borrowObject(T.SlotDisplayTimelineState);s.target=f;s.init(this._armature,this,n);this._slotTimelines.push(s);t=true;break}case 23:{const s=T.BaseObject.borrowObject(T.SlotZIndexTimelineState);s.target=this._armature.animation.getBlendState(b.SLOT_Z_INDEX,f.name,f);s.init(this._armature,this,n);this._slotBlendTimelines.push(s);break}case 21:{const s=T.BaseObject.borrowObject(T.SlotColorTimelineState);s.target=f;s.init(this._armature,this,n);this._slotTimelines.push(s);e=true;break}case 22:{const u=this._animationData.parent.parent;const m=u.timelineArray;const d=this._animationData.frameIntOffset+m[n.offset+5];const p=u.frameIntArray;let a=p[d+0];if(a<0){a+=65536}for(let t=0,e=f.displayFrameCount;t<e;++t){const g=f.getDisplayFrameAt(t);const y=g.getGeometryData();if(y===null){continue}if(y.offset===a){const s=T.BaseObject.borrowObject(T.DeformTimelineState);s.target=this._armature.animation.getBlendState(b.SLOT_DEFORM,g.rawDisplayData.name,f);s.displayFrame=g;s.init(this._armature,this,n);this._slotBlendTimelines.push(s);g.updateDeformVertices();l.push(a);break}}break}case 26:{const u=this._animationData.parent.parent;const m=u.timelineArray;const d=this._animationData.frameIntOffset+m[n.offset+5];const p=u.frameIntArray;let a=p[d+0];if(a<0){a+=65536}for(let t=0,e=f.displayFrameCount;t<e;++t){const g=f.getDisplayFrameAt(t);const y=g.getGeometryData();if(y===null){continue}if(y.offset===a){const s=T.BaseObject.borrowObject(T.PathTimelineState);s.target=this._armature.animation.getBlendState(b.SLOT_PATH,g.rawDisplayData.name,f);s.displayFrame=g;s.init(this._armature,this,n);this._slotBlendTimelines.push(s);g.updateDeformVertices();h.push(a);break}}break}case 24:{const s=T.BaseObject.borrowObject(T.AlphaTimelineState);s.target=this._armature.animation.getBlendState(b.SLOT_ALPHA,f.name,f);s.init(this._armature,this,n);this._slotBlendTimelines.push(s);break}case 25:{const u=this._animationData.parent.parent;const m=u.timelineArray;const d=this._animationData.frameIntOffset+m[n.offset+5];const p=u.frameIntArray;let a=p[d+0];if(a<0){a+=65536}for(let t=0,e=f.displayFrameCount;t<e;++t){const g=f.getDisplayFrameAt(t);const D=g.getGeometryData();if(D===null){continue}if(D.offset===a){const s=T.BaseObject.borrowObject(T.ShapeTimelineState);s.target=this._armature.animation.getBlendState(b.SLOT_SHAPE,g.rawDisplayData.name,f);s.displayFrame=g;s.init(this._armature,this,n);this._slotBlendTimelines.push(s);g.updateDeformVertices();_.push(a);break}}break}default:break}}}if(this.resetToPose){if(!t){const s=T.BaseObject.borrowObject(T.SlotDisplayTimelineState);s.target=f;s.init(this._armature,this,null);this._slotTimelines.push(s);this._poseTimelines.push(s)}if(!e){const s=T.BaseObject.borrowObject(T.SlotColorTimelineState);s.target=f;s.init(this._armature,this,null);this._slotTimelines.push(s);this._poseTimelines.push(s)}for(let t=0,e=f.displayFrameCount;t<e;++t){const g=f.getDisplayFrameAt(t);if(g.deformVertices.length===0){continue}const y=g.getGeometryData();if(y!==null&&l.indexOf(y.offset)<0){const s=T.BaseObject.borrowObject(T.DeformTimelineState);s.displayFrame=g;s.target=this._armature.animation.getBlendState(b.SLOT_DEFORM,f.name,f);s.init(this._armature,this,null);this._slotBlendTimelines.push(s);this._poseTimelines.push(s)}else if(y!==null&&h.indexOf(y.offset)<0){}const D=g.getShapeData();if(D!==null&&_.indexOf(D.offset)<0){const s=T.BaseObject.borrowObject(T.ShapeTimelineState);s.displayFrame=g;s.target=this._armature.animation.getBlendState(b.SLOT_SHAPE,f.name,f);s.init(this._armature,this,null);this._slotBlendTimelines.push(s);this._poseTimelines.push(s)}}}}}for(let t in o){for(const s of o[t]){let t=this._slotTimelines.indexOf(s);if(t>=0){this._slotTimelines.splice(t,1);s.returnToPool()}t=this._slotBlendTimelines.indexOf(s);if(t>=0){this._slotBlendTimelines.splice(t,1);s.returnToPool()}}}}}_advanceFadeTime(t){const e=this._fadeState>0;if(this._subFadeState<0){this._subFadeState=0;const a=this._parent===null&&this.actionEnabled;if(a){const s=e?T.EventObject.FADE_OUT:T.EventObject.FADE_IN;if(this._armature.eventDispatcher.hasDBEventListener(s)){const i=T.BaseObject.borrowObject(T.EventObject);i.type=s;i.armature=this._armature;i.animationState=this;this._armature._dragonBones.bufferEvent(i)}}}if(t<0){t=-t}this._fadeTime+=t;if(this._fadeTime>=this.fadeTotalTime){this._subFadeState=1;this._fadeProgress=e?0:1}else if(this._fadeTime>0){this._fadeProgress=e?1-this._fadeTime/this.fadeTotalTime:this._fadeTime/this.fadeTotalTime}else{this._fadeProgress=e?1:0}if(this._subFadeState>0){if(!e){this._playheadState|=1;this._fadeState=0}const a=this._parent===null&&this.actionEnabled;if(a){const s=e?T.EventObject.FADE_OUT_COMPLETE:T.EventObject.FADE_IN_COMPLETE;if(this._armature.eventDispatcher.hasDBEventListener(s)){const i=T.BaseObject.borrowObject(T.EventObject);i.type=s;i.armature=this._armature;i.animationState=this;this._armature._dragonBones.bufferEvent(i)}}}}init(t,e,a){if(this._armature!==null){return}this._armature=t;this._animationData=e;this.resetToPose=a.resetToPose;this.additive=a.additive;this.displayControl=a.displayControl;this.actionEnabled=a.actionEnabled;this.blendType=e.blendType;this.layer=a.layer;this.playTimes=a.playTimes;this.timeScale=a.timeScale;this.fadeTotalTime=a.fadeInTime;this.autoFadeOutTime=a.autoFadeOutTime;this.name=a.name.length>0?a.name:a.animation;this.group=a.group;this._weight=a.weight;if(a.pauseFadeIn){this._playheadState=2}else{this._playheadState=3}if(a.duration<0){this._position=0;this._duration=this._animationData.duration;if(a.position!==0){if(this.timeScale>=0){this._time=a.position}else{this._time=a.position-this._duration}}else{this._time=0}}else{this._position=a.position;this._duration=a.duration;this._time=0}if(this.timeScale<0&&this._time===0){this._time=-1e-6}if(this.fadeTotalTime<=0){this._fadeProgress=.999999}if(a.boneMask.length>0){this._boneMask.length=a.boneMask.length;for(let t=0,e=this._boneMask.length;t<e;++t){this._boneMask[t]=a.boneMask[t]}}this._actionTimeline=T.BaseObject.borrowObject(T.ActionTimelineState);this._actionTimeline.init(this._armature,this,this._animationData.actionTimeline);this._actionTimeline.currentTime=this._time;if(this._actionTimeline.currentTime<0){this._actionTimeline.currentTime=this._duration-this._actionTimeline.currentTime}if(this._animationData.zOrderTimeline!==null){this._zOrderTimeline=T.BaseObject.borrowObject(T.ZOrderTimelineState);this._zOrderTimeline.init(this._armature,this,this._animationData.zOrderTimeline)}}advanceTime(t,e){if(this._fadeState!==0||this._subFadeState!==0){this._advanceFadeTime(t)}if(this._playheadState===3){if(this.timeScale!==1){t*=this.timeScale}this._time+=t}if(this._timelineDirty!==0){if(this._timelineDirty===2){this._updateTimelines()}this._timelineDirty=0;this._updateBoneAndSlotTimelines()}const i=this._fadeState!==0||this._subFadeState===0;const a=this._fadeState===0&&e>0;let s=true;let r=true;let n=this._time;this._weightResult=this._weight*this._fadeProgress;if(this._parent!==null){this._weightResult*=this._parent._weightResult}if(this._actionTimeline.playState<=0){this._actionTimeline.update(n)}if(this._weight===0){return}if(a){const o=e*2;this._actionTimeline.currentTime=Math.floor(this._actionTimeline.currentTime*o)/o}if(this._zOrderTimeline!==null&&this._zOrderTimeline.playState<=0){this._zOrderTimeline.update(n)}if(a){const l=Math.floor(this._actionTimeline.currentTime*e);if(this._armature._cacheFrameIndex===l){s=false;r=false}else{this._armature._cacheFrameIndex=l;if(this._animationData.cachedFrames[l]){r=false}else{this._animationData.cachedFrames[l]=true}}}if(s){let a=false;let s=null;if(r){for(let t=0,e=this._boneTimelines.length;t<e;++t){const h=this._boneTimelines[t];if(h.playState<=0){h.update(n)}if(h.target!==s){const _=h.target;a=_.update(this);s=_;if(_.dirty===1){const f=_.target.animationPose;f.x=0;f.y=0;f.rotation=0;f.skew=0;f.scaleX=1;f.scaleY=1}}if(a){h.blend(i)}}}for(let t=0,e=this._boneBlendTimelines.length;t<e;++t){const h=this._boneBlendTimelines[t];if(h.playState<=0){h.update(n)}if(h.target.update(this)){h.blend(i)}}if(this.displayControl){for(let t=0,e=this._slotTimelines.length;t<e;++t){const h=this._slotTimelines[t];if(h.playState<=0){const c=h.target;const u=c.displayController;if(u===null||u===this.name||u===this.group){h.update(n)}}}}for(let t=0,e=this._slotBlendTimelines.length;t<e;++t){const h=this._slotBlendTimelines[t];if(h.playState<=0){const _=h.target;h.update(n);if(_.update(this)){h.blend(i)}}}for(let t=0,e=this._constraintTimelines.length;t<e;++t){const h=this._constraintTimelines[t];if(h.playState<=0){h.update(n)}}if(this._animationTimelines.length>0){let a=100;let s=100;let i=null;let r=null;for(let t=0,e=this._animationTimelines.length;t<e;++t){const h=this._animationTimelines[t];if(h.playState<=0){h.update(n)}if(this.blendType===1){const m=h.target;const d=this.parameterX-m.positionX;if(d>=0){if(d<a){a=d;i=m}}else{if(-d<s){s=-d;r=m}}}}if(i!==null){if(this._activeChildA!==i){if(this._activeChildA!==null){this._activeChildA.weight=0}this._activeChildA=i;this._activeChildA.activeTimeline()}if(this._activeChildB!==r){if(this._activeChildB!==null){this._activeChildB.weight=0}this._activeChildB=r}i.weight=s/(a+s);if(r){r.weight=1-i.weight}}}}if(this._fadeState===0){if(this._subFadeState>0){this._subFadeState=0;if(this._poseTimelines.length>0){for(const h of this._poseTimelines){let t=this._boneTimelines.indexOf(h);if(t>=0){this._boneTimelines.splice(t,1);h.returnToPool();continue}t=this._boneBlendTimelines.indexOf(h);if(t>=0){this._boneBlendTimelines.splice(t,1);h.returnToPool();continue}t=this._slotTimelines.indexOf(h);if(t>=0){this._slotTimelines.splice(t,1);h.returnToPool();continue}t=this._slotBlendTimelines.indexOf(h);if(t>=0){this._slotBlendTimelines.splice(t,1);h.returnToPool();continue}t=this._constraintTimelines.indexOf(h);if(t>=0){this._constraintTimelines.splice(t,1);h.returnToPool();continue}}this._poseTimelines.length=0}}if(this._actionTimeline.playState>0){if(this.autoFadeOutTime>=0){this.fadeOut(this.autoFadeOutTime)}}}}play(){this._playheadState=3}stop(){this._playheadState&=1}fadeOut(t,e=true){if(t<0){t=0}if(e){this._playheadState&=2}if(this._fadeState>0){if(t>this.fadeTotalTime-this._fadeTime){return}}else{this._fadeState=1;this._subFadeState=-1;if(t<=0||this._fadeProgress<=0){this._fadeProgress=1e-6}for(const a of this._boneTimelines){a.fadeOut()}for(const a of this._boneBlendTimelines){a.fadeOut()}for(const a of this._slotTimelines){a.fadeOut()}for(const a of this._slotBlendTimelines){a.fadeOut()}for(const a of this._constraintTimelines){a.fadeOut()}for(const a of this._animationTimelines){a.fadeOut();const s=a.target;s.fadeOut(999999,true)}}this.displayControl=false;this.fadeTotalTime=this._fadeProgress>1e-6?t/this._fadeProgress:0;this._fadeTime=this.fadeTotalTime*(1-this._fadeProgress)}containsBoneMask(t){return this._boneMask.length===0||this._boneMask.indexOf(t)>=0}addBoneMask(t,e=true){const a=this._armature.getBone(t);if(a===null){return}if(this._boneMask.indexOf(t)<0){this._boneMask.push(t)}if(e){for(const s of this._armature.getBones()){if(this._boneMask.indexOf(s.name)<0&&a.contains(s)){this._boneMask.push(s.name)}}}this._timelineDirty=1}removeBoneMask(t,e=true){const a=this._boneMask.indexOf(t);if(a>=0){this._boneMask.splice(a,1)}if(e){const s=this._armature.getBone(t);if(s!==null){const i=this._armature.getBones();if(this._boneMask.length>0){for(const r of i){const a=this._boneMask.indexOf(r.name);if(a>=0&&s.contains(r)){this._boneMask.splice(a,1)}}}else{for(const r of i){if(r===s){continue}if(!s.contains(r)){this._boneMask.push(r.name)}}}}}this._timelineDirty=1}removeAllBoneMask(){this._boneMask.length=0;this._timelineDirty=1}addState(t,e=null){if(e!==null){for(const a of e){switch(a.type){case 40:{const s=T.BaseObject.borrowObject(T.AnimationProgressTimelineState);s.target=t;s.init(this._armature,this,a);this._animationTimelines.push(s);if(this.blendType!==0){const i=a;t.positionX=i.x;t.positionY=i.y;t.weight=0}t._parent=this;this.resetToPose=false;break}case 41:{const s=T.BaseObject.borrowObject(T.AnimationWeightTimelineState);s.target=t;s.init(this._armature,this,a);this._animationTimelines.push(s);break}case 42:{const s=T.BaseObject.borrowObject(T.AnimationParametersTimelineState);s.target=t;s.init(this._armature,this,a);this._animationTimelines.push(s);break}default:break}}}if(t._parent===null){t._parent=this}}activeTimeline(){for(const t of this._slotTimelines){t.dirty=true;t.currentTime=-1}}get isFadeIn(){return this._fadeState<0}get isFadeOut(){return this._fadeState>0}get isFadeComplete(){return this._fadeState===0}get isPlaying(){return(this._playheadState&2)!==0&&this._actionTimeline.playState<=0}get isCompleted(){return this._actionTimeline.playState>0}get currentPlayTimes(){return this._actionTimeline.currentPlayTimes}get totalTime(){return this._duration}get currentTime(){return this._actionTimeline.currentTime}set currentTime(t){const e=this._actionTimeline.currentPlayTimes-(this._actionTimeline.playState>0?1:0);if(t<0||this._duration<t){t=t%this._duration+e*this._duration;if(t<0){t+=this._duration}}if(this.playTimes>0&&e===this.playTimes-1&&t===this._duration&&this._parent===null){t=this._duration-1e-6}if(this._time===t){return}this._time=t;this._actionTimeline.setCurrentTime(this._time);if(this._zOrderTimeline!==null){this._zOrderTimeline.playState=-1}for(const a of this._boneTimelines){a.playState=-1}for(const a of this._slotTimelines){a.playState=-1}}get weight(){return this._weight}set weight(t){if(this._weight===t){return}this._weight=t;for(const e of this._boneTimelines){e.dirty=true}for(const e of this._boneBlendTimelines){e.dirty=true}for(const e of this._slotBlendTimelines){e.dirty=true}}get animationData(){return this._animationData}}T.AnimationState=t;class b extends T.BaseObject{static toString(){return"[class dragonBones.BlendState]"}_onClear(){this.reset();this.target=null}update(t){const e=t.layer;let a=t._weightResult;if(this.dirty>0){if(this.leftWeight>0){if(this.layer!==e){if(this.layerWeight>=this.leftWeight){this.dirty++;this.layer=e;this.leftWeight=0;this.blendWeight=0;return false}this.layer=e;this.leftWeight-=this.layerWeight;this.layerWeight=0}a*=this.leftWeight;this.dirty++;this.blendWeight=a;this.layerWeight+=this.blendWeight;return true}return false}this.dirty++;this.layer=e;this.leftWeight=1;this.blendWeight=a;this.layerWeight=a;return true}reset(){this.dirty=0;this.layer=0;this.leftWeight=0;this.layerWeight=0;this.blendWeight=0}}b.BONE_TRANSFORM="boneTransform";b.BONE_ALPHA="boneAlpha";b.SURFACE="surface";b.SLOT_DEFORM="slotDeform";b.SLOT_PATH="slotPath";b.SLOT_ALPHA="slotAlpha";b.SLOT_Z_INDEX="slotZIndex";b.SLOT_SHAPE="slotShape";T.BlendState=b})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{_onClear(){this.dirty=false;this.playState=-1;this.currentPlayTimes=0;this.currentTime=-1;this.target=null;this._isTween=false;this._valueOffset=0;this._frameValueOffset=0;this._frameOffset=0;this._frameRate=0;this._frameCount=0;this._frameIndex=-1;this._frameRateR=0;this._position=0;this._duration=0;this._timeScale=1;this._timeOffset=0;this._animationData=null;this._timelineData=null;this._armature=null;this._animationState=null;this._actionTimeline=null;this._frameArray=null;this._valueArray=null;this._timelineArray=null;this._frameIndices=null}_setCurrentTime(t){const e=this.playState;const a=this.currentPlayTimes;const s=this.currentTime;if(this._actionTimeline!==null&&this._frameCount<=1){this.playState=this._actionTimeline.playState>=0?1:-1;this.currentPlayTimes=1;this.currentTime=this._actionTimeline.currentTime}else if(this._actionTimeline===null){const i=this._animationState.playTimes;const r=i*this._duration;if(i>0&&(t>=r||t<=-r)){if(this.playState<=0&&this._animationState._playheadState===3){this.playState=1}this.currentPlayTimes=i;if(t<0){this.currentTime=0}else{this.currentTime=this.playState===1?this._duration+1e-6:this._duration}}else{if(this.playState!==0&&this._animationState._playheadState===3){this.playState=0}if(t<0){t=-t;this.currentPlayTimes=Math.floor(t/this._duration);this.currentTime=this._duration-t%this._duration}else{this.currentPlayTimes=Math.floor(t/this._duration);this.currentTime=t%this._duration}}this.currentTime+=this._position}else{this.playState=this._actionTimeline.playState;this.currentPlayTimes=this._actionTimeline.currentPlayTimes;let t=this._actionTimeline.currentTime;if(this._timeScale===1&&this._timeOffset===0&&this._timeLoop===0&&this._timelineDuration===this._duration){this.currentTime=t}else{if(this._timeScale!==1||this._timeOffset!==0){t*=this._timeScale;t+=this._timeOffset}if(this._timeLoop!==0){t=t%this._timelineDuration;if(t<0){t+=this._timelineDuration}}else if(t>this._timelineDuration){t=this._timelineDuration+1e-6}else if(t<0){t=0}this.currentTime=t}this.currentTime+=this._position}if(this.currentPlayTimes===a&&this.currentTime===s){return false}if(e<0&&this.playState!==e||this.playState<=0&&this.currentPlayTimes!==a){this._frameIndex=-1}return true}uint2int(t){if(t>32767){return t-65536}return t}init(t,e,a){this._armature=t;this._animationState=e;this._timelineData=a;this._actionTimeline=this._animationState._actionTimeline;if(this===this._actionTimeline){this._actionTimeline=null}this._animationData=this._animationState.animationData;this._frameRate=this._animationData.parent.frameRate;this._frameRateR=1/this._frameRate;this._position=this._animationState._position;this._duration=this._animationState._duration;if(this._timelineData!==null){const s=this._animationData.parent.parent;this._frameArray=s.frameArray;this._timelineArray=s.timelineArray;this._frameIndices=s.frameIndices;this._frameCount=this._timelineArray[this._timelineData.offset+4];this._frameValueOffset=this._timelineArray[this._timelineData.offset+6];this._timeScale=this._timelineArray[this._timelineData.offset+0]*.01;this._timeOffset=this.uint2int(this._timelineArray[this._timelineData.offset+1])*this._frameRateR;this._timeLoop=this._timelineArray[this._timelineData.offset+2];this._timelineDuration=this._timelineArray[this._timelineData.offset+3]*this._frameRateR}}fadeOut(){this.dirty=false}update(t){if(this._setCurrentTime(t)){if(this._frameCount>1){const e=Math.floor(this.currentTime*this._frameRate);const a=this._frameIndices[this._timelineData.frameIndicesOffset+e];if(this._frameIndex!==a){this._frameIndex=a;this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+7+this._frameIndex];this._onArriveAtFrame()}}else if(this._frameIndex<0){this._frameIndex=0;if(this._timelineData!==null){this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+7]}this._onArriveAtFrame()}if(this._isTween||this.dirty){this._onUpdateFrame()}}}blend(t){}}t.TimelineState=e;class a extends e{static _getEasingValue(t,e,a){let s=e;switch(t){case 3:s=Math.pow(e,2);break;case 4:s=1-Math.pow(1-e,2);break;case 5:s=.5*(1-Math.cos(e*Math.PI));break}return(s-e)*a+e}static _getEasingCurveValue(t,e,a,s){if(t<=0){return 0}else if(t>=1){return 1}const i=a>0;const r=a+1;const n=Math.floor(t*r);let o=0;let l=0;if(i){o=n===0?0:e[s+n-1];l=n===r-1?1e4:e[s+n]}else{o=e[s+n-1];l=e[s+n]}return(o+(l-o)*(t*r-n))*1e-4}_onClear(){super._onClear();this._tweenType=0;this._curveCount=0;this._framePosition=0;this._frameDurationR=0;this._tweenEasing=0;this._tweenProgress=0;this._valueScale=1}_onArriveAtFrame(){if(this._frameCount>1&&(this._frameIndex!==this._frameCount-1||this._animationState.playTimes===0||this._animationState.currentPlayTimes<this._animationState.playTimes-1)){this._tweenType=this._frameArray[this._frameOffset+1];this._isTween=this._tweenType!==0;if(this._isTween){if(this._tweenType===2){this._curveCount=this._frameArray[this._frameOffset+2]}else if(this._tweenType!==0&&this._tweenType!==1){this._tweenEasing=this._frameArray[this._frameOffset+2]*.01}}else{this.dirty=true}this._framePosition=this._frameArray[this._frameOffset]*this._frameRateR;if(this._frameIndex===this._frameCount-1){this._frameDurationR=1/(this._animationData.duration-this._framePosition)}else{const t=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+7+this._frameIndex+1];const e=this._frameArray[t]*this._frameRateR-this._framePosition;if(e>0){this._frameDurationR=1/e}else{this._frameDurationR=0}}}else{this.dirty=true;this._isTween=false}}_onUpdateFrame(){if(this._isTween){this.dirty=true;this._tweenProgress=(this.currentTime-this._framePosition)*this._frameDurationR;if(this._tweenType===2){this._tweenProgress=a._getEasingCurveValue(this._tweenProgress,this._frameArray,this._curveCount,this._frameOffset+3)}else if(this._tweenType!==1){this._tweenProgress=a._getEasingValue(this._tweenType,this._tweenProgress,this._tweenEasing)}}}}t.TweenTimelineState=a;class s extends a{_onClear(){super._onClear();this._current=0;this._difference=0;this._result=0}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){const t=this._valueScale;const e=this._valueArray;const a=this._valueOffset+this._frameValueOffset+this._frameIndex;if(this._isTween){const s=this._frameIndex===this._frameCount-1?this._valueOffset+this._frameValueOffset:a+1;if(t===1){this._current=e[a];this._difference=e[s]-this._current}else{this._current=e[a]*t;this._difference=e[s]*t-this._current}}else{this._result=e[a]*t}}else{this._result=0}}_onUpdateFrame(){super._onUpdateFrame();if(this._isTween){this._result=this._current+this._difference*this._tweenProgress}}}t.SingleValueTimelineState=s;class i extends a{_onClear(){super._onClear();this._currentA=0;this._currentB=0;this._differenceA=0;this._differenceB=0;this._resultA=0;this._resultB=0}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){const t=this._valueScale;const e=this._valueArray;const a=this._valueOffset+this._frameValueOffset+this._frameIndex*2;if(this._isTween){const s=this._frameIndex===this._frameCount-1?this._valueOffset+this._frameValueOffset:a+2;if(t===1){this._currentA=e[a];this._currentB=e[a+1];this._differenceA=e[s]-this._currentA;this._differenceB=e[s+1]-this._currentB}else{this._currentA=e[a]*t;this._currentB=e[a+1]*t;this._differenceA=e[s]*t-this._currentA;this._differenceB=e[s+1]*t-this._currentB}}else{this._resultA=e[a]*t;this._resultB=e[a+1]*t}}else{this._resultA=0;this._resultB=0}}_onUpdateFrame(){super._onUpdateFrame();if(this._isTween){this._resultA=this._currentA+this._differenceA*this._tweenProgress;this._resultB=this._currentB+this._differenceB*this._tweenProgress}}}t.DoubleValueTimelineState=i;class r extends a{constructor(){super(...arguments);this._rd=[]}_onClear(){super._onClear();this._valueCount=0;this._rd.length=0}_onArriveAtFrame(){super._onArriveAtFrame();const e=this._valueCount;const a=this._rd;if(this._timelineData!==null){const s=this._valueScale;const i=this._valueArray;const r=this._valueOffset+this._frameValueOffset+this._frameIndex*e;if(this._isTween){const n=this._frameIndex===this._frameCount-1?this._valueOffset+this._frameValueOffset:r+e;if(s===1){for(let t=0;t<e;++t){a[e+t]=i[n+t]-i[r+t]}}else{for(let t=0;t<e;++t){a[e+t]=(i[n+t]-i[r+t])*s}}}else if(s===1){for(let t=0;t<e;++t){a[t]=i[r+t]}}else{for(let t=0;t<e;++t){a[t]=i[r+t]*s}}}else{for(let t=0;t<e;++t){a[t]=0}}}_onUpdateFrame(){super._onUpdateFrame();if(this._isTween){const e=this._valueCount;const a=this._valueScale;const s=this._tweenProgress;const i=this._valueArray;const r=this._rd;const n=this._valueOffset+this._frameValueOffset+this._frameIndex*e;if(a===1){for(let t=0;t<e;++t){r[t]=i[n+t]+r[e+t]*s}}else{for(let t=0;t<e;++t){r[t]=i[n+t]*a+r[e+t]*s}}}}}t.MutilpleValueTimelineState=r})(dragonBones||(dragonBones={}));var dragonBones;(function(d){class t extends d.TimelineState{static toString(){return"[class dragonBones.ActionTimelineState]"}_onCrossFrame(t){const e=this._armature.eventDispatcher;if(this._animationState.actionEnabled){const a=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+7+t];const s=this._frameArray[a+1];const i=this._animationData.parent.actions;for(let t=0;t<s;++t){const r=this._frameArray[a+2+t];const n=i[r];if(n.type===0){const o=d.BaseObject.borrowObject(d.EventObject);o.time=this._frameArray[a]/this._frameRate;o.animationState=this._animationState;d.EventObject.actionDataToInstance(n,o,this._armature);this._armature._bufferAction(o,true)}else{const l=n.type===10?d.EventObject.FRAME_EVENT:d.EventObject.SOUND_EVENT;if(n.type===11||e.hasDBEventListener(l)){const o=d.BaseObject.borrowObject(d.EventObject);o.time=this._frameArray[a]/this._frameRate;o.animationState=this._animationState;d.EventObject.actionDataToInstance(n,o,this._armature);this._armature._dragonBones.bufferEvent(o)}}}}}_onArriveAtFrame(){}_onUpdateFrame(){}update(t){const a=this.playState;let s=this.currentPlayTimes;let i=this.currentTime;if(this._setCurrentTime(t)){const r=this._animationState._parent===null&&this._animationState.actionEnabled;const n=this._armature.eventDispatcher;if(a<0){if(this.playState!==a){if(this._animationState.displayControl&&this._animationState.resetToPose){this._armature._sortZOrder(null,0)}if(r&&n.hasDBEventListener(d.EventObject.START)){const l=d.BaseObject.borrowObject(d.EventObject);l.type=d.EventObject.START;l.armature=this._armature;l.animationState=this._animationState;this._armature._dragonBones.bufferEvent(l)}}else{return}}const o=this._animationState.timeScale<0;let e=null;let t=null;if(r&&this.currentPlayTimes!==s){if(n.hasDBEventListener(d.EventObject.LOOP_COMPLETE)){e=d.BaseObject.borrowObject(d.EventObject);e.type=d.EventObject.LOOP_COMPLETE;e.armature=this._armature;e.animationState=this._animationState}if(this.playState>0){if(n.hasDBEventListener(d.EventObject.COMPLETE)){t=d.BaseObject.borrowObject(d.EventObject);t.type=d.EventObject.COMPLETE;t.armature=this._armature;t.animationState=this._animationState}}}if(this._frameCount>1){const h=this._timelineData;const _=Math.floor(this.currentTime*this._frameRate);const f=this._frameIndices[h.frameIndicesOffset+_];if(this._frameIndex!==f){let t=this._frameIndex;this._frameIndex=f;if(this._timelineArray!==null){this._frameOffset=this._animationData.frameOffset+this._timelineArray[h.offset+7+this._frameIndex];if(o){if(t<0){const c=Math.floor(i*this._frameRate);t=this._frameIndices[h.frameIndicesOffset+c];if(this.currentPlayTimes===s){if(t===f){t=-1}}}while(t>=0){const u=this._animationData.frameOffset+this._timelineArray[h.offset+7+t];const m=this._frameArray[u]/this._frameRate;if(this._position<=m&&m<=this._position+this._duration){this._onCrossFrame(t)}if(e!==null&&t===0){this._armature._dragonBones.bufferEvent(e);e=null}if(t>0){t--}else{t=this._frameCount-1}if(t===f){break}}}else{if(t<0){const c=Math.floor(i*this._frameRate);t=this._frameIndices[h.frameIndicesOffset+c];const u=this._animationData.frameOffset+this._timelineArray[h.offset+7+t];const m=this._frameArray[u]/this._frameRate;if(this.currentPlayTimes===s){if(i<=m){if(t>0){t--}else{t=this._frameCount-1}}else if(t===f){t=-1}}}while(t>=0){if(t<this._frameCount-1){t++}else{t=0}const u=this._animationData.frameOffset+this._timelineArray[h.offset+7+t];const m=this._frameArray[u]/this._frameRate;if(this._position<=m&&m<=this._position+this._duration){this._onCrossFrame(t)}if(e!==null&&t===0){this._armature._dragonBones.bufferEvent(e);e=null}if(t===f){break}}}}}}else if(this._frameIndex<0){this._frameIndex=0;if(this._timelineData!==null){this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+7];const m=this._frameArray[this._frameOffset]/this._frameRate;if(this.currentPlayTimes===s){if(i<=m){this._onCrossFrame(this._frameIndex)}}else if(this._position<=m){if(!o&&e!==null){this._armature._dragonBones.bufferEvent(e);e=null}this._onCrossFrame(this._frameIndex)}}}if(e!==null){this._armature._dragonBones.bufferEvent(e)}if(t!==null){this._armature._dragonBones.bufferEvent(t)}}}setCurrentTime(t){this._setCurrentTime(t);this._frameIndex=-1}}d.ActionTimelineState=t;class e extends d.TimelineState{static toString(){return"[class dragonBones.ZOrderTimelineState]"}_onArriveAtFrame(){if(this.playState>=0){const t=this._frameArray[this._frameOffset+1];if(t>0){this._armature._sortZOrder(this._frameArray,this._frameOffset+2)}else{this._armature._sortZOrder(null,0)}}}_onUpdateFrame(){}}d.ZOrderTimelineState=e;class a extends d.MutilpleValueTimelineState{static toString(){return"[class dragonBones.BoneAllTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._isTween&&this._frameIndex===this._frameCount-1){this._rd[2]=d.Transform.normalizeRadian(this._rd[2]);this._rd[3]=d.Transform.normalizeRadian(this._rd[3])}if(this._timelineData===null){this._rd[4]=1;this._rd[5]=1}}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameFloatOffset;this._valueCount=6;this._valueArray=this._animationData.parent.parent.frameFloatArray}fadeOut(){this.dirty=false;this._rd[2]=d.Transform.normalizeRadian(this._rd[2]);this._rd[3]=d.Transform.normalizeRadian(this._rd[3])}blend(t){const e=this._armature.armatureData.scale;const a=this._rd;const s=this.target;const i=s.target;const r=s.blendWeight;const n=i.animationPose;if(s.dirty>1){n.x+=a[0]*r*e;n.y+=a[1]*r*e;n.rotation+=a[2]*r;n.skew+=a[3]*r;n.scaleX+=(a[4]-1)*r;n.scaleY+=(a[5]-1)*r}else{n.x=a[0]*r*e;n.y=a[1]*r*e;n.rotation=a[2]*r;n.skew=a[3]*r;n.scaleX=(a[4]-1)*r+1;n.scaleY=(a[5]-1)*r+1}if(t||this.dirty){this.dirty=false;i._transformDirty=true}}}d.BoneAllTimelineState=a;class s extends d.DoubleValueTimelineState{static toString(){return"[class dragonBones.BoneTranslateTimelineState]"}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameFloatOffset;this._valueScale=this._armature.armatureData.scale;this._valueArray=this._animationData.parent.parent.frameFloatArray}blend(t){const e=this.target;const a=e.target;const s=e.blendWeight;const i=a.animationPose;if(e.dirty>1){i.x+=this._resultA*s;i.y+=this._resultB*s}else if(s!==1){i.x=this._resultA*s;i.y=this._resultB*s}else{i.x=this._resultA;i.y=this._resultB}if(t||this.dirty){this.dirty=false;a._transformDirty=true}}}d.BoneTranslateTimelineState=s;class i extends d.DoubleValueTimelineState{static toString(){return"[class dragonBones.BoneRotateTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._isTween&&this._frameIndex===this._frameCount-1){this._differenceA=d.Transform.normalizeRadian(this._differenceA);this._differenceB=d.Transform.normalizeRadian(this._differenceB)}}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameFloatOffset;this._valueArray=this._animationData.parent.parent.frameFloatArray}fadeOut(){this.dirty=false;this._resultA=d.Transform.normalizeRadian(this._resultA);this._resultB=d.Transform.normalizeRadian(this._resultB)}blend(t){const e=this.target;const a=e.target;const s=e.blendWeight;const i=a.animationPose;if(e.dirty>1){i.rotation+=this._resultA*s;i.skew+=this._resultB*s}else if(s!==1){i.rotation=this._resultA*s;i.skew=this._resultB*s}else{i.rotation=this._resultA;i.skew=this._resultB}if(t||this.dirty){this.dirty=false;a._transformDirty=true}}}d.BoneRotateTimelineState=i;class r extends d.DoubleValueTimelineState{static toString(){return"[class dragonBones.BoneScaleTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData===null){this._resultA=1;this._resultB=1}}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameFloatOffset;this._valueArray=this._animationData.parent.parent.frameFloatArray}blend(t){const e=this.target;const a=e.target;const s=e.blendWeight;const i=a.animationPose;if(e.dirty>1){i.scaleX+=(this._resultA-1)*s;i.scaleY+=(this._resultB-1)*s}else if(s!==1){i.scaleX=(this._resultA-1)*s+1;i.scaleY=(this._resultB-1)*s+1}else{i.scaleX=this._resultA;i.scaleY=this._resultB}if(t||this.dirty){this.dirty=false;a._transformDirty=true}}}d.BoneScaleTimelineState=r;class n extends d.MutilpleValueTimelineState{static toString(){return"[class dragonBones.SurfaceTimelineState]"}_onClear(){super._onClear();this._deformCount=0;this._deformOffset=0;this._sameValueOffset=0}init(t,e,a){super.init(t,e,a);if(this._timelineData!==null){const s=this._animationData.parent.parent;const i=s.frameIntArray;const r=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+5];this._valueOffset=this._animationData.frameFloatOffset;this._valueCount=i[r+2];this._deformCount=i[r+1];this._deformOffset=i[r+3];this._sameValueOffset=i[r+4]+this._animationData.frameFloatOffset;this._valueScale=this._armature.armatureData.scale;this._valueArray=s.frameFloatArray;this._rd.length=this._valueCount*2}else{this._deformCount=this.target.target._deformVertices.length}}blend(t){const a=this.target;const e=a.target;const s=a.blendWeight;const i=e._deformVertices;const r=this._valueArray;if(r!==null){const n=this._valueCount;const o=this._deformOffset;const l=this._sameValueOffset;const h=this._rd;for(let e=0;e<this._deformCount;++e){let t=0;if(e<o){t=r[l+e]}else if(e<o+n){t=h[e-o]}else{t=r[l+e-n]}if(a.dirty>1){i[e]+=t*s}else{i[e]=t*s}}}else if(a.dirty===1){for(let t=0;t<this._deformCount;++t){i[t]=0}}if(t||this.dirty){this.dirty=false;e._transformDirty=true}}}d.SurfaceTimelineState=n;class o extends d.SingleValueTimelineState{static toString(){return"[class dragonBones.AlphaTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData===null){this._result=1}}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameIntOffset;this._valueScale=.01;this._valueArray=this._animationData.parent.parent.frameIntArray}blend(t){const e=this.target;const a=e.target;const s=e.blendWeight;if(e.dirty>1){a._alpha+=this._result*s;if(a._alpha>1){a._alpha=1}}else{a._alpha=this._result*s}if(t||this.dirty){this.dirty=false;this._armature._alphaDirty=true}}}d.AlphaTimelineState=o;class l extends d.TimelineState{static toString(){return"[class dragonBones.SlotDisplayTimelineState]"}_onArriveAtFrame(){if(this.playState>=0){const t=this.target;const e=this._timelineData!==null?this._frameArray[this._frameOffset+1]:t._slotData.displayIndex;if(t.displayIndex!==e){t._setDisplayIndex(e,true)}}}_onUpdateFrame(){}}d.SlotDisplayTimelineState=l;class h extends d.TweenTimelineState{constructor(){super(...arguments);this._current=[0,0,0,0,0,0,0,0];this._difference=[0,0,0,0,0,0,0,0];this._result=[0,0,0,0,0,0,0,0]}static toString(){return"[class dragonBones.SlotColorTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){const e=this._animationData.parent.parent;const a=e.colorArray;const s=e.frameIntArray;const i=this._animationData.frameIntOffset+this._frameValueOffset+this._frameIndex;let t=s[i];if(t<0){t+=65536}if(this._isTween){this._current[0]=a[t++];this._current[1]=a[t++];this._current[2]=a[t++];this._current[3]=a[t++];this._current[4]=a[t++];this._current[5]=a[t++];this._current[6]=a[t++];this._current[7]=a[t++];if(this._frameIndex===this._frameCount-1){t=s[this._animationData.frameIntOffset+this._frameValueOffset]}else{t=s[i+1]}if(t<0){t+=65536}this._difference[0]=a[t++]-this._current[0];this._difference[1]=a[t++]-this._current[1];this._difference[2]=a[t++]-this._current[2];this._difference[3]=a[t++]-this._current[3];this._difference[4]=a[t++]-this._current[4];this._difference[5]=a[t++]-this._current[5];this._difference[6]=a[t++]-this._current[6];this._difference[7]=a[t++]-this._current[7]}else{this._result[0]=a[t++]*.01;this._result[1]=a[t++]*.01;this._result[2]=a[t++]*.01;this._result[3]=a[t++]*.01;this._result[4]=a[t++];this._result[5]=a[t++];this._result[6]=a[t++];this._result[7]=a[t++]}}else{const t=this.target;const r=t.slotData.color;this._result[0]=r.alphaMultiplier;this._result[1]=r.redMultiplier;this._result[2]=r.greenMultiplier;this._result[3]=r.blueMultiplier;this._result[4]=r.alphaOffset;this._result[5]=r.redOffset;this._result[6]=r.greenOffset;this._result[7]=r.blueOffset}}_onUpdateFrame(){super._onUpdateFrame();if(this._isTween){this._result[0]=(this._current[0]+this._difference[0]*this._tweenProgress)*.01;this._result[1]=(this._current[1]+this._difference[1]*this._tweenProgress)*.01;this._result[2]=(this._current[2]+this._difference[2]*this._tweenProgress)*.01;this._result[3]=(this._current[3]+this._difference[3]*this._tweenProgress)*.01;this._result[4]=this._current[4]+this._difference[4]*this._tweenProgress;this._result[5]=this._current[5]+this._difference[5]*this._tweenProgress;this._result[6]=this._current[6]+this._difference[6]*this._tweenProgress;this._result[7]=this._current[7]+this._difference[7]*this._tweenProgress}}fadeOut(){this._isTween=false}update(t){super.update(t);if(this._isTween||this.dirty){const e=this.target;const a=e._colorTransform;if(this._animationState._fadeState!==0||this._animationState._subFadeState!==0){if(a.alphaMultiplier!==this._result[0]||a.redMultiplier!==this._result[1]||a.greenMultiplier!==this._result[2]||a.blueMultiplier!==this._result[3]||a.alphaOffset!==this._result[4]||a.redOffset!==this._result[5]||a.greenOffset!==this._result[6]||a.blueOffset!==this._result[7]){const s=Math.pow(this._animationState._fadeProgress,4);a.alphaMultiplier+=(this._result[0]-a.alphaMultiplier)*s;a.redMultiplier+=(this._result[1]-a.redMultiplier)*s;a.greenMultiplier+=(this._result[2]-a.greenMultiplier)*s;a.blueMultiplier+=(this._result[3]-a.blueMultiplier)*s;a.alphaOffset+=(this._result[4]-a.alphaOffset)*s;a.redOffset+=(this._result[5]-a.redOffset)*s;a.greenOffset+=(this._result[6]-a.greenOffset)*s;a.blueOffset+=(this._result[7]-a.blueOffset)*s;e._colorDirty=true}}else if(this.dirty){this.dirty=false;if(a.alphaMultiplier!==this._result[0]||a.redMultiplier!==this._result[1]||a.greenMultiplier!==this._result[2]||a.blueMultiplier!==this._result[3]||a.alphaOffset!==this._result[4]||a.redOffset!==this._result[5]||a.greenOffset!==this._result[6]||a.blueOffset!==this._result[7]){a.alphaMultiplier=this._result[0];a.redMultiplier=this._result[1];a.greenMultiplier=this._result[2];a.blueMultiplier=this._result[3];a.alphaOffset=this._result[4];a.redOffset=this._result[5];a.greenOffset=this._result[6];a.blueOffset=this._result[7];e._colorDirty=true}}}}}d.SlotColorTimelineState=h;class _ extends d.SingleValueTimelineState{static toString(){return"[class dragonBones.SlotZIndexTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData===null){const t=this.target;const e=t.target;this._result=e.slotData.zIndex}}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameIntOffset;this._valueArray=this._animationData.parent.parent.frameIntArray}blend(t){const e=this.target;const a=e.target;const s=e.blendWeight;if(e.dirty>1){a._zIndex+=this._result*s}else{a._zIndex=this._result*s}if(t||this.dirty){this.dirty=false;this._armature._zIndexDirty=true}}}d.SlotZIndexTimelineState=_;class f extends d.MutilpleValueTimelineState{static toString(){return"[class dragonBones.DeformTimelineState]"}_onClear(){super._onClear();this.displayFrame=null;this._deformCount=0;this._deformOffset=0;this._sameValueOffset=0}init(t,e,a){super.init(t,e,a);if(this._timelineData!==null){const s=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+5];const i=this._animationData.parent.parent;const r=i.frameIntArray;this._valueOffset=this._animationData.frameFloatOffset;this._valueCount=r[s+2];this._deformCount=r[s+1];this._deformOffset=r[s+3];this._sameValueOffset=r[s+4];if(this._sameValueOffset<0){this._sameValueOffset+=65536}this._sameValueOffset+=this._animationData.frameFloatOffset;this._valueScale=this._armature.armatureData.scale;this._valueArray=i.frameFloatArray;this._rd.length=this._valueCount*2}else{this._deformCount=this.displayFrame.deformVertices.length}}blend(t){const a=this.target;const e=a.target;const s=a.blendWeight;const i=this.displayFrame.deformVertices;const r=this._valueArray;if(r!==null){const n=this._valueCount;const o=this._deformOffset;const l=this._sameValueOffset;const h=this._rd;for(let e=0;e<this._deformCount;++e){let t=0;if(e<o){t=r[l+e]}else if(e<o+n){t=h[e-o]}else{t=r[l+e-n]}if(a.dirty>1){i[e]+=t*s}else{i[e]=t*s}}}else if(a.dirty===1){for(let t=0;t<this._deformCount;++t){i[t]=0}}if(t||this.dirty){this.dirty=false;if(e._geometryData===this.displayFrame.getGeometryData()){e._verticesDirty=true}}}}d.DeformTimelineState=f;class c extends d.MutilpleValueTimelineState{static toString(){return"[class dragonBones.PathTimelineState]"}_onClear(){super._onClear();this.displayFrame=null;this._deformCount=0;this._deformOffset=0;this._sameValueOffset=0}init(t,e,a){super.init(t,e,a);if(this._timelineData!==null){const s=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+5];const i=this._animationData.parent.parent;const r=i.frameIntArray;this._valueOffset=this._animationData.frameFloatOffset;this._valueCount=r[s+2];this._deformCount=r[s+1];this._deformOffset=r[s+3];this._sameValueOffset=r[s+4];if(this._sameValueOffset<0){this._sameValueOffset+=65536}this._sameValueOffset+=this._animationData.frameFloatOffset;this._valueScale=this._armature.armatureData.scale;this._valueArray=i.frameFloatArray;this._rd.length=this._valueCount*2}else{this._deformCount=this.displayFrame.deformVertices.length}}blend(t){const a=this.target;const e=a.target;const s=a.blendWeight;const i=this.displayFrame.deformVertices;const r=this._valueArray;if(r!==null){const n=this._valueCount;const o=this._deformOffset;const l=this._sameValueOffset;const h=this._rd;for(let e=0;e<this._deformCount;++e){let t=0;if(e<o){t=r[l+e]}else if(e<o+n){t=h[e-o]}else{t=r[l+e-n]}if(a.dirty>1){i[e]+=t*s}else{i[e]=t*s}}}else if(a.dirty===1){for(let t=0;t<this._deformCount;++t){i[t]=0}}if(t||this.dirty){this.dirty=false;if(e._geometryData===this.displayFrame.getGeometryData()){e._verticesDirty=true}}}}d.PathTimelineState=c;class u extends d.DoubleValueTimelineState{static toString(){return"[class dragonBones.IKConstraintTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(this._timelineData!==null){t._bendPositive=this._currentA>0;t._weight=this._resultB}else{const e=t._constraintData;t._bendPositive=e.bendPositive;t._weight=e.weight}t.invalidUpdate();this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameIntOffset;this._valueScale=.01;this._valueArray=this._animationData.parent.parent.frameIntArray}}d.IKConstraintTimelineState=u;class m extends d.SingleValueTimelineState{static toString(){return"[class dragonBones.PathConstraintPositionTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(this._timelineData!==null){t.position=this._result}else{const e=t._constraintData;t.position=e.position}t.invalidUpdate();this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameFloatOffset;this._valueArray=this._animationData.parent.parent.frameFloatArray}}d.PathConstraintPositionTimelineState=m;class p extends d.SingleValueTimelineState{static toString(){return"[class dragonBones.PathConstraintSpacingTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(this._timelineData!==null){t.spacing=this._result}else{const e=t._constraintData;t.spacing=e.spacing}t.invalidUpdate();this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameFloatOffset;this._valueArray=this._animationData.parent.parent.frameFloatArray}}d.PathConstraintSpacingTimelineState=p;class g extends d.MutilpleValueTimelineState{static toString(){return"[class dragonBones.PathConstraintWeightTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(this._timelineData!==null){const e=this._rd;t.rotateWeight=e[0];t.xWeight=e[1];t.yWeight=e[2]}else{const a=t._constraintData;t.rotateWeight=a.rotateWeight;t.xWeight=a.xWeight;t.yWeight=a.yWeight}t.invalidUpdate();this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueCount=3;this._valueOffset=this._animationData.frameFloatOffset;this._valueArray=this._animationData.parent.parent.frameFloatArray}}d.PathConstraintWeightTimelineState=g;class y extends d.SingleValueTimelineState{static toString(){return"[class dragonBones.AnimationProgressTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(t._parent!==null){t.currentTime=this._result*t.totalTime}this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameIntOffset;this._valueScale=1e-4;this._valueArray=this._animationData.parent.parent.frameIntArray}}d.AnimationProgressTimelineState=y;class D extends d.SingleValueTimelineState{static toString(){return"[class dragonBones.AnimationWeightTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(t._parent!==null){t.weight=this._result}this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameIntOffset;this._valueScale=1e-4;this._valueArray=this._animationData.parent.parent.frameIntArray}}d.AnimationWeightTimelineState=D;class T extends d.DoubleValueTimelineState{static toString(){return"[class dragonBones.AnimationParametersTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(t._parent!==null){t.parameterX=this._resultA;t.parameterY=this._resultB}this.dirty=false}init(t,e,a){super.init(t,e,a);this._valueOffset=this._animationData.frameIntOffset;this._valueScale=1e-4;this._valueArray=this._animationData.parent.parent.frameIntArray}}d.AnimationParametersTimelineState=T;class b extends d.MutilpleValueTimelineState{static toString(){return"[class dragonBones.ShapeTimelineState]"}_onClear(){super._onClear();this.displayFrame=null;this._deformCount=0;this._deformOffset=0;this._sameValueOffset=0}init(t,e,a){super.init(t,e,a);if(this._timelineData!==null){const s=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+5];const i=this._animationData.parent.parent;const r=i.frameIntArray;this._valueOffset=this._animationData.frameFloatOffset;this._valueCount=r[s+2];this._deformCount=r[s+1];this._deformOffset=r[s+3];this._sameValueOffset=r[s+4];if(this._sameValueOffset<0){this._sameValueOffset+=65536}this._sameValueOffset+=this._animationData.frameFloatOffset;this._valueScale=this._armature.armatureData.scale;this._valueArray=i.frameFloatArray;this._rd.length=this._valueCount*2}else{this._deformCount=this.displayFrame.deformVertices.length}}blend(t){const a=this.target;const e=a.target;const s=a.blendWeight;const i=this.displayFrame.deformVertices;const r=this._valueArray;if(r!==null){const n=this._valueCount;const o=this._deformOffset;const l=this._sameValueOffset;const h=this._rd;for(let e=0;e<this._deformCount;++e){let t=0;if(e<o){t=r[l+e]}else if(e<o+n){t=h[e-o]}else{t=r[l+e-n]}if(a.dirty>1){i[e]+=t*s}else{i[e]=t*s}}}else if(a.dirty===1){for(let t=0;t<this._deformCount;++t){i[t]=0}}if(t||this.dirty){this.dirty=false;if(e._geometryData===this.displayFrame.getGeometryData()){e._verticesDirty=true}}}}d.ShapeTimelineState=b})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class s extends t.BaseObject{static actionDataToInstance(t,e,a){if(t.type===0){e.type=s.FRAME_EVENT}else{e.type=t.type===10?s.FRAME_EVENT:s.SOUND_EVENT}e.name=t.name;e.armature=a;e.actionData=t;e.data=t.data;if(t.bone!==null){e.bone=a.getBone(t.bone.name)}if(t.slot!==null){e.slot=a.getSlot(t.slot.name)}}static toString(){return"[class dragonBones.EventObject]"}_onClear(){this.time=0;this.type="";this.name="";this.armature=null;this.bone=null;this.slot=null;this.animationState=null;this.actionData=null;this.data=null}}s.START="start";s.LOOP_COMPLETE="loopComplete";s.COMPLETE="complete";s.FADE_IN="fadeIn";s.FADE_IN_COMPLETE="fadeInComplete";s.FADE_OUT="fadeOut";s.FADE_OUT_COMPLETE="fadeOutComplete";s.FRAME_EVENT="frameEvent";s.SOUND_EVENT="soundEvent";t.EventObject=s})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{static _getArmatureType(t){switch(t.toLowerCase()){case"stage":return 2;case"armature":return 0;case"movieclip":return 1;default:return 0}}static _getBoneType(t){switch(t.toLowerCase()){case"bone":return 0;case"surface":return 1;default:return 0}}static _getPositionMode(t){switch(t){case 1:return 1;case 0:return 0;default:return 1}}static _getSpacingMode(t){switch(t){case 0:return 0;case 2:return 2;case 1:return 1;default:return 0}}static _getRotateMode(t){switch(t){case 0:return 0;case 1:return 1;case 2:return 2;case 3:return 3;default:return 0}}static _getDisplayType(t){switch(t.toLowerCase()){case"image":return 0;case"mesh":return 2;case"armature":return 1;case"boundingbox":return 3;case"path":return 4;case"shape":return 5;default:return 0}}static _getBoundingBoxType(t){switch(t.toLowerCase()){case"rectangle":return 0;case"ellipse":return 1;case"polygon":return 2;default:return 0}}static _getBlendMode(t){switch(t.toLowerCase()){case"normal":return 0;case"add":return 1;case"alpha":return 2;case"darken":return 3;case"difference":return 4;case"erase":return 5;case"hardlight":return 6;case"invert":return 7;case"layer":return 8;case"lighten":return 9;case"multiply":return 10;case"overlay":return 11;case"screen":return 12;case"subtract":return 13;default:return 0}}static _getAnimationBlendType(t){switch(t.toLowerCase()){case"none":return 0;case"1d":return 1;default:return 0}}static _getActionType(t){switch(t.toLowerCase()){case"play":return 0;case"frame":return 10;case"sound":return 11;default:return 0}}}e.DATA_VERSION_2_3="2.3";e.DATA_VERSION_3_0="3.0";e.DATA_VERSION_4_0="4.0";e.DATA_VERSION_4_5="4.5";e.DATA_VERSION_5_0="5.0";e.DATA_VERSION_5_5="5.5";e.DATA_VERSION_5_6="5.6";e.DATA_VERSION_6_0="6.0";e.DATA_VERSION=e.DATA_VERSION_5_6;e.DATA_VERSIONS=[e.DATA_VERSION_4_0,e.DATA_VERSION_4_5,e.DATA_VERSION_5_0,e.DATA_VERSION_5_5,e.DATA_VERSION_5_6,e.DATA_VERSION_6_0];e.TEXTURE_ATLAS="textureAtlas";e.SUB_TEXTURE="SubTexture";e.FORMAT="format";e.IMAGE_PATH="imagePath";e.WIDTH="width";e.HEIGHT="height";e.ROTATED="rotated";e.FRAME_X="frameX";e.FRAME_Y="frameY";e.FRAME_WIDTH="frameWidth";e.FRAME_HEIGHT="frameHeight";e.DRADON_BONES="dragonBones";e.USER_DATA="userData";e.ARMATURE="armature";e.CANVAS="canvas";e.BONE="bone";e.SURFACE="surface";e.SLOT="slot";e.CONSTRAINT="constraint";e.SKIN="skin";e.DISPLAY="display";e.FRAME="frame";e.IK="ik";e.TRANSFORM_CONSTRAINT="transform";e.PHYSICS="physics";e.PATH_CONSTRAINT="path";e.PATH_CONSTRAINT_POSITION="position";e.PATH_CONSTRAINT_SPACING="spacing";e.PATH_CONSTRAINT_WEIGHT="weight";e.ANIMATION="animation";e.TIMELINE="timeline";e.FFD="ffd";e.SHAPE="shape";e.TRANSLATE_FRAME="translateFrame";e.ROTATE_FRAME="rotateFrame";e.SCALE_FRAME="scaleFrame";e.DISPLAY_FRAME="displayFrame";e.COLOR_FRAME="colorFrame";e.DEFAULT_ACTIONS="defaultActions";e.ACTIONS="actions";e.EVENTS="events";e.INTS="ints";e.FLOATS="floats";e.STRINGS="strings";e.TRANSFORM="transform";e.PIVOT="pivot";e.AABB="aabb";e.COLOR="color";e.VERSION="version";e.COMPATIBLE_VERSION="compatibleVersion";e.FRAME_RATE="frameRate";e.TYPE="type";e.SUB_TYPE="subType";e.NAME="name";e.PARENT="parent";e.TARGET="target";e.STAGE="stage";e.SHARE="share";e.PATH="path";e.LENGTH="length";e.DISPLAY_INDEX="displayIndex";e.Z_ORDER="zOrder";e.Z_INDEX="zIndex";e.BLEND_MODE="blendMode";e.INHERIT_TRANSLATION="inheritTranslation";e.INHERIT_ROTATION="inheritRotation";e.INHERIT_SCALE="inheritScale";e.INHERIT_REFLECTION="inheritReflection";e.INHERIT_ANIMATION="inheritAnimation";e.INHERIT_DEFORM="inheritDeform";e.SEGMENT_X="segmentX";e.SEGMENT_Y="segmentY";e.BEND_POSITIVE="bendPositive";e.CHAIN="chain";e.WEIGHT="weight";e.MASK="mask";e.MASK_RANGE="maskRange";e.BLEND_TYPE="blendType";e.FADE_IN_TIME="fadeInTime";e.PLAY_TIMES="playTimes";e.SCALE="scale";e.OFFSET="offset";e.LOOP="loop";e.POSITION="position";e.DURATION="duration";e.TWEEN_EASING="tweenEasing";e.TWEEN_ROTATE="tweenRotate";e.TWEEN_SCALE="tweenScale";e.CLOCK_WISE="clockwise";e.CURVE="curve";e.SOUND="sound";e.EVENT="event";e.ACTION="action";e.X="x";e.Y="y";e.SKEW_X="skX";e.SKEW_Y="skY";e.SCALE_X="scX";e.SCALE_Y="scY";e.SHEAR_X="shearX";e.VALUE="value";e.ROTATE="rotate";e.SKEW="skew";e.ALPHA="alpha";e.ALPHA_OFFSET="aO";e.RED_OFFSET="rO";e.GREEN_OFFSET="gO";e.BLUE_OFFSET="bO";e.ALPHA_MULTIPLIER="aM";e.RED_MULTIPLIER="rM";e.GREEN_MULTIPLIER="gM";e.BLUE_MULTIPLIER="bM";e.UVS="uvs";e.VERTICES="vertices";e.TRIANGLES="triangles";e.WEIGHTS="weights";e.SLOT_POSE="slotPose";e.BONE_POSE="bonePose";e.BONES="bones";e.POSITION_MODE="positionMode";e.SPACING_MODE="spacingMode";e.ROTATE_MODE="rotateMode";e.SPACING="spacing";e.ROTATE_OFFSET="rotateOffset";e.ROTATE_WEIGHT="rotateWeight";e.SCALE_WEIGHT="scaleWeight";e.TRANSLATE_WEIGHT="translateWeight";e.X_WEIGHT="xWeight";e.Y_WEIGHT="yWeight";e.LOCAL="local";e.RELATIVE="relative";e.TARGET_DISPLAY="targetDisplay";e.CLOSED="closed";e.CONSTANT_SPEED="constantSpeed";e.VERTEX_COUNT="vertexCount";e.LENGTHS="lengths";e.GOTO_AND_PLAY="gotoAndPlay";e.DEFAULT_NAME="default";e.LIMIT="limit";e.FPS="fps";e.INERTIA="inertia";e.STRENGTH="strength";e.DAMPING="damping";e.MASS="mass";e.WIND="wind";e.WIND_DISTURBANCE="windDisturbance";e.GRAVITY="gravity";t.DataParser=e})(dragonBones||(dragonBones={}));var dragonBones;(function(w){class v extends w.DataParser{constructor(){super(...arguments);this._rawTextureAtlasIndex=0;this._rawBones=[];this._data=null;this._armature=null;this._bone=null;this._geometry=null;this._slot=null;this._skin=null;this._mesh=null;this._shape=null;this._path=null;this._animation=null;this._timeline=null;this._rawTextureAtlases=null;this._frameValueType=0;this._defaultColorOffset=-1;this._prevClockwise=0;this._prevRotation=0;this._frameDefaultValue=0;this._frameValueScale=1;this._helpMatrixA=new w.Matrix;this._helpMatrixB=new w.Matrix;this._helpTransform=new w.Transform;this._helpColorTransform=new w.ColorTransform;this._helpPoint=new w.Point;this._helpArray=[];this._intArray=[];this._floatArray=[];this._frameIntArray=[];this._frameFloatArray=[];this._frameArray=[];this._timelineArray=[];this._colorArray=[];this._cacheRawMeshes=[];this._cacheMeshes=[];this._actionFrames=[];this._weightSlotPose={};this._weightBonePoses={};this._cacheBones={};this._slotChildActions={}}static _getBoolean(t,e,a){if(e in t){const s=t[e];const i=typeof s;if(i==="boolean"){return s}else if(i==="string"){switch(s){case"0":case"NaN":case"":case"false":case"null":case"undefined":return false;default:return true}}else{return!!s}}return a}static _getNumber(t,e,a){if(e in t){const s=t[e];if(s===null||s==="NaN"){return a}return+s||0}return a}static _getString(t,e,a){if(e in t){const s=t[e];const i=typeof s;if(i==="string"){return s}return String(s)}return a}_getCurvePoint(t,e,a,s,i,r,n,o,l,h){const _=1-l;const f=_*_;const c=l*l;const u=_*f;const m=3*l*f;const d=3*_*c;const p=l*c;h.x=u*t+m*a+d*i+p*n;h.y=u*e+m*s+d*r+p*o}_samplingEasingCurve(n,o){const l=n.length;if(l%3===1){let r=-2;for(let s=0,i=o.length;s<i;++s){let t=(s+1)/(i+1);while((r+6<l?n[r+6]:1)<t){r+=6}const h=r>=0&&r+6<l;const _=h?n[r]:0;const f=h?n[r+1]:0;const c=n[r+2];const u=n[r+3];const m=n[r+4];const d=n[r+5];const p=h?n[r+6]:1;const g=h?n[r+7]:1;let e=0;let a=1;while(a-e>1e-4){const y=(a+e)*.5;this._getCurvePoint(_,f,c,u,m,d,p,g,y,this._helpPoint);if(t-this._helpPoint.x>0){e=y}else{a=y}}o[s]=this._helpPoint.y}return true}else{let r=0;for(let s=0,i=o.length;s<i;++s){let t=(s+1)/(i+1);while(n[r+6]<t){r+=6}const _=n[r];const f=n[r+1];const c=n[r+2];const u=n[r+3];const m=n[r+4];const d=n[r+5];const p=n[r+6];const g=n[r+7];let e=0;let a=1;while(a-e>1e-4){const y=(a+e)*.5;this._getCurvePoint(_,f,c,u,m,d,p,g,y,this._helpPoint);if(t-this._helpPoint.x>0){e=y}else{a=y}}o[s]=this._helpPoint.y}return false}}_parseActionDataInFrame(t,e,a,s){if(w.DataParser.EVENT in t){this._mergeActionFrame(t[w.DataParser.EVENT],e,10,a,s)}if(w.DataParser.SOUND in t){this._mergeActionFrame(t[w.DataParser.SOUND],e,11,a,s)}if(w.DataParser.ACTION in t){this._mergeActionFrame(t[w.DataParser.ACTION],e,0,a,s)}if(w.DataParser.EVENTS in t){this._mergeActionFrame(t[w.DataParser.EVENTS],e,10,a,s)}if(w.DataParser.ACTIONS in t){this._mergeActionFrame(t[w.DataParser.ACTIONS],e,0,a,s)}}_mergeActionFrame(t,e,a,s,i){const r=this._armature.actions.length;const n=this._parseActionData(t,a,s,i);let o=0;let l=null;for(const h of n){this._armature.addAction(h,false)}if(this._actionFrames.length===0){l=new y;l.frameStart=0;this._actionFrames.push(l);l=null}for(const _ of this._actionFrames){if(_.frameStart===e){l=_;break}else if(_.frameStart>e){break}o++}if(l===null){l=new y;l.frameStart=e;this._actionFrames.splice(o,0,l)}for(let t=0;t<n.length;++t){l.actions.push(r+t)}}_parseArmature(a,t){const s=w.BaseObject.borrowObject(w.ArmatureData);s.name=v._getString(a,w.DataParser.NAME,"");s.frameRate=v._getNumber(a,w.DataParser.FRAME_RATE,this._data.frameRate);s.scale=t;if(w.DataParser.TYPE in a&&typeof a[w.DataParser.TYPE]==="string"){s.type=w.DataParser._getArmatureType(a[w.DataParser.TYPE])}else{s.type=v._getNumber(a,w.DataParser.TYPE,0)}if(s.frameRate===0){s.frameRate=24}this._armature=s;if(w.DataParser.CANVAS in a){const e=a[w.DataParser.CANVAS];const i=w.BaseObject.borrowObject(w.CanvasData);if(w.DataParser.COLOR in e){i.hasBackground=true}else{i.hasBackground=false}i.color=v._getNumber(e,w.DataParser.COLOR,0);i.x=v._getNumber(e,w.DataParser.X,0)*s.scale;i.y=v._getNumber(e,w.DataParser.Y,0)*s.scale;i.width=v._getNumber(e,w.DataParser.WIDTH,0)*s.scale;i.height=v._getNumber(e,w.DataParser.HEIGHT,0)*s.scale;s.canvas=i}if(w.DataParser.AABB in a){const r=a[w.DataParser.AABB];s.aabb.x=v._getNumber(r,w.DataParser.X,0)*s.scale;s.aabb.y=v._getNumber(r,w.DataParser.Y,0)*s.scale;s.aabb.width=v._getNumber(r,w.DataParser.WIDTH,0)*s.scale;s.aabb.height=v._getNumber(r,w.DataParser.HEIGHT,0)*s.scale}if(w.DataParser.BONE in a){const n=a[w.DataParser.BONE];for(const o of n){const l=v._getString(o,w.DataParser.PARENT,"");const h=this._parseBone(o);if(l.length>0){const _=s.getBone(l);if(_!==null){h.parent=_}else{if(!(l in this._cacheBones)){this._cacheBones[l]=[]}this._cacheBones[l].push(h)}}if(h.name in this._cacheBones){for(const f of this._cacheBones[h.name]){f.parent=h}delete this._cacheBones[h.name]}s.addBone(h);this._rawBones.push(h)}}if(w.DataParser.IK in a){const c=a[w.DataParser.IK];for(const u of c){const m=this._parseIKConstraint(u);if(m){s.addConstraint(m)}}}if(w.DataParser.TRANSFORM_CONSTRAINT in a){const d=a[w.DataParser.TRANSFORM_CONSTRAINT];for(const p of d){const m=this._parseTransformConstraint(p);if(m){s.addConstraint(m)}}}if(w.DataParser.PHYSICS in a){const g=a[w.DataParser.PHYSICS];for(const y of g){const m=this._parsePhysics(y);if(m){s.addConstraint(m)}}}if(w.DataParser.SLOT in a){let t=0;const D=a[w.DataParser.SLOT];for(const T of D){s.addSlot(this._parseSlot(T,t++))}}if(w.DataParser.SKIN in a){const b=a[w.DataParser.SKIN];for(const A of b){s.addSkin(this._parseSkin(A))}}if(w.DataParser.PATH_CONSTRAINT in a){const S=a[w.DataParser.PATH_CONSTRAINT];for(const P of S){const m=this._parsePathConstraint(P);if(m){s.addConstraint(m)}}}for(let e=0,t=this._cacheRawMeshes.length;e<t;++e){const a=this._cacheRawMeshes[e];const O=v._getString(a,w.DataParser.SHARE,"");if(O.length===0){continue}let t=v._getString(a,w.DataParser.SKIN,w.DataParser.DEFAULT_NAME);if(t.length===0){t=w.DataParser.DEFAULT_NAME}const x=s.getMesh(t,"",O);if(x===null){continue}const B=this._cacheMeshes[e];B.geometry.shareFrom(x.geometry)}if(w.DataParser.ANIMATION in a){const E=a[w.DataParser.ANIMATION];for(const I of E){const M=this._parseAnimation(I);s.addAnimation(M)}}if(w.DataParser.DEFAULT_ACTIONS in a){const C=this._parseActionData(a[w.DataParser.DEFAULT_ACTIONS],0,null,null);for(const F of C){s.addAction(F,true);if(F.type===0){const M=s.getAnimation(F.name);if(M!==null){s.defaultAnimation=M}}}}if(w.DataParser.ACTIONS in a){const C=this._parseActionData(a[w.DataParser.ACTIONS],0,null,null);for(const F of C){s.addAction(F,false)}}s.sortBones();this._rawBones.length=0;this._cacheRawMeshes.length=0;this._cacheMeshes.length=0;this._armature=null;for(let t in this._weightSlotPose){delete this._weightSlotPose[t]}for(let t in this._weightBonePoses){delete this._weightBonePoses[t]}for(let t in this._cacheBones){delete this._cacheBones[t]}for(let t in this._slotChildActions){delete this._slotChildActions[t]}return s}_parseBone(t){let e=0;if(w.DataParser.TYPE in t&&typeof t[w.DataParser.TYPE]==="string"){e=w.DataParser._getBoneType(t[w.DataParser.TYPE])}else{e=v._getNumber(t,w.DataParser.TYPE,0)}if(e===0){const s=this._armature.scale;const i=w.BaseObject.borrowObject(w.BoneData);i.inheritTranslation=v._getBoolean(t,w.DataParser.INHERIT_TRANSLATION,true);i.inheritRotation=v._getBoolean(t,w.DataParser.INHERIT_ROTATION,true);i.inheritScale=v._getBoolean(t,w.DataParser.INHERIT_SCALE,true);i.inheritReflection=v._getBoolean(t,w.DataParser.INHERIT_REFLECTION,true);i.length=v._getNumber(t,w.DataParser.LENGTH,0)*s;i.alpha=v._getNumber(t,w.DataParser.ALPHA,1);i.name=v._getString(t,w.DataParser.NAME,"");if(w.DataParser.TRANSFORM in t){this._parseTransform(t[w.DataParser.TRANSFORM],i.transform,s)}return i}const a=w.BaseObject.borrowObject(w.SurfaceData);a.alpha=v._getNumber(t,w.DataParser.ALPHA,1);a.name=v._getString(t,w.DataParser.NAME,"");a.segmentX=v._getNumber(t,w.DataParser.SEGMENT_X,0);a.segmentY=v._getNumber(t,w.DataParser.SEGMENT_Y,0);this._parseGeometry(t,t,a.geometry);return a}_parseIKConstraint(t){const e=this._armature.getBone(v._getString(t,w.DataParser.BONE,""));if(e===null){return null}const a=this._armature.getBone(v._getString(t,w.DataParser.TARGET,""));if(a===null){return null}const s=v._getNumber(t,w.DataParser.CHAIN,0);const i=w.BaseObject.borrowObject(w.IKConstraintData);i.scaleEnabled=v._getBoolean(t,w.DataParser.SCALE,false);i.bendPositive=v._getBoolean(t,w.DataParser.BEND_POSITIVE,true);i.weight=v._getNumber(t,w.DataParser.WEIGHT,1);i.name=v._getString(t,w.DataParser.NAME,"");i.type=0;i.target=a;if(s>0&&e.parent!==null){i.root=e.parent;i.bone=e}else{i.root=e;i.bone=null}return i}_parseTransformConstraint(t){const e=this._armature.getBone(v._getString(t,w.DataParser.TARGET,""));if(e===null){return null}const a=t[w.DataParser.BONES];if(a===null||a.length===0){return null}const s=new Array;for(let t of a){const n=this._armature.getBone(t);if(n!==null){s.push(n)}}if(s.length===0){return null}const i=w.BaseObject.borrowObject(w.TransformConstraintData);i.type=2;i.target=e;i.bones=s;i.name=v._getString(t,w.DataParser.NAME,"");const r=t[w.DataParser.OFFSET];i.offsetX=v._getNumber(r,w.DataParser.X,0);i.offsetY=v._getNumber(r,w.DataParser.Y,0);if(w.DataParser.SKEW_X in r){i.offsetRotation=w.Transform.normalizeRadian(v._getNumber(r,w.DataParser.SKEW_X,0)*w.Transform.DEG_RAD)}i.offsetScaleX=v._getNumber(r,w.DataParser.SCALE_X,0);i.offsetScaleY=v._getNumber(r,w.DataParser.SCALE_Y,0);i.rotateWeight=v._getNumber(t,w.DataParser.ROTATE_WEIGHT,0);i.scaleWeight=v._getNumber(t,w.DataParser.SCALE_WEIGHT,0);i.translateWeight=v._getNumber(t,w.DataParser.TRANSLATE_WEIGHT,0);i.local=v._getBoolean(t,w.DataParser.LOCAL,false);i.relative=v._getBoolean(t,w.DataParser.RELATIVE,false);return i}_parsePhysics(t){const e=t[w.DataParser.BONE];if(!e){return null}const a=this._armature.getBone(e);if(!a){return null}const s=w.BaseObject.borrowObject(w.PhysicsConstraintData);s.type=3;s.target=a;s.bone=a;s.name=v._getString(t,w.DataParser.NAME,"");s.x=v._getNumber(t,w.DataParser.X,0);s.y=v._getNumber(t,w.DataParser.Y,0);s.rotate=v._getNumber(t,w.DataParser.ROTATE,0);s.scaleX=v._getNumber(t,w.DataParser.SCALE_X,0);s.shearX=v._getNumber(t,w.DataParser.SHEAR_X,0);s.limit=v._getNumber(t,w.DataParser.LIMIT,0);s.fps=v._getNumber(t,w.DataParser.FPS,1);s.inertia=v._getNumber(t,w.DataParser.INERTIA,0);s.strength=v._getNumber(t,w.DataParser.STRENGTH,0);s.damping=v._getNumber(t,w.DataParser.DAMPING,0);s.mass=v._getNumber(t,w.DataParser.MASS,0);s.wind=v._getNumber(t,w.DataParser.WIND,0);s.windDisturbance=v._getNumber(t,w.DataParser.WIND_DISTURBANCE,0);s.gravity=v._getNumber(t,w.DataParser.GRAVITY,0);s.weight=v._getNumber(t,w.DataParser.WEIGHT,0);return s}_parsePathConstraint(t){const e=this._armature.getSlot(v._getString(t,w.DataParser.TARGET,""));if(e===null){return null}const a=this._armature.defaultSkin;if(a===null){return null}const s=a.getDisplay(e.name,v._getString(t,w.DataParser.TARGET_DISPLAY,e.name));if(s===null||!(s instanceof w.PathDisplayData)){return null}const i=t[w.DataParser.BONES];if(i===null||i.length===0){return null}const r=w.BaseObject.borrowObject(w.PathConstraintData);r.name=v._getString(t,w.DataParser.NAME,"");r.type=1;r.pathSlot=e;r.pathDisplayData=s;r.target=e.parent;r.positionMode=w.DataParser._getPositionMode(v._getNumber(t,w.DataParser.POSITION_MODE,0));r.spacingMode=w.DataParser._getSpacingMode(v._getNumber(t,w.DataParser.SPACING_MODE,1));r.rotateMode=w.DataParser._getRotateMode(v._getNumber(t,w.DataParser.ROTATE_MODE,0));r.position=v._getNumber(t,w.DataParser.POSITION,0);r.spacing=v._getNumber(t,w.DataParser.SPACING,0);r.rotateOffset=v._getNumber(t,w.DataParser.ROTATE_OFFSET,0);r.rotateWeight=v._getNumber(t,w.DataParser.ROTATE_WEIGHT,1);r.xWeight=v._getNumber(t,w.DataParser.X_WEIGHT,1);r.yWeight=v._getNumber(t,w.DataParser.Y_WEIGHT,1);for(var n of i){const o=this._armature.getBone(n);if(o!==null){r.AddBone(o);if(r.root===null){r.root=o}}}return r}_parseSlot(t,e){const a=w.BaseObject.borrowObject(w.SlotData);a.displayIndex=v._getNumber(t,w.DataParser.DISPLAY_INDEX,0);a.zOrder=e;a.zIndex=v._getNumber(t,w.DataParser.Z_INDEX,0);a.alpha=v._getNumber(t,w.DataParser.ALPHA,1);a.name=v._getString(t,w.DataParser.NAME,"");a.parent=this._armature.getBone(v._getString(t,w.DataParser.PARENT,""));if(w.DataParser.BLEND_MODE in t&&typeof t[w.DataParser.BLEND_MODE]==="string"){a.blendMode=w.DataParser._getBlendMode(t[w.DataParser.BLEND_MODE])}else{a.blendMode=v._getNumber(t,w.DataParser.BLEND_MODE,0)}if(w.DataParser.COLOR in t){a.color=w.SlotData.createColor();this._parseColorTransform(t[w.DataParser.COLOR],a.color)}else{a.color=w.SlotData.DEFAULT_COLOR}if(w.DataParser.ACTIONS in t){this._slotChildActions[a.name]=this._parseActionData(t[w.DataParser.ACTIONS],0,null,null)}return a}_parseSkin(t){const e=w.BaseObject.borrowObject(w.SkinData);e.name=v._getString(t,w.DataParser.NAME,w.DataParser.DEFAULT_NAME);if(e.name.length===0){e.name=w.DataParser.DEFAULT_NAME}if(w.DataParser.SLOT in t){const a=t[w.DataParser.SLOT];this._skin=e;for(const s of a){const i=v._getString(s,w.DataParser.NAME,"");const r=this._armature.getSlot(i);if(r!==null){this._slot=r;if(w.DataParser.DISPLAY in s){const n=s[w.DataParser.DISPLAY];for(const o of n){if(o){e.addDisplay(i,this._parseDisplay(o))}else{e.addDisplay(i,null)}}}this._slot=null}}this._skin=null}return e}_parseDisplay(t){const e=v._getString(t,w.DataParser.NAME,"");const a=v._getString(t,w.DataParser.PATH,"");let s=0;let i=null;if(w.DataParser.TYPE in t&&typeof t[w.DataParser.TYPE]==="string"){s=w.DataParser._getDisplayType(t[w.DataParser.TYPE])}else{s=v._getNumber(t,w.DataParser.TYPE,s)}switch(s){case 0:{const r=i=w.BaseObject.borrowObject(w.ImageDisplayData);r.name=e;r.path=a.length>0?a:e;this._parsePivot(t,r);r.mask=v._getBoolean(t,w.DataParser.MASK,false);r.maskRange=v._getNumber(t,w.DataParser.MASK_RANGE,0);break}case 1:{const n=i=w.BaseObject.borrowObject(w.ArmatureDisplayData);n.name=e;n.path=a.length>0?a:e;n.inheritAnimation=true;if(w.DataParser.ACTIONS in t){const o=this._parseActionData(t[w.DataParser.ACTIONS],0,null,null);for(const l of o){n.addAction(l)}}else if(this._slot.name in this._slotChildActions){const h=this._skin.getDisplays(this._slot.name);if(h===null?this._slot.displayIndex===0:this._slot.displayIndex===h.length){for(const l of this._slotChildActions[this._slot.name]){n.addAction(l)}delete this._slotChildActions[this._slot.name]}}break}case 2:{const _=i=w.BaseObject.borrowObject(w.MeshDisplayData);_.geometry.inheritDeform=v._getBoolean(t,w.DataParser.INHERIT_DEFORM,true);_.name=e;_.path=a.length>0?a:e;if(w.DataParser.SHARE in t){_.geometry.data=this._data;this._cacheRawMeshes.push(t);this._cacheMeshes.push(_)}else{this._parseMesh(t,_)}break}case 3:{const f=this._parseBoundingBox(t);if(f!==null){const c=i=w.BaseObject.borrowObject(w.BoundingBoxDisplayData);c.name=e;c.path=a.length>0?a:e;c.boundingBox=f}break}case 4:{const u=t[w.DataParser.LENGTHS];const m=i=w.BaseObject.borrowObject(w.PathDisplayData);m.closed=v._getBoolean(t,w.DataParser.CLOSED,false);m.constantSpeed=v._getBoolean(t,w.DataParser.CONSTANT_SPEED,false);m.name=e;m.path=a.length>0?a:e;m.curveLengths.length=u.length;for(let t=0,e=u.length;t<e;++t){m.curveLengths[t]=u[t]}this._parsePath(t,m);break}case 5:{const d=i=w.BaseObject.borrowObject(w.ShapeDisplayData);d.name=e;d.path=a.length>0?a:e;d.mask=v._getBoolean(t,w.DataParser.MASK,false);d.maskRange=v._getNumber(t,w.DataParser.MASK_RANGE,0);const p=this._parseShape(t,d);d.shape=p;if(w.DataParser.WEIGHTS in t){const g=t[w.DataParser.SLOT_POSE];const y=t[w.DataParser.BONE_POSE];const D=this._skin.name+"_"+this._slot.name+"_"+i.name;this._weightSlotPose[D]=g;this._weightBonePoses[D]=y}break}}if(i!==null&&w.DataParser.TRANSFORM in t){this._parseTransform(t[w.DataParser.TRANSFORM],i.transform,this._armature.scale)}return i}_parsePath(t,e){this._parseGeometry(t,t,e.geometry);if(w.DataParser.WEIGHTS in t){const a=t[w.DataParser.SLOT_POSE];const s=t[w.DataParser.BONE_POSE];const i=this._skin.name+"_"+this._slot.name+"_"+e.name;this._weightSlotPose[i]=a;this._weightBonePoses[i]=s}}_parsePivot(t,e){if(w.DataParser.PIVOT in t){const a=t[w.DataParser.PIVOT];e.pivot.x=v._getNumber(a,w.DataParser.X,0);e.pivot.y=v._getNumber(a,w.DataParser.Y,0)}else{e.pivot.x=.5;e.pivot.y=.5}}_parseMesh(t,e){this._parseGeometry(t,t,e.geometry);if(w.DataParser.WEIGHTS in t){const a=t[w.DataParser.SLOT_POSE];const s=t[w.DataParser.BONE_POSE];const i=this._skin.name+"_"+this._slot.name+"_"+e.name;this._weightSlotPose[i]=a;this._weightBonePoses[i]=s}}_parseBoundingBox(t){let e=null;let a=0;if(w.DataParser.SUB_TYPE in t&&typeof t[w.DataParser.SUB_TYPE]==="string"){a=w.DataParser._getBoundingBoxType(t[w.DataParser.SUB_TYPE])}else{a=v._getNumber(t,w.DataParser.SUB_TYPE,a)}switch(a){case 0:e=w.BaseObject.borrowObject(w.RectangleBoundingBoxData);break;case 1:e=w.BaseObject.borrowObject(w.EllipseBoundingBoxData);break;case 2:e=this._parsePolygonBoundingBox(t);break}if(e!==null){e.color=v._getNumber(t,w.DataParser.COLOR,0);if(e.type===0||e.type===1){e.width=v._getNumber(t,w.DataParser.WIDTH,0);e.height=v._getNumber(t,w.DataParser.HEIGHT,0)}}return e}_parsePolygonBoundingBox(t){const a=w.BaseObject.borrowObject(w.PolygonBoundingBoxData);if(w.DataParser.VERTICES in t){const s=this._armature.scale;const i=t[w.DataParser.VERTICES];const r=a.vertices;r.length=i.length;for(let t=0,e=i.length;t<e;t+=2){const n=i[t]*s;const o=i[t+1]*s;r[t]=n;r[t+1]=o;if(t===0){a.x=n;a.y=o;a.width=n;a.height=o}else{if(n<a.x){a.x=n}else if(n>a.width){a.width=n}if(o<a.y){a.y=o}else if(o>a.height){a.height=o}}}a.width-=a.x;a.height-=a.y}else{console.warn("Data error.\n Please reexport DragonBones Data to fixed the bug.")}return a}_parseShape(t,e){let a=null;a=w.BaseObject.borrowObject(w.ShapeData);if(w.DataParser.SHAPE in t){const s=this._armature.scale;const i=t[w.DataParser.SHAPE];const r=i.vertices;for(let t=0,e=r.length;t<e;t++){a.vertices.push(r[t]*s)}if(i.paths){for(let t=0,e=i.paths.length;t<e;t++){a.paths.push(i.paths[t])}}this._parseGeometry(i,t,e.geometry)}else{console.warn("Data error.\n Please reexport DragonBones Data to fixed the bug.")}return a}_parseAnimation(t){const e=w.BaseObject.borrowObject(w.AnimationData);e.blendType=w.DataParser._getAnimationBlendType(v._getString(t,w.DataParser.BLEND_TYPE,""));e.frameCount=v._getNumber(t,w.DataParser.DURATION,0);e.playTimes=v._getNumber(t,w.DataParser.PLAY_TIMES,1);e.duration=e.frameCount/this._armature.frameRate;e.fadeInTime=v._getNumber(t,w.DataParser.FADE_IN_TIME,0);e.scale=v._getNumber(t,w.DataParser.SCALE,1);e.name=v._getString(t,w.DataParser.NAME,w.DataParser.DEFAULT_NAME);if(e.name.length===0){e.name=w.DataParser.DEFAULT_NAME}e.frameIntOffset=this._frameIntArray.length;e.frameFloatOffset=this._frameFloatArray.length;e.frameOffset=this._frameArray.length;this._animation=e;if(w.DataParser.FRAME in t){const a=t[w.DataParser.FRAME];const s=a.length;if(s>0){for(let t=0,e=0;t<s;++t){const i=a[t];this._parseActionDataInFrame(i,e,null,null);e+=v._getNumber(i,w.DataParser.DURATION,1)}}}if(w.DataParser.Z_ORDER in t){this._animation.zOrderTimeline=this._parseTimeline(t[w.DataParser.Z_ORDER],null,w.DataParser.FRAME,1,0,0,this._parseZOrderFrame)}if(w.DataParser.BONE in t){const r=t[w.DataParser.BONE];for(const n of r){this._parseBoneTimeline(n)}}if(w.DataParser.SLOT in t){const r=t[w.DataParser.SLOT];for(const n of r){this._parseSlotTimeline(n)}}if(w.DataParser.FFD in t){const r=t[w.DataParser.FFD];for(const n of r){let t=v._getString(n,w.DataParser.SKIN,w.DataParser.DEFAULT_NAME);const o=v._getString(n,w.DataParser.SLOT,"");const l=v._getString(n,w.DataParser.NAME,"");if(t.length===0){t=w.DataParser.DEFAULT_NAME}this._slot=this._armature.getSlot(o);this._mesh=this._armature.getMesh(t,o,l);if(this._slot===null||this._mesh===null){continue}const h=this._parseTimeline(n,null,w.DataParser.FRAME,22,2,0,this._parseSlotDeformFrame);if(h!==null){this._animation.addSlotTimeline(o,h)}this._slot=null;this._mesh=null}}if(w.DataParser.SHAPE in t){const r=t[w.DataParser.SHAPE];for(const n of r){let t=v._getString(n,w.DataParser.SKIN,w.DataParser.DEFAULT_NAME);const o=v._getString(n,w.DataParser.SLOT,"");const l=v._getString(n,w.DataParser.NAME,"");if(t.length===0){t=w.DataParser.DEFAULT_NAME}this._slot=this._armature.getSlot(o);this._shape=this._armature.getDisplay(t,o,l);if(this._slot===null||this._shape===null){continue}if(this._shape.type===5){const h=this._parseTimeline(n,null,w.DataParser.FRAME,25,2,0,this._parseSlotShapeFrame);if(h!==null){this._animation.addSlotTimeline(o,h)}}else if(this._shape.type===4){this._path=this._shape;const h=this._parseTimeline(n,null,w.DataParser.FRAME,26,2,0,this._parseSlotPathFrame);if(h!==null){this._animation.addSlotTimeline(o,h)}}this._slot=null;this._shape=null}}if(w.DataParser.IK in t){const r=t[w.DataParser.IK];for(const n of r){const _=v._getString(n,w.DataParser.NAME,"");const f=this._armature.getConstraint(_);if(f===null){continue}const h=this._parseTimeline(n,null,w.DataParser.FRAME,30,1,2,this._parseIKConstraintFrame);if(h!==null){this._animation.addConstraintTimeline(_,h)}}}if(w.DataParser.PATH in t){const r=t[w.DataParser.PATH];for(const n of r){const _=v._getString(n,w.DataParser.NAME,"");const f=this._armature.getConstraint(_);if(f===null){continue}if(n[w.DataParser.PATH_CONSTRAINT_POSITION]){const h=this._parseTimeline(n,null,w.DataParser.PATH_CONSTRAINT_POSITION,31,2,1,this._parsePathConstraintPositionFrame);if(h!==null){this._animation.addConstraintTimeline(_,h)}}if(n[w.DataParser.PATH_CONSTRAINT_SPACING]){const h=this._parseTimeline(n,null,w.DataParser.PATH_CONSTRAINT_SPACING,32,2,1,this._parsePathConstraintSpacingFrame);if(h!==null){this._animation.addConstraintTimeline(_,h)}}if(n[w.DataParser.PATH_CONSTRAINT_WEIGHT]){const h=this._parseTimeline(n,null,w.DataParser.PATH_CONSTRAINT_WEIGHT,33,2,3,this._parsePathConstraintWeightFrame);if(h!==null){this._animation.addConstraintTimeline(_,h)}}}}if(this._actionFrames.length>0){this._animation.actionTimeline=this._parseTimeline(null,this._actionFrames,"",0,0,0,this._parseActionFrame);this._actionFrames.length=0}if(w.DataParser.TIMELINE in t){const r=t[w.DataParser.TIMELINE];for(const n of r){const c=v._getNumber(n,w.DataParser.TYPE,0);const u=v._getString(n,w.DataParser.NAME,"");let t=null;switch(c){case 0:break;case 20:case 23:case 60:case 24:case 40:case 41:if(c===20){this._frameValueType=0;this._frameValueScale=1}else{this._frameValueType=1;if(c===23){this._frameValueScale=1}else if(c===40||c===41){this._frameValueScale=1e4}else{this._frameValueScale=100}}if(c===60||c===24||c===41){this._frameDefaultValue=1}else{this._frameDefaultValue=0}if(c===40&&e.blendType!==0){t=w.BaseObject.borrowObject(w.AnimationTimelineData);const m=t;m.x=v._getNumber(n,w.DataParser.X,0);m.y=v._getNumber(n,w.DataParser.Y,0)}t=this._parseTimeline(n,null,w.DataParser.FRAME,c,this._frameValueType,1,this._parseSingleValueFrame,t);break;case 11:case 12:case 13:case 30:case 42:if(c===30||c===42){this._frameValueType=1;if(c===42){this._frameValueScale=1e4}else{this._frameValueScale=100}}else{if(c===12){this._frameValueScale=w.Transform.DEG_RAD}else{this._frameValueScale=1}this._frameValueType=2}if(c===13||c===30){this._frameDefaultValue=1}else{this._frameDefaultValue=0}t=this._parseTimeline(n,null,w.DataParser.FRAME,c,this._frameValueType,2,this._parseDoubleValueFrame);break;case 1:break;case 50:{const d=this._armature.getBone(u);if(d===null){continue}this._geometry=d.geometry;t=this._parseTimeline(n,null,w.DataParser.FRAME,c,2,0,this._parseDeformFrame);this._geometry=null;break}case 22:{this._geometry=null;for(const p in this._armature.skins){const g=this._armature.skins[p];for(const y in g.displays){const D=g.displays[y];for(const T of D){if(T!==null&&T.name===u){this._geometry=T.geometry;break}}}}if(this._geometry===null){continue}t=this._parseTimeline(n,null,w.DataParser.FRAME,c,2,0,this._parseDeformFrame);this._geometry=null;break}case 21:t=this._parseTimeline(n,null,w.DataParser.FRAME,c,1,1,this._parseSlotColorFrame);break}if(t!==null){switch(c){case 0:break;case 1:break;case 11:case 12:case 13:case 50:case 60:this._animation.addBoneTimeline(u,t);break;case 20:case 21:case 22:case 23:case 24:this._animation.addSlotTimeline(u,t);break;case 30:this._animation.addConstraintTimeline(u,t);break;case 40:case 41:case 42:this._animation.addAnimationTimeline(u,t);break}}}}this._animation=null;return e}getTimelineDuration(s){if(!s||s.length===0){return 0}else{let a=0;for(let t=0,e=s.length;t<e;++t){const i=s[t];a+=i.duration===undefined?1:i.duration>=0?i.duration:0}return a}}_parseTimeline(t,i,e,a,s,r,n,o=null){if(t!==null&&e.length>0&&e in t){i=t[e]}if(i===null){return null}const l=i.length;if(l===0){return null}const h=this._frameIntArray.length;const _=this._frameFloatArray.length;const f=this._timelineArray.length;if(o===null){o=w.BaseObject.borrowObject(w.TimelineData)}o.type=a;o.offset=f;this._frameValueType=s;this._timeline=o;this._timelineArray.length+=1+1+1+1+1+1+1+l;if(t!==null&&t.timelineConfig&&t.timelineConfig[e]){const u=t.timelineConfig[e];this._timelineArray[f+0]=Math.round(v._getNumber(u,w.DataParser.SCALE,1)*100);this._timelineArray[f+1]=Math.round(v._getNumber(u,w.DataParser.OFFSET,0));this._timelineArray[f+2]=v._getBoolean(u,w.DataParser.LOOP,false)?1:0}else{this._timelineArray[f+0]=100;this._timelineArray[f+1]=0;this._timelineArray[f+2]=0}const c=this.getTimelineDuration(i);this._timelineArray[f+3]=c;this._timelineArray[f+4]=l;this._timelineArray[f+5]=r;switch(this._frameValueType){case 0:this._timelineArray[f+6]=0;break;case 1:this._timelineArray[f+6]=h-this._animation.frameIntOffset;break;case 2:this._timelineArray[f+6]=_-this._animation.frameFloatOffset;break}if(l===1){o.frameIndicesOffset=-1;this._timelineArray[f+7+0]=n.call(this,i[0],0,0)-this._animation.frameOffset}else{const m=this._animation.frameCount+1;const d=this._data.frameIndices;const p=d.length;d.length+=m;o.frameIndicesOffset=p;for(let t=0,e=0,a=0,s=0;t<m;++t){if(a+s<=t&&e<l){const g=i[e];a=t;if(e===l-1){s=this._animation.frameCount-a}else{if(g instanceof y){s=this._actionFrames[e+1].frameStart-a}else{s=v._getNumber(g,w.DataParser.DURATION,1)}}this._timelineArray[f+7+e]=n.call(this,g,a,s)-this._animation.frameOffset;e++}d[p+t]=e-1}}this._timeline=null;return o}_parseBoneTimeline(t){const e=this._armature.getBone(v._getString(t,w.DataParser.NAME,""));if(e===null){return}this._bone=e;this._slot=this._armature.getSlot(this._bone.name);if(w.DataParser.TRANSLATE_FRAME in t){this._frameDefaultValue=0;this._frameValueScale=1;const a=this._parseTimeline(t,null,w.DataParser.TRANSLATE_FRAME,11,2,2,this._parseDoubleValueFrame);if(a!==null){this._animation.addBoneTimeline(e.name,a)}}if(w.DataParser.ROTATE_FRAME in t){this._frameDefaultValue=0;this._frameValueScale=1;const a=this._parseTimeline(t,null,w.DataParser.ROTATE_FRAME,12,2,2,this._parseBoneRotateFrame);if(a!==null){this._animation.addBoneTimeline(e.name,a)}}if(w.DataParser.SCALE_FRAME in t){this._frameDefaultValue=1;this._frameValueScale=1;const a=this._parseTimeline(t,null,w.DataParser.SCALE_FRAME,13,2,2,this._parseBoneScaleFrame);if(a!==null){this._animation.addBoneTimeline(e.name,a)}}if(w.DataParser.FRAME in t){const a=this._parseTimeline(t,null,w.DataParser.FRAME,10,2,6,this._parseBoneAllFrame);if(a!==null){this._animation.addBoneTimeline(e.name,a)}}this._bone=null;this._slot=null}_parseSlotTimeline(t){const e=this._armature.getSlot(v._getString(t,w.DataParser.NAME,""));if(e===null){return}let a=null;let s=null;this._slot=e;if(w.DataParser.DISPLAY_FRAME in t){a=this._parseTimeline(t,null,w.DataParser.DISPLAY_FRAME,20,0,0,this._parseSlotDisplayFrame)}else{a=this._parseTimeline(t,null,w.DataParser.FRAME,20,0,0,this._parseSlotDisplayFrame)}if(w.DataParser.COLOR_FRAME in t){s=this._parseTimeline(t,null,w.DataParser.COLOR_FRAME,21,1,1,this._parseSlotColorFrame)}else{s=this._parseTimeline(t,null,w.DataParser.FRAME,21,1,1,this._parseSlotColorFrame)}if(a!==null){this._animation.addSlotTimeline(e.name,a)}if(s!==null){this._animation.addSlotTimeline(e.name,s)}this._slot=null}_parseFrame(t,e,a){t;a;const s=this._frameArray.length;this._frameArray.length+=1;this._frameArray[s+0]=e;return s}_parseTweenFrame(e,t,a){const s=this._parseFrame(e,t,a);if(a>0){if(w.DataParser.CURVE in e){const i=a+1;this._helpArray.length=i;const r=this._samplingEasingCurve(e[w.DataParser.CURVE],this._helpArray);this._frameArray.length+=1+1+this._helpArray.length;this._frameArray[s+1]=2;this._frameArray[s+2]=r?i:-i;for(let t=0;t<i;++t){this._frameArray[s+3+t]=Math.round(this._helpArray[t]*1e4)}}else{const n=-2;let t=n;if(w.DataParser.TWEEN_EASING in e){t=v._getNumber(e,w.DataParser.TWEEN_EASING,n)}if(t===n){this._frameArray.length+=1;this._frameArray[s+1]=0}else if(t===0){this._frameArray.length+=1;this._frameArray[s+1]=1}else if(t<0){this._frameArray.length+=1+1;this._frameArray[s+1]=3;this._frameArray[s+2]=Math.round(-t*100)}else if(t<=1){this._frameArray.length+=1+1;this._frameArray[s+1]=4;this._frameArray[s+2]=Math.round(t*100)}else{this._frameArray.length+=1+1;this._frameArray[s+1]=5;this._frameArray[s+2]=Math.round(t*100-100)}}}else{this._frameArray.length+=1;this._frameArray[s+1]=0}return s}_parseSingleValueFrame(t,e,a){let s=0;switch(this._frameValueType){case 0:{s=this._parseFrame(t,e,a);this._frameArray.length+=1;this._frameArray[s+1]=v._getNumber(t,w.DataParser.VALUE,this._frameDefaultValue);break}case 1:{s=this._parseTweenFrame(t,e,a);const i=this._frameIntArray.length;this._frameIntArray.length+=1;this._frameIntArray[i]=Math.round(v._getNumber(t,w.DataParser.VALUE,this._frameDefaultValue)*this._frameValueScale);break}case 2:{s=this._parseTweenFrame(t,e,a);const i=this._frameFloatArray.length;this._frameFloatArray.length+=1;this._frameFloatArray[i]=v._getNumber(t,w.DataParser.VALUE,this._frameDefaultValue)*this._frameValueScale;break}}return s}_parseDoubleValueFrame(t,e,a){let s=0;switch(this._frameValueType){case 0:{s=this._parseFrame(t,e,a);this._frameArray.length+=2;this._frameArray[s+1]=v._getNumber(t,w.DataParser.X,this._frameDefaultValue);this._frameArray[s+2]=v._getNumber(t,w.DataParser.Y,this._frameDefaultValue);break}case 1:{s=this._parseTweenFrame(t,e,a);const i=this._frameIntArray.length;this._frameIntArray.length+=2;this._frameIntArray[i]=Math.round(v._getNumber(t,w.DataParser.X,this._frameDefaultValue)*this._frameValueScale);this._frameIntArray[i+1]=Math.round(v._getNumber(t,w.DataParser.Y,this._frameDefaultValue)*this._frameValueScale);break}case 2:{s=this._parseTweenFrame(t,e,a);const i=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[i]=v._getNumber(t,w.DataParser.X,this._frameDefaultValue)*this._frameValueScale;this._frameFloatArray[i+1]=v._getNumber(t,w.DataParser.Y,this._frameDefaultValue)*this._frameValueScale;break}}return s}_parseActionFrame(e,t,a){a;const s=this._frameArray.length;const i=e.actions.length;this._frameArray.length+=1+1+i;this._frameArray[s+0]=t;this._frameArray[s+0+1]=i;for(let t=0;t<i;++t){this._frameArray[s+0+2+t]=e.actions[t]}return s}_parseZOrderFrame(t,e,a){const i=this._parseFrame(t,e,a);if(w.DataParser.Z_ORDER in t){const r=t[w.DataParser.Z_ORDER];if(r.length>0){const n=this._armature.sortedSlots.length;const o=new Array(n-r.length/2);const l=new Array(n);for(let t=0;t<o.length;++t){o[t]=0}for(let t=0;t<n;++t){l[t]=-1}let a=0;let s=0;for(let t=0,e=r.length;t<e;t+=2){const h=r[t];const _=r[t+1];while(a!==h){o[s++]=a++}const f=a+_;l[f]=a++}while(a<n){o[s++]=a++}this._frameArray.length+=1+n;this._frameArray[i+1]=n;let t=n;while(t--){if(l[t]===-1){this._frameArray[i+2+t]=o[--s]||0}else{this._frameArray[i+2+t]=l[t]||0}}return i}}this._frameArray.length+=1;this._frameArray[i+1]=0;return i}_parseBoneAllFrame(t,e,a){this._helpTransform.identity();if(w.DataParser.TRANSFORM in t){this._parseTransform(t[w.DataParser.TRANSFORM],this._helpTransform,1)}let s=this._helpTransform.rotation;if(e!==0){if(this._prevClockwise===0){s=this._prevRotation+w.Transform.normalizeRadian(s-this._prevRotation)}else{if(this._prevClockwise>0?s>=this._prevRotation:s<=this._prevRotation){this._prevClockwise=this._prevClockwise>0?this._prevClockwise-1:this._prevClockwise+1}s=this._prevRotation+s-this._prevRotation+w.Transform.PI_D*this._prevClockwise}}this._prevClockwise=v._getNumber(t,w.DataParser.TWEEN_ROTATE,0);this._prevRotation=s;const i=this._parseTweenFrame(t,e,a);let r=this._frameFloatArray.length;this._frameFloatArray.length+=6;this._frameFloatArray[r++]=this._helpTransform.x;this._frameFloatArray[r++]=this._helpTransform.y;this._frameFloatArray[r++]=s;this._frameFloatArray[r++]=this._helpTransform.skew;this._frameFloatArray[r++]=this._helpTransform.scaleX;this._frameFloatArray[r++]=this._helpTransform.scaleY;this._parseActionDataInFrame(t,e,this._bone,this._slot);return i}_parseBoneTranslateFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[i++]=v._getNumber(t,w.DataParser.X,0);this._frameFloatArray[i++]=v._getNumber(t,w.DataParser.Y,0);return s}_parseBoneRotateFrame(t,e,a){let s=v._getNumber(t,w.DataParser.ROTATE,0)*w.Transform.DEG_RAD;if(e!==0){if(this._prevClockwise===0){s=this._prevRotation+w.Transform.normalizeRadian(s-this._prevRotation)}else{if(this._prevClockwise>0?s>=this._prevRotation:s<=this._prevRotation){this._prevClockwise=this._prevClockwise>0?this._prevClockwise-1:this._prevClockwise+1}s=this._prevRotation+s-this._prevRotation+w.Transform.PI_D*this._prevClockwise}}this._prevClockwise=v._getNumber(t,w.DataParser.CLOCK_WISE,0);this._prevRotation=s;const i=this._parseTweenFrame(t,e,a);let r=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[r++]=s;this._frameFloatArray[r++]=v._getNumber(t,w.DataParser.SKEW,0)*w.Transform.DEG_RAD;return i}_parseBoneScaleFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[i++]=v._getNumber(t,w.DataParser.X,1);this._frameFloatArray[i++]=v._getNumber(t,w.DataParser.Y,1);return s}_parseSlotDisplayFrame(t,e,a){const s=this._parseFrame(t,e,a);this._frameArray.length+=1;if(w.DataParser.VALUE in t){this._frameArray[s+1]=v._getNumber(t,w.DataParser.VALUE,0)}else{this._frameArray[s+1]=v._getNumber(t,w.DataParser.DISPLAY_INDEX,0)}this._parseActionDataInFrame(t,e,this._slot.parent,this._slot);return s}_parseSlotColorFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=-1;if(w.DataParser.VALUE in t||w.DataParser.COLOR in t){const n=w.DataParser.VALUE in t?t[w.DataParser.VALUE]:t[w.DataParser.COLOR];for(let t in n){t;this._parseColorTransform(n,this._helpColorTransform);i=this._colorArray.length;this._colorArray.length+=8;this._colorArray[i++]=Math.round(this._helpColorTransform.alphaMultiplier*100);this._colorArray[i++]=Math.round(this._helpColorTransform.redMultiplier*100);this._colorArray[i++]=Math.round(this._helpColorTransform.greenMultiplier*100);this._colorArray[i++]=Math.round(this._helpColorTransform.blueMultiplier*100);this._colorArray[i++]=Math.round(this._helpColorTransform.alphaOffset);this._colorArray[i++]=Math.round(this._helpColorTransform.redOffset);this._colorArray[i++]=Math.round(this._helpColorTransform.greenOffset);this._colorArray[i++]=Math.round(this._helpColorTransform.blueOffset);i-=8;break}}if(i<0){if(this._defaultColorOffset<0){this._defaultColorOffset=i=this._colorArray.length;this._colorArray.length+=8;this._colorArray[i++]=100;this._colorArray[i++]=100;this._colorArray[i++]=100;this._colorArray[i++]=100;this._colorArray[i++]=0;this._colorArray[i++]=0;this._colorArray[i++]=0;this._colorArray[i++]=0}i=this._defaultColorOffset}const r=this._frameIntArray.length;this._frameIntArray.length+=1;this._frameIntArray[r]=i;return s}_parseSkinnedDeformFrame(t,e,a,s){const i=this._frameFloatArray.length;const r=this._parseTweenFrame(t,e,a);const n=w.DataParser.VERTICES in t?t[w.DataParser.VERTICES]:null;const o=v._getNumber(t,w.DataParser.OFFSET,0);const l=this._intArray[s.geometry.offset+0];const h=s.parent.name+"_"+this._slot.name+"_"+s.name;const _=s.geometry.weight;let f=0;let c=0;let u=0;let m=0;if(_!==null){const d=this._weightSlotPose[h];this._helpMatrixA.copyFromArray(d,0);this._frameFloatArray.length+=_.count*2;u=_.offset+2+_.bones.length}else{this._frameFloatArray.length+=l*2}for(let t=0;t<l*2;t+=2){if(n===null){f=0;c=0}else{if(t<o||t-o>=n.length){f=0}else{f=n[t-o]}if(t+1<o||t+1-o>=n.length){c=0}else{c=n[t+1-o]}}if(_!==null){const p=this._weightBonePoses[h];const g=this._intArray[u++];this._helpMatrixA.transformPoint(f,c,this._helpPoint,true);f=this._helpPoint.x;c=this._helpPoint.y;for(let t=0;t<g;++t){const y=this._intArray[u++];this._helpMatrixB.copyFromArray(p,y*7+1);this._helpMatrixB.invert();this._helpMatrixB.transformPoint(f,c,this._helpPoint,true);this._frameFloatArray[i+m++]=this._helpPoint.x;this._frameFloatArray[i+m++]=this._helpPoint.y}}else{this._frameFloatArray[i+t]=f;this._frameFloatArray[i+t+1]=c}}if(e===0){const D=this._frameIntArray.length;this._frameIntArray.length+=1+1+1+1+1;this._frameIntArray[D+0]=s.geometry.offset;this._frameIntArray[D+1]=this._frameFloatArray.length-i;this._frameIntArray[D+2]=this._frameFloatArray.length-i;this._frameIntArray[D+3]=0;this._frameIntArray[D+4]=i-this._animation.frameFloatOffset;this._timelineArray[this._timeline.offset+5]=D-this._animation.frameIntOffset}return r}_parseSlotDeformFrame(t,e,a){return this._parseSkinnedDeformFrame(t,e,a,this._mesh)}_parseSlotPathFrame(t,e,a){return this._parseSkinnedDeformFrame(t,e,a,this._path)}_parseSlotShapeFrame(t,e,a){return this._parseSkinnedDeformFrame(t,e,a,this._shape)}_parseIKConstraintFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=this._frameIntArray.length;this._frameIntArray.length+=2;this._frameIntArray[i++]=v._getBoolean(t,w.DataParser.BEND_POSITIVE,true)?100:0;this._frameIntArray[i++]=Math.round(v._getNumber(t,w.DataParser.WEIGHT,1)*100);return s}_parsePathConstraintPositionFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=this._frameFloatArray.length;this._frameFloatArray.length+=1;this._frameFloatArray[i++]=v._getNumber(t,w.DataParser.VALUE,0);return s}_parsePathConstraintSpacingFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=this._frameFloatArray.length;this._frameFloatArray.length+=1;this._frameFloatArray[i++]=v._getNumber(t,w.DataParser.VALUE,0);return s}_parsePathConstraintWeightFrame(t,e,a){const s=this._parseTweenFrame(t,e,a);let i=this._frameFloatArray.length;const r=w.DataParser.VALUE in t?t[w.DataParser.VALUE]:[1,1,1];this._frameFloatArray.length+=3;this._frameFloatArray[i++]=r[0];this._frameFloatArray[i++]=r[1];this._frameFloatArray[i++]=r[2];return s}_parseActionData(t,e,a,s){const i=new Array;if(typeof t==="string"){const r=w.BaseObject.borrowObject(w.ActionData);r.type=e;r.name=t;r.bone=a;r.slot=s;i.push(r)}else if(t instanceof Array){for(const n of t){const r=w.BaseObject.borrowObject(w.ActionData);if(w.DataParser.GOTO_AND_PLAY in n){r.type=0;r.name=v._getString(n,w.DataParser.GOTO_AND_PLAY,"")}else{if(w.DataParser.TYPE in n&&typeof n[w.DataParser.TYPE]==="string"){r.type=w.DataParser._getActionType(n[w.DataParser.TYPE])}else{r.type=v._getNumber(n,w.DataParser.TYPE,e)}r.name=v._getString(n,w.DataParser.NAME,"")}if(w.DataParser.BONE in n){const o=v._getString(n,w.DataParser.BONE,"");r.bone=this._armature.getBone(o)}else{r.bone=a}if(w.DataParser.SLOT in n){const l=v._getString(n,w.DataParser.SLOT,"");r.slot=this._armature.getSlot(l)}else{r.slot=s}let t=null;if(w.DataParser.INTS in n){if(t===null){t=w.BaseObject.borrowObject(w.UserData)}const h=n[w.DataParser.INTS];for(const _ of h){t.addInt(_)}}if(w.DataParser.FLOATS in n){if(t===null){t=w.BaseObject.borrowObject(w.UserData)}const f=n[w.DataParser.FLOATS];for(const _ of f){t.addFloat(_)}}if(w.DataParser.STRINGS in n){if(t===null){t=w.BaseObject.borrowObject(w.UserData)}const c=n[w.DataParser.STRINGS];for(const _ of c){t.addString(_)}}r.data=t;i.push(r)}}return i}_parseDeformFrame(t,e,a){const s=this._frameFloatArray.length;const i=this._parseTweenFrame(t,e,a);const r=w.DataParser.VERTICES in t?t[w.DataParser.VERTICES]:w.DataParser.VALUE in t?t[w.DataParser.VALUE]:null;const n=v._getNumber(t,w.DataParser.OFFSET,0);const o=this._intArray[this._geometry.offset+0];const l=this._geometry.weight;let h=0;let _=0;if(l!==null){}else{this._frameFloatArray.length+=o*2;for(let t=0;t<o*2;t+=2){if(r!==null){if(t<n||t-n>=r.length){h=0}else{h=r[t-n]}if(t+1<n||t+1-n>=r.length){_=0}else{_=r[t+1-n]}}else{h=0;_=0}this._frameFloatArray[s+t]=h;this._frameFloatArray[s+t+1]=_}}if(e===0){const f=this._frameIntArray.length;this._frameIntArray.length+=1+1+1+1+1;this._frameIntArray[f+0]=this._geometry.offset;this._frameIntArray[f+1]=this._frameFloatArray.length-s;this._frameIntArray[f+2]=this._frameFloatArray.length-s;this._frameIntArray[f+3]=0;this._frameIntArray[f+4]=s-this._animation.frameFloatOffset;this._timelineArray[this._timeline.offset+5]=f-this._animation.frameIntOffset}return i}_parseTransform(t,e,a){e.x=v._getNumber(t,w.DataParser.X,0)*a;e.y=v._getNumber(t,w.DataParser.Y,0)*a;if(w.DataParser.ROTATE in t||w.DataParser.SKEW in t){e.rotation=w.Transform.normalizeRadian(v._getNumber(t,w.DataParser.ROTATE,0)*w.Transform.DEG_RAD);e.skew=w.Transform.normalizeRadian(v._getNumber(t,w.DataParser.SKEW,0)*w.Transform.DEG_RAD)}else if(w.DataParser.SKEW_X in t||w.DataParser.SKEW_Y in t){e.rotation=w.Transform.normalizeRadian(v._getNumber(t,w.DataParser.SKEW_Y,0)*w.Transform.DEG_RAD);e.skew=w.Transform.normalizeRadian(v._getNumber(t,w.DataParser.SKEW_X,0)*w.Transform.DEG_RAD)-e.rotation}e.scaleX=v._getNumber(t,w.DataParser.SCALE_X,1);e.scaleY=v._getNumber(t,w.DataParser.SCALE_Y,1)}_parseColorTransform(t,e){e.alphaMultiplier=v._getNumber(t,w.DataParser.ALPHA_MULTIPLIER,100)*.01;e.redMultiplier=v._getNumber(t,w.DataParser.RED_MULTIPLIER,100)*.01;e.greenMultiplier=v._getNumber(t,w.DataParser.GREEN_MULTIPLIER,100)*.01;e.blueMultiplier=v._getNumber(t,w.DataParser.BLUE_MULTIPLIER,100)*.01;e.alphaOffset=v._getNumber(t,w.DataParser.ALPHA_OFFSET,0);e.redOffset=v._getNumber(t,w.DataParser.RED_OFFSET,0);e.greenOffset=v._getNumber(t,w.DataParser.GREEN_OFFSET,0);e.blueOffset=v._getNumber(t,w.DataParser.BLUE_OFFSET,0)}_parseGeometry(t,e,a){const r=t[w.DataParser.VERTICES];const o=Math.floor(r.length/2);let s=0;const i=this._intArray.length;const l=this._floatArray.length;a.offset=i;a.data=this._data;this._intArray.length+=1+1+1+1;this._intArray[i+0]=o;this._intArray[i+2]=l;this._intArray[i+3]=-1;this._floatArray.length+=o*2;for(let t=0,e=o*2;t<e;++t){this._floatArray[l+t]=r[t]}if(w.DataParser.TRIANGLES in t){const n=t[w.DataParser.TRIANGLES];s=Math.floor(n.length/3);this._intArray.length+=s*3;for(let t=0,e=s*3;t<e;++t){this._intArray[i+4+t]=n[t]}}this._intArray[i+1]=s;if(w.DataParser.UVS in t){const h=t[w.DataParser.UVS];const _=l+o*2;this._floatArray.length+=o*2;for(let t=0,e=o*2;t<e;++t){this._floatArray[_+t]=h[t]}}if(w.DataParser.WEIGHTS in e){const f=e[w.DataParser.WEIGHTS];const c=Math.floor(f.length-o)/2;const u=this._intArray.length;const m=this._floatArray.length;let n=0;const d=this._armature.sortedBones;const p=w.BaseObject.borrowObject(w.WeightData);p.count=c;p.offset=u;this._intArray.length+=1+1+n+o+c;this._intArray[u+1]=m;if(w.DataParser.BONE_POSE in e){const g=e[w.DataParser.SLOT_POSE];const y=e[w.DataParser.BONE_POSE];const D=new Array;n=Math.floor(y.length/7);D.length=n;for(let t=0;t<n;++t){const T=y[t*7];const b=this._rawBones[T];p.addBone(b);D[t]=T;this._intArray[u+2+t]=d.indexOf(b)}this._floatArray.length+=c*3;this._helpMatrixA.copyFromArray(g,0);for(let t=0,s=0,i=u+2+n,r=m;t<o;++t){const A=t*2;const S=this._intArray[i++]=f[s++];let e=this._floatArray[l+A];let a=this._floatArray[l+A+1];this._helpMatrixA.transformPoint(e,a,this._helpPoint);e=this._helpPoint.x;a=this._helpPoint.y;for(let t=0;t<S;++t){const T=f[s++];const P=D.indexOf(T);this._helpMatrixB.copyFromArray(y,P*7+1);this._helpMatrixB.invert();this._helpMatrixB.transformPoint(e,a,this._helpPoint);this._intArray[i++]=P;this._floatArray[r++]=f[s++];this._floatArray[r++]=this._helpPoint.x;this._floatArray[r++]=this._helpPoint.y}}}else{const O=e[w.DataParser.BONES];n=O.length;for(let t=0;t<n;t++){const T=O[t];const b=this._rawBones[T];p.addBone(b);this._intArray[u+2+t]=d.indexOf(b)}this._floatArray.length+=c*3;for(let t=0,e=0,a=0,s=u+2+n,i=m;t<c;t++){const S=f[e++];this._intArray[s++]=S;for(let t=0;t<S;t++){const P=f[e++];const x=f[e++];const B=r[a++];const E=r[a++];this._intArray[s++]=O.indexOf(P);this._floatArray[i++]=x;this._floatArray[i++]=B;this._floatArray[i++]=E}}}a.weight=p}}_parseArray(t){t;this._intArray.length=0;this._floatArray.length=0;this._frameIntArray.length=0;this._frameFloatArray.length=0;this._frameArray.length=0;this._timelineArray.length=0;this._colorArray.length=0}_modifyArray(){if(this._intArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._intArray.push(0)}if(this._frameIntArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._frameIntArray.push(0)}if(this._frameArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._frameArray.push(0)}if(this._timelineArray.length%Uint16Array.BYTES_PER_ELEMENT!==0){this._timelineArray.push(0)}if(this._timelineArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._colorArray.push(0)}const t=this._intArray.length*Int16Array.BYTES_PER_ELEMENT;const e=this._floatArray.length*Float32Array.BYTES_PER_ELEMENT;const a=this._frameIntArray.length*Int16Array.BYTES_PER_ELEMENT;const s=this._frameFloatArray.length*Float32Array.BYTES_PER_ELEMENT;const i=this._frameArray.length*Int16Array.BYTES_PER_ELEMENT;const r=this._timelineArray.length*Uint16Array.BYTES_PER_ELEMENT;const n=this._colorArray.length*Int16Array.BYTES_PER_ELEMENT;const o=t+e+a+s+i+r+n;const l=new ArrayBuffer(o);const h=new Int16Array(l,0,this._intArray.length);const _=new Float32Array(l,t,this._floatArray.length);const f=new Int16Array(l,t+e,this._frameIntArray.length);const c=new Float32Array(l,t+e+a,this._frameFloatArray.length);const u=new Int16Array(l,t+e+a+s,this._frameArray.length);const m=new Uint16Array(l,t+e+a+s+i,this._timelineArray.length);const d=new Int16Array(l,t+e+a+s+i+r,this._colorArray.length);for(let t=0,e=this._intArray.length;t<e;++t){h[t]=this._intArray[t]}for(let t=0,e=this._floatArray.length;t<e;++t){_[t]=this._floatArray[t]}for(let t=0,e=this._frameIntArray.length;t<e;++t){f[t]=this._frameIntArray[t]}for(let t=0,e=this._frameFloatArray.length;t<e;++t){c[t]=this._frameFloatArray[t]}for(let t=0,e=this._frameArray.length;t<e;++t){u[t]=this._frameArray[t]}for(let t=0,e=this._timelineArray.length;t<e;++t){m[t]=this._timelineArray[t]}for(let t=0,e=this._colorArray.length;t<e;++t){d[t]=this._colorArray[t]}this._data.binary=l;this._data.intArray=h;this._data.floatArray=_;this._data.frameIntArray=f;this._data.frameFloatArray=c;this._data.frameArray=u;this._data.timelineArray=m;this._data.colorArray=d;this._defaultColorOffset=-1}parseDragonBonesData(t,e=1){console.assert(t!==null&&t!==undefined,"Data error.");const a=v._getString(t,w.DataParser.VERSION,"");const s=v._getString(t,w.DataParser.COMPATIBLE_VERSION,"");if(w.DataParser.DATA_VERSIONS.indexOf(a)>=0||w.DataParser.DATA_VERSIONS.indexOf(s)>=0){const i=w.BaseObject.borrowObject(w.DragonBonesData);i.version=a;i.name=v._getString(t,w.DataParser.NAME,"");i.frameRate=v._getNumber(t,w.DataParser.FRAME_RATE,24);if(i.frameRate===0){i.frameRate=24}if(w.DataParser.ARMATURE in t){this._data=i;this._parseArray(t);const r=t[w.DataParser.ARMATURE];for(const n of r){i.addArmature(this._parseArmature(n,e))}if(!this._data.binary){this._modifyArray()}if(w.DataParser.STAGE in t){i.stage=i.getArmature(v._getString(t,w.DataParser.STAGE,""))}else if(i.armatureNames.length>0){i.stage=i.getArmature(i.armatureNames[0])}this._data=null}if(w.DataParser.TEXTURE_ATLAS in t){this._rawTextureAtlases=t[w.DataParser.TEXTURE_ATLAS]}return i}else{console.assert(false,"Nonsupport data version: "+a+"\n"+"Please convert DragonBones data to support version.\n"+"Read more: https://github.com/DragonBones/Tools/")}return null}parseTextureAtlasData(t,a,e=1){console.assert(t!==undefined);if(t===null){if(this._rawTextureAtlases===null||this._rawTextureAtlases.length===0){return false}const s=this._rawTextureAtlases[this._rawTextureAtlasIndex++];this.parseTextureAtlasData(s,a,e);if(this._rawTextureAtlasIndex>=this._rawTextureAtlases.length){this._rawTextureAtlasIndex=0;this._rawTextureAtlases=null}return true}a.width=v._getNumber(t,w.DataParser.WIDTH,0);a.height=v._getNumber(t,w.DataParser.HEIGHT,0);a.scale=e===1?1/v._getNumber(t,w.DataParser.SCALE,1):e;a.name=v._getString(t,w.DataParser.NAME,"");a.imagePath=v._getString(t,w.DataParser.IMAGE_PATH,"");if(w.DataParser.SUB_TEXTURE in t){const i=t[w.DataParser.SUB_TEXTURE];for(let t=0,e=i.length;t<e;++t){const r=i[t];const n=v._getNumber(r,w.DataParser.FRAME_WIDTH,-1);const o=v._getNumber(r,w.DataParser.FRAME_HEIGHT,-1);const l=a.createTexture();l.rotated=v._getBoolean(r,w.DataParser.ROTATED,false);l.name=v._getString(r,w.DataParser.NAME,"");l.region.x=v._getNumber(r,w.DataParser.X,0);l.region.y=v._getNumber(r,w.DataParser.Y,0);l.region.width=v._getNumber(r,w.DataParser.WIDTH,0);l.region.height=v._getNumber(r,w.DataParser.HEIGHT,0);if(n>0&&o>0){l.frame=w.TextureData.createRectangle();l.frame.x=v._getNumber(r,w.DataParser.FRAME_X,0);l.frame.y=v._getNumber(r,w.DataParser.FRAME_Y,0);l.frame.width=n;l.frame.height=o}a.addTexture(l)}}return true}static getInstance(){if(v._objectDataParserInstance===null){v._objectDataParserInstance=new v}return v._objectDataParserInstance}}v._objectDataParserInstance=null;w.ObjectDataParser=v;class y{constructor(){this.frameStart=0;this.actions=[]}}w.ActionFrame=y})(dragonBones||(dragonBones={}));var dragonBones;(function(p){class t extends p.ObjectDataParser{_inRange(t,e,a){return e<=t&&t<=a}_decodeUTF8(t){const e=-1;const s=-1;const i=65533;let r=0;let n="";let o;let l=0;let h=0;let _=0;let f=0;while(t.length>r){let a=t[r++];if(a===e){if(h!==0){o=i}else{o=s}}else{if(h===0){if(this._inRange(a,0,127)){o=a}else{if(this._inRange(a,194,223)){h=1;f=128;l=a-192}else if(this._inRange(a,224,239)){h=2;f=2048;l=a-224}else if(this._inRange(a,240,244)){h=3;f=65536;l=a-240}else{}l=l*Math.pow(64,h);o=null}}else if(!this._inRange(a,128,191)){l=0;h=0;_=0;f=0;r--;o=a}else{_+=1;l=l+(a-128)*Math.pow(64,h-_);if(_!==h){o=null}else{let t=l;let e=f;l=0;h=0;_=0;f=0;if(this._inRange(t,e,1114111)&&!this._inRange(t,55296,57343)){o=t}else{o=a}}}}if(o!==null&&o!==s){if(o<=65535){if(o>0)n+=String.fromCharCode(o)}else{o-=65536;n+=String.fromCharCode(55296+(o>>10&1023));n+=String.fromCharCode(56320+(o&1023))}}}return n}_parseBinaryTimeline(t,e,a=null){const r=a!==null?a:p.BaseObject.borrowObject(p.TimelineData);r.type=t;r.offset=e;this._timeline=r;const n=this._timelineArrayBuffer[r.offset+4];if(n===1){r.frameIndicesOffset=-1}else{let i=0;const o=this._animation.frameCount+1;const l=this._data.frameIndices;i=l.length;l.length+=o;r.frameIndicesOffset=i;for(let t=0,e=0,a=0,s=0;t<o;++t){if(a+s<=t&&e<n){a=this._frameArrayBuffer[this._animation.frameOffset+this._timelineArrayBuffer[r.offset+7+e]];if(e===n-1){s=this._animation.frameCount-a}else{s=this._frameArrayBuffer[this._animation.frameOffset+this._timelineArrayBuffer[r.offset+7+e+1]]-a}e++}l[i+t]=e-1}}this._timeline=null;return r}_parseAnimation(t){const e=p.BaseObject.borrowObject(p.AnimationData);e.blendType=p.DataParser._getAnimationBlendType(p.ObjectDataParser._getString(t,p.DataParser.BLEND_TYPE,""));e.frameCount=p.ObjectDataParser._getNumber(t,p.DataParser.DURATION,0);e.playTimes=p.ObjectDataParser._getNumber(t,p.DataParser.PLAY_TIMES,1);e.duration=e.frameCount/this._armature.frameRate;e.fadeInTime=p.ObjectDataParser._getNumber(t,p.DataParser.FADE_IN_TIME,0);e.scale=p.ObjectDataParser._getNumber(t,p.DataParser.SCALE,1);e.name=p.ObjectDataParser._getString(t,p.DataParser.NAME,p.DataParser.DEFAULT_NAME);if(e.name.length===0){e.name=p.DataParser.DEFAULT_NAME}const a=t[p.DataParser.OFFSET];e.frameIntOffset=a[0];e.frameFloatOffset=a[1];e.frameOffset=a[2];this._animation=e;if(p.DataParser.ACTION in t){e.actionTimeline=this._parseBinaryTimeline(0,t[p.DataParser.ACTION])}if(p.DataParser.Z_ORDER in t){e.zOrderTimeline=this._parseBinaryTimeline(1,t[p.DataParser.Z_ORDER])}if(p.DataParser.BONE in t){const s=t[p.DataParser.BONE];for(let t in s){const i=s[t];const r=this._armature.getBone(t);if(r===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addBoneTimeline(r.name,l)}}}if(p.DataParser.SLOT in t){const s=t[p.DataParser.SLOT];for(let t in s){const i=s[t];const h=this._armature.getSlot(t);if(h===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addSlotTimeline(h.name,l)}}}if(p.DataParser.CONSTRAINT in t){const s=t[p.DataParser.CONSTRAINT];for(let t in s){const i=s[t];const _=this._armature.getConstraint(t);if(_===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addConstraintTimeline(_.name,l)}}}if(p.DataParser.TIMELINE in t){const i=t[p.DataParser.TIMELINE];for(const f of i){const o=p.ObjectDataParser._getNumber(f,p.DataParser.OFFSET,0);if(o>=0){const n=p.ObjectDataParser._getNumber(f,p.DataParser.TYPE,0);const c=p.ObjectDataParser._getString(f,p.DataParser.NAME,"");let t=null;if(n===40&&e.blendType!==0){t=p.BaseObject.borrowObject(p.AnimationTimelineData);const u=t;u.x=p.ObjectDataParser._getNumber(f,p.DataParser.X,0);u.y=p.ObjectDataParser._getNumber(f,p.DataParser.Y,0)}t=this._parseBinaryTimeline(n,o,t);switch(n){case 0:break;case 1:break;case 11:case 12:case 13:case 50:case 60:this._animation.addBoneTimeline(c,t);break;case 20:case 21:case 22:case 23:case 24:this._animation.addSlotTimeline(c,t);break;case 30:this._animation.addConstraintTimeline(c,t);break;case 40:case 41:case 42:this._animation.addAnimationTimeline(c,t);break}}}}this._animation=null;return e}_parseGeometry(t,e){e.offset=t[p.DataParser.OFFSET];e.data=this._data;let i=this._intArrayBuffer[e.offset+3];if(i<-1){i+=65536}if(i>=0){const r=p.BaseObject.borrowObject(p.WeightData);const n=this._intArrayBuffer[e.offset+0];const o=this._intArrayBuffer[i+0];r.offset=i;for(let t=0;t<o;++t){const l=this._intArrayBuffer[i+2+t];r.addBone(this._rawBones[l])}let a=i+2+o;let s=0;for(let t=0,e=n;t<e;++t){const h=this._intArrayBuffer[a++];s+=h;a+=h}r.count=s;e.weight=r}}_parseArray(t){const e=t[p.DataParser.OFFSET];const a=e[1];const s=e[3];const i=e[5];const r=e[7];const n=e[9];const o=e[11];const l=e.length>12?e[13]:0;const h=new Int16Array(this._binary,this._binaryOffset+e[0],a/Int16Array.BYTES_PER_ELEMENT);const _=new Float32Array(this._binary,this._binaryOffset+e[2],s/Float32Array.BYTES_PER_ELEMENT);const f=new Int16Array(this._binary,this._binaryOffset+e[4],i/Int16Array.BYTES_PER_ELEMENT);const c=new Float32Array(this._binary,this._binaryOffset+e[6],r/Float32Array.BYTES_PER_ELEMENT);const u=new Int16Array(this._binary,this._binaryOffset+e[8],n/Int16Array.BYTES_PER_ELEMENT);const m=new Uint16Array(this._binary,this._binaryOffset+e[10],o/Uint16Array.BYTES_PER_ELEMENT);const d=l>0?new Int16Array(this._binary,this._binaryOffset+e[12],l/Uint16Array.BYTES_PER_ELEMENT):h;this._data.binary=this._binary;this._data.intArray=this._intArrayBuffer=h;this._data.floatArray=_;this._data.frameIntArray=f;this._data.frameFloatArray=c;this._data.frameArray=this._frameArrayBuffer=u;this._data.timelineArray=this._timelineArrayBuffer=m;this._data.colorArray=d}parseDragonBonesData(t,e=1){console.assert(t!==null&&t!==undefined&&t instanceof ArrayBuffer,"Data error.");const a=new Uint8Array(t,0,8);if(a[0]!=="D".charCodeAt(0)||a[1]!=="B".charCodeAt(0)||a[2]!=="D".charCodeAt(0)||a[3]!=="T".charCodeAt(0)){console.assert(false,"Nonsupport data.");return null}const s=new Uint32Array(t,8,1)[0];const i=new Uint8Array(t,8+4,s);const r=this._decodeUTF8(i);const n=JSON.parse(r);this._binaryOffset=8+4+s;this._binary=t;return super.parseDragonBonesData(n,e)}static getInstance(){if(t._binaryDataParserInstance===null){t._binaryDataParserInstance=new t}return t._binaryDataParserInstance}}t._binaryDataParserInstance=null;p.BinaryDataParser=t})(dragonBones||(dragonBones={}));var dragonBones;(function(c){class n{constructor(t=null){this.autoSearch=false;this._dragonBonesDataMap={};this._textureAtlasDataMap={};this._dragonBones=null;this._dataParser=null;if(n._objectParser===null){n._objectParser=new c.ObjectDataParser}if(n._binaryParser===null){n._binaryParser=new c.BinaryDataParser}this._dataParser=t!==null?t:n._objectParser}_isSupportMesh(){return true}_getTextureData(t,e){if(t in this._textureAtlasDataMap){for(const a of this._textureAtlasDataMap[t]){const s=a.getTexture(e);if(s!==null){return s}}}if(this.autoSearch){for(let t in this._textureAtlasDataMap){for(const a of this._textureAtlasDataMap[t]){if(a.autoSearch){const s=a.getTexture(e);if(s!==null){return s}}}}}return null}_fillBuildArmaturePackage(e,a,s,i,t){let r=null;let n=null;if(a.length>0){if(a in this._dragonBonesDataMap){r=this._dragonBonesDataMap[a];n=r.getArmature(s)}}if(n===null&&(a.length===0||this.autoSearch)){for(let t in this._dragonBonesDataMap){r=this._dragonBonesDataMap[t];if(a.length===0||r.autoSearch){n=r.getArmature(s);if(n!==null){a=t;break}}}}if(n!==null){e.dataName=a;e.textureAtlasName=t;e.data=r;e.armature=n;e.skin=null;if(i.length>0){e.skin=n.getSkin(i);if(e.skin===null&&this.autoSearch){for(let t in this._dragonBonesDataMap){const o=this._dragonBonesDataMap[t];const l=o.getArmature(i);if(l!==null){e.skin=l.defaultSkin;break}}}}if(e.skin===null){e.skin=n.defaultSkin}return true}return false}_buildBones(t,e){for(const a of t.armature.sortedBones){const s=c.BaseObject.borrowObject(a.type===0?c.Bone:c.Surface);s.init(a,e)}}_buildSlots(a,t){const e=a.skin;const s=a.armature.defaultSkin;if(e===null||s===null){return}const i={};for(let t in s.displays){const r=s.getDisplays(t);i[t]=r}if(e!==s){for(let t in e.displays){const r=e.getDisplays(t);i[t]=r}}for(const n of a.armature.sortedSlots){const o=n.name in i?i[n.name]:null;const l=this._buildSlot(a,n,t);if(o!==null){l.displayFrameCount=o.length;for(let t=0,e=l.displayFrameCount;t<e;++t){const h=o[t];l.replaceRawDisplayData(h,t);if(h!==null){if(a.textureAtlasName.length>0){const f=this._getTextureData(a.textureAtlasName,h.path);l.replaceTextureData(f,t)}const _=this._getSlotDisplay(a,h,l);l.replaceDisplay(_,t)}else{l.replaceDisplay(null)}}}l._setDisplayIndex(n.displayIndex,true)}}_buildConstraints(t,a){const e=t.armature.constraints;for(let t in e){const s=e[t];switch(s.type){case 0:const i=c.BaseObject.borrowObject(c.IKConstraint);i.init(s,a);a._addConstraint(i);break;case 1:const r=c.BaseObject.borrowObject(c.PathConstraint);r.init(s,a);a._addConstraint(r);break;case 2:const n=s;if(n.bones&&n.bones.length>0){for(let t=0,e=n.bones.length;t<e;++t){const h=n.bones[t];if(h){const _=c.BaseObject.borrowObject(c.TransformConstraint);_.index=t;_.init(s,a)}}}break;case 3:const o=c.BaseObject.borrowObject(c.PhysicsConstraint);o.init(s,a);break;default:const l=c.BaseObject.borrowObject(c.IKConstraint);l.init(s,a);a._addConstraint(l);break}}}_buildChildArmature(t,e,a){return this.buildArmature(a.path,t!==null?t.dataName:"","",t!==null?t.textureAtlasName:"")}_getSlotDisplay(t,e,a){const s=t!==null?t.dataName:e.parent.parent.parent.name;let i=null;switch(e.type){case 0:{const r=e;if(r.texture===null){r.texture=this._getTextureData(s,e.path)}i=a.rawDisplay;break}case 2:{const n=e;if(n.texture===null){n.texture=this._getTextureData(s,n.path)}if(this._isSupportMesh()){i=a.meshDisplay}else{i=a.rawDisplay}break}case 1:{const o=e;const l=this._buildChildArmature(t,a,o);if(l!==null){l.inheritAnimation=o.inheritAnimation;if(!l.inheritAnimation){const h=o.actions.length>0?o.actions:l.armatureData.defaultActions;if(h.length>0){for(const _ of h){const f=c.BaseObject.borrowObject(c.EventObject);c.EventObject.actionDataToInstance(_,f,a.armature);f.slot=a;a.armature._bufferAction(f,false)}}else{l.animation.play()}}o.armature=l.armatureData}i=l;break}case 3:break;case 5:{i=a.shapeDisplay;break}default:break}return i}parseDragonBonesData(t,e=null,a=1){const s=t instanceof ArrayBuffer?n._binaryParser:this._dataParser;const i=s.parseDragonBonesData(t,a);while(true){const r=this._buildTextureAtlasData(null,null);if(s.parseTextureAtlasData(null,r,a)){this.addTextureAtlasData(r,e)}else{r.returnToPool();break}}if(i!==null){this.addDragonBonesData(i,e)}return i}parseTextureAtlasData(t,e,a=null,s=1){const i=this._buildTextureAtlasData(null,null);this._dataParser.parseTextureAtlasData(t,i,s);this._buildTextureAtlasData(i,e||null);this.addTextureAtlasData(i,a);return i}updateTextureAtlases(a,t){const s=this.getTextureAtlasData(t);if(s!==null){for(let t=0,e=s.length;t<e;++t){if(t<a.length){this._buildTextureAtlasData(s[t],a[t])}}}}getDragonBonesData(t){return t in this._dragonBonesDataMap?this._dragonBonesDataMap[t]:null}addDragonBonesData(t,e=null){e=e!==null?e:t.name;if(e in this._dragonBonesDataMap){if(this._dragonBonesDataMap[e]===t){return}console.warn("Can not add same name data: "+e);return}this._dragonBonesDataMap[e]=t}removeDragonBonesData(t,e=true){if(t in this._dragonBonesDataMap){if(e){this._dragonBones.bufferObject(this._dragonBonesDataMap[t])}delete this._dragonBonesDataMap[t]}}getTextureAtlasData(t){return t in this._textureAtlasDataMap?this._textureAtlasDataMap[t]:null}addTextureAtlasData(t,e=null){e=e!==null?e:t.name;const a=e in this._textureAtlasDataMap?this._textureAtlasDataMap[e]:this._textureAtlasDataMap[e]=[];if(a.indexOf(t)<0){a.push(t)}}removeTextureAtlasData(t,e=true){if(t in this._textureAtlasDataMap){const a=this._textureAtlasDataMap[t];if(e){for(const s of a){this._dragonBones.bufferObject(s)}}delete this._textureAtlasDataMap[t]}}getArmatureData(t,e=""){const a=new o;if(!this._fillBuildArmaturePackage(a,e,t,"","")){return null}return a.armature}clear(e=true){for(let t in this._dragonBonesDataMap){if(e){this._dragonBones.bufferObject(this._dragonBonesDataMap[t])}delete this._dragonBonesDataMap[t]}for(let t in this._textureAtlasDataMap){if(e){const a=this._textureAtlasDataMap[t];for(const s of a){this._dragonBones.bufferObject(s)}}delete this._textureAtlasDataMap[t]}}buildArmature(t,e="",a="",s=""){const i=new o;if(!this._fillBuildArmaturePackage(i,e||"",t,a||"",s||"")){console.warn("No armature data: "+t+", "+(e!==null?e:""));return null}const r=this._buildArmature(i);this._buildBones(i,r);this._buildSlots(i,r);this._buildConstraints(i,r);r.invalidUpdate(null,true);r.advanceTime(0);return r}replaceDisplay(e,a,s=-1){if(s<0){s=e.displayIndex}if(s<0){s=0}e.replaceDisplayData(a,s);if(a!==null){let t=this._getSlotDisplay(null,a,e);if(a.type===0){const i=e.getDisplayFrameAt(s).rawDisplayData;if(i!==null&&i.type===2){t=e.meshDisplay}else if(i!==null&&i.type===5){t=e.shapeDisplay}}e.replaceDisplay(t,s)}else{e.replaceDisplay(null,s)}}replaceSlotDisplay(t,e,a,s,i,r=-1){const n=this.getArmatureData(e,t||"");if(n===null||n.defaultSkin===null){return false}const o=n.defaultSkin.getDisplay(a,s);this.replaceDisplay(i,o,r);return true}replaceSlotDisplayList(t,e,a,s){const i=this.getArmatureData(e,t||"");if(!i||!i.defaultSkin){return false}const r=i.defaultSkin.getDisplays(a);if(!r){return false}s.displayFrameCount=r.length;for(let t=0,e=s.displayFrameCount;t<e;++t){const n=r[t];this.replaceDisplay(s,n,t)}return true}replaceSkin(t,e,s=false,i=null){let r=false;const n=e.parent.defaultSkin;for(const o of t.getSlots()){if(i!==null&&i.indexOf(o.name)>=0){continue}let a=e.getDisplays(o.name);if(a===null){if(n!==null&&e!==n){a=n.getDisplays(o.name)}if(a===null){if(s){o.displayFrameCount=0}continue}}o.displayFrameCount=a.length;for(let t=0,e=o.displayFrameCount;t<e;++t){const l=a[t];o.replaceRawDisplayData(l,t);if(l!==null){o.replaceDisplay(this._getSlotDisplay(null,l,o),t)}else{o.replaceDisplay(null,t)}}r=true}return r}replaceAnimation(t,e,a=true){const s=e.defaultSkin;if(s===null){return false}if(a){t.animation.animations=e.animations}else{const i=t.animation.animations;const r={};for(let t in i){r[t]=i[t]}for(let t in e.animations){r[t]=e.animations[t]}t.animation.animations=r}for(const n of t.getSlots()){let t=0;for(const o of n.displayList){if(o instanceof c.Armature){const l=s.getDisplays(n.name);if(l!==null&&t<l.length){const h=l[t];if(h!==null&&h.type===1){const _=this.getArmatureData(h.path,h.parent.parent.parent.name);if(_){this.replaceAnimation(o,_,a)}}}}t++}}return true}getAllDragonBonesData(){return this._dragonBonesDataMap}getAllTextureAtlasData(){return this._textureAtlasDataMap}get clock(){return this._dragonBones.clock}get dragonBones(){return this._dragonBones}}n._objectParser=null;n._binaryParser=null;c.BaseFactory=n;class o{constructor(){this.dataName="";this.textureAtlasName="";this.skin=null}}c.BuildArmaturePackage=o})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.TextureAtlasData{constructor(){super(...arguments);this._renderTexture=null}static toString(){return"[class dragonBones.PixiTextureAtlasData]"}_onClear(){super._onClear();if(this._renderTexture!==null){}this._renderTexture=null}createTexture(){return t.BaseObject.borrowObject(a)}get renderTexture(){return this._renderTexture}set renderTexture(t){if(this._renderTexture===t){return}this._renderTexture=t;if(this._renderTexture!==null){for(let t in this.textures){const e=this.textures[t];e.renderTexture=new PIXI.Texture({source:this._renderTexture,frame:new PIXI.Rectangle(e.region.x,e.region.y,e.region.width,e.region.height),orig:new PIXI.Rectangle(e.region.x,e.region.y,e.region.width,e.region.height),trim:new PIXI.Rectangle(0,0,e.region.width,e.region.height),rotate:e.rotated})}}else{for(let t in this.textures){const e=this.textures[t];e.renderTexture=null}}}}t.PixiTextureAtlasData=e;class a extends t.TextureData{constructor(){super(...arguments);this.renderTexture=null}static toString(){return"[class dragonBones.PixiTextureData]"}_onClear(){super._onClear();if(this.renderTexture!==null){this.renderTexture.destroy(false)}this.renderTexture=null}}t.PixiTextureData=a})(dragonBones||(dragonBones={}));var dragonBones;(function(e){class t extends PIXI.Sprite{constructor(){super(...arguments);this.debugDraw=false;this._debugDraw=false;this._armature=null;this._debugDrawer=null;this.pixiApp=null}dbInit(t){this._armature=t}dbClear(){if(this._debugDrawer!==null){this._debugDrawer.destroy(true)}this._armature=null;this._debugDrawer=null;super.destroy()}dbUpdate(){const t=e.DragonBones.debugDraw||this.debugDraw;if(t||this._debugDraw){this._debugDraw=t;if(this._debugDraw){if(this._debugDrawer===null){this._debugDrawer=new PIXI.Container;const a=new PIXI.Graphics;this._debugDrawer.addChild(a)}this.addChild(this._debugDrawer);const a=this._debugDrawer.getChildAt(0);a.clear();const s=this._armature.getBones();for(let t=0,e=s.length;t<e;++t){const n=s[t];const o=n.boneData.length;const l=n.globalTransformMatrix.tx;const h=n.globalTransformMatrix.ty;const _=l+n.globalTransformMatrix.a*o;const f=h+n.globalTransformMatrix.b*o;a.moveTo(l,h).lineTo(_,f).stroke({width:2,color:65535,alpha:.7}).circle(l,h,3).stroke({width:0,color:0,alpha:0}).fill({color:65535,alpha:.7})}const i=this._armature.getSlots();for(let t=0,e=i.length;t<e;++t){const c=i[t];const u=c.boundingBoxData;if(u){let a=this._debugDrawer.getChildByName(c.name);if(!a){a=new PIXI.Graphics;a.name=c.name;this._debugDrawer.addChild(a)}a.clear();switch(u.type){case 0:a.rect(-u.width*.5,-u.height*.5,u.width,u.height);break;case 1:a.ellipse(-u.width*.5,-u.height*.5,u.width,u.height);break;case 2:const d=u.vertices;for(let t=0,e=d.length;t<e;t+=2){const p=d[t];const g=d[t+1];if(t===0){a.moveTo(p,g)}else{a.lineTo(p,g)}}a.lineTo(d[0],d[1]);break;default:break}a.stroke({width:2,color:16711935,alpha:.7});a.fill({color:16711935,alpha:.3});c.invalidUpdate();c.updateTransformAndMatrix();c.updateGlobalTransform();const m=c.global;a.updateTransform({x:m.x,y:m.y,scaleX:m.scaleX,scaleY:m.scaleY,rotation:m.rotation,skewX:m.skew,skewY:0,pivotX:c._pivotX,pivotY:c._pivotY})}else{const y=this._debugDrawer.getChildByName(c.name);if(y){this._debugDrawer.removeChild(y)}}}const r=this._armature.getPathConstraints();if(r){for(let t=0,e=r.length;t<e;t++){const D=r[t];const T=D._pathSlot._displayFrame.rawDisplayData;let a=this._debugDrawer.getChildByName(D.name);if(!a){a=new PIXI.Graphics;a.name=D.name;this._debugDrawer.addChild(a)}a.clear();const d=D._pathGlobalVertices;if(d){for(let t=0,e=d.length;t<e;t+=6){if(t===0){a.moveTo(d[t+2],d[t+3])}else{const b=t-6;a.bezierCurveTo(d[b+4],d[b+5],d[t+0],d[t+1],d[t+2],d[t+3])}}if(T.closed){a.bezierCurveTo(d[d.length-2],d[d.length-1],d[0],d[1],d[2],d[3])}}a.stroke({width:2,color:65280,alpha:.7})}}}else if(this._debugDrawer!==null&&this._debugDrawer.parent===this){this.removeChild(this._debugDrawer)}}}dispose(t=true){t;if(this._armature!==null){this._armature.dispose();this._armature=null}}destroy(){this.dispose()}dispatchDBEvent(t,e){this.emit(t,e)}hasDBEventListener(t){return this.listeners(t).length>0}addDBEventListener(t,e,a){this.addListener(t,e,a)}removeDBEventListener(t,e,a){this.removeListener(t,e,a)}get armature(){return this._armature}get animation(){return this._armature.animation}}e.PixiArmatureDisplay=t})(dragonBones||(dragonBones={}));var dragonBones;(function(A){class t extends A.Slot{static toString(){return"[class dragonBones.PixiSlot]"}_onClear(){super._onClear();this._textureScale=1;this._renderDisplay=null;this._updateTransform=PIXI.VERSION[0]==="3"?this._updateTransformV3:this._updateTransformV4}_initDisplay(t,e){t;e}_disposeDisplay(t,e){t;if(!e){t.destroy()}}_onUpdateDisplay(){this._renderDisplay=this._display?this._display:this._rawDisplay}_addDisplay(){const t=this._armature.display;t.addChild(this._renderDisplay)}_replaceDisplay(t){const e=this._armature.display;const a=t;e.addChild(this._renderDisplay);e.swapChildren(this._renderDisplay,a);e.removeChild(a);this._textureScale=1}_removeDisplay(){this._renderDisplay.parent.removeChild(this._renderDisplay)}_updateZOrder(){const t=this._armature.display;const e=t.getChildIndex(this._renderDisplay);if(e===this._zOrder){return}t.addChildAt(this._renderDisplay,this._zOrder)}_updateVisible(){this._renderDisplay.visible=this._parent.visible&&this._visible}_updateBlendMode(){if(this._renderDisplay instanceof PIXI.Sprite){switch(this._blendMode){case 0:this._renderDisplay.blendMode="normal";break;case 1:this._renderDisplay.blendMode="add";break;case 3:this._renderDisplay.blendMode="darken";break;case 4:this._renderDisplay.blendMode="difference";break;case 6:this._renderDisplay.blendMode="hard-light";break;case 9:this._renderDisplay.blendMode="lighten";break;case 10:this._renderDisplay.blendMode="multiply";break;case 11:this._renderDisplay.blendMode="overlay";break;case 12:this._renderDisplay.blendMode="screen";break;default:break}}}_updateColor(){const t=this._colorTransform.alphaMultiplier*this._globalAlpha;this._renderDisplay.alpha=t;if(this._renderDisplay instanceof PIXI.Sprite||this._renderDisplay instanceof PIXI.MeshSimple){const e=(Math.round(this._colorTransform.redMultiplier*255)<<16)+(Math.round(this._colorTransform.greenMultiplier*255)<<8)+Math.round(this._colorTransform.blueMultiplier*255);this._renderDisplay.tint=e}}_updateFrame(){let s=this._textureData;if(this._displayIndex>=0&&this._display!==null&&s!==null){let t=s.parent;if(this._armature.replacedTexture!==null){if(this._armature._replaceTextureAtlasData===null){t=A.BaseObject.borrowObject(A.PixiTextureAtlasData);t.copyFrom(s.parent);t.renderTexture=this._armature.replacedTexture;this._armature._replaceTextureAtlasData=t}else{t=this._armature._replaceTextureAtlasData}s=t.getTexture(s.name)}const e=s.renderTexture;if(e!==null){if(this._geometryData!==null){const i=this._geometryData.data;const r=i.intArray;const n=i.floatArray;const o=r[this._geometryData.offset+0];const l=r[this._geometryData.offset+1];let a=r[this._geometryData.offset+2];if(a<0){a+=65536}const h=a+o*2;const _=this._armature._armatureData.scale;const f=this._renderDisplay;const c=new Float32Array(o*2);const u=new Float32Array(o*2);const m=new Uint16Array(l*3);for(let t=0,e=o*2;t<e;++t){c[t]=n[a+t]*_}for(let t=0;t<l*3;++t){m[t]=r[this._geometryData.offset+4+t]}for(let t=0,e=o*2;t<e;t+=2){const g=n[h+t];const y=n[h+t+1];if(s.rotated){u[t]=1-y;u[t+1]=g}else{u[t]=g;u[t+1]=y}}this._textureScale=1;f.texture=e;f.vertices=c;f.geometry.uvs=u;f.geometry.addIndex(m);const d=this._geometryData.weight!==null;const p=this._parent._boneData.type!==0;if(d||p){this._identityTransform()}}else{this._textureScale=s.parent.scale*this._armature._armatureData.scale;const a=this._renderDisplay;a.texture=e;if(this._mask){const D=new PIXI.ColorMatrixFilter;D.matrix=[1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0];a.filters=[D];const T=this._armature.display;if(T&&T.pixiApp){const b=T.pixiApp.renderer.generateTexture(a);a.texture=b;a.filters=[]}}}this._visibleDirty=true;return}}if(this._geometryData!==null){const f=this._renderDisplay;f.x=0;f.y=0;f.visible=false}else{const a=this._renderDisplay;a.x=0;a.y=0;a.visible=false}}_updateMesh(){const o=this._armature._armatureData.scale;const l=this._displayFrame.deformVertices;const h=this._geometryBones;const t=this._geometryData;const s=t.weight;const _=l.length>0&&t.inheritDeform;const f=this._renderDisplay;if(s!==null){const e=t.data;const c=e.intArray;const u=e.floatArray;const m=c[t.offset+0];let a=c[s.offset+1];if(a<0){a+=65536}for(let t=0,e=0,i=s.offset+2+h.length,r=a,n=0;t<m;++t){const d=c[i++];let a=0,s=0;for(let t=0;t<d;++t){const p=c[i++];const g=h[p];if(g!==null){const y=g.globalTransformMatrix;const D=u[r++];let t=u[r++]*o;let e=u[r++]*o;if(_){t+=l[n++];e+=l[n++]}a+=(y.a*t+y.c*e+y.tx)*D;s+=(y.b*t+y.d*e+y.ty)*D}}f.vertices[e++]=a;f.vertices[e++]=s}}else{const i=this._parent._boneData.type!==0;const e=t.data;const c=e.intArray;const u=e.floatArray;const m=c[t.offset+0];let s=c[t.offset+2];if(s<0){s+=65536}for(let a=0,t=m*2;a<t;a+=2){let t=u[s+a]*o;let e=u[s+a+1]*o;if(_){t+=l[a];e+=l[a+1]}if(i){const y=this._parent._getGlobalTransformMatrix(t,e);f.vertices[a]=y.a*t+y.c*e+y.tx;f.vertices[a+1]=y.b*t+y.d*e+y.ty}else{f.vertices[a]=t;f.vertices[a+1]=e}}}}_updateShape(){const o=this._armature._armatureData.scale;const l=this._shapeData;const h=this._renderDisplay;h.clear();const _=this._displayFrame.deformVertices;const f=_&&_.length>0;const c=6;const u=this._geometryBones;const t=this._geometryData;const s=t.weight;if(s!==null){const m=[];const e=t.data;const d=e.intArray;const p=e.floatArray;const g=d[t.offset+0];let a=d[s.offset+1];if(a<0){a+=65536}for(let t=0,e=0,i=s.offset+2+u.length,r=a,n=0;t<g;++t){const y=d[i++];let a=0,s=0;for(let t=0;t<y;++t){const D=d[i++];const T=u[D];if(T!==null){const b=T.globalTransformMatrix;const A=p[r++];let t=p[r++]*o;let e=p[r++]*o;if(f){t+=_[n++];e+=_[n++]}a+=(b.a*t+b.c*e+b.tx)*A;s+=(b.b*t+b.d*e+b.ty)*A}}m[e++]=a;m[e++]=s}for(let t=0,e=l.paths.length;t<e;t++){const i=l.paths[t];const{indexes:S,style:r}=i;const{fill:n,stroke:P}=r;if(S.length===0){continue}for(let n=0,t=S.length;n<t;n++){const O=S[n]*c;let a=m[O+2];let s=m[O+3];let i=m[O+0];let r=m[O+1];if(n===0){h.moveTo(a,s)}else{const x=S[n-1]*c;let t=m[x+4];let e=m[x+5];h.bezierCurveTo(t,e,i,r,a,s)}}if(P){h.stroke({width:P.width||1,color:P.color||0,alpha:P.opacity||0})}if(n){h.fill({color:n.color,alpha:n.opacity})}}}else{for(let t=0,e=l.paths.length;t<e;t++){const i=l.paths[t];const{indexes:S,style:r}=i;const{fill:n,stroke:P}=r;if(S.length===0){continue}for(let n=0,t=S.length;n<t;n++){const O=S[n]*c;let a=l.vertices[O+2]*o;let s=l.vertices[O+3]*o;let i=l.vertices[O+0]*o;let r=l.vertices[O+1]*o;if(f){const B=O;a+=_[B+2];s+=_[B+3];i+=_[B+0];r+=_[B+1]}if(n===0){h.moveTo(a,s)}else{const x=S[n-1]*c;let t=l.vertices[x+4]*o;let e=l.vertices[x+5]*o;if(f){const B=x;t+=_[B+4];e+=_[B+5]}h.bezierCurveTo(t,e,i,r,a,s)}}if(P){h.stroke({width:P.width||1,color:P.color||0,alpha:P.opacity||0})}if(n){h.fill({color:n.color,alpha:n.opacity})}}}}_updateMask(){if(this._mask&&this._maskRange>0){const a=this._armature.display;const s=a.children.length;for(let t=0;t<s;t++){const r=a.getChildAt(t);if(r.mask===this._renderDisplay){r.mask=null}}const i=a.getChildIndex(this._renderDisplay);for(let e=0;e<this._maskRange;e++){let t=i+e+1;if(t<s){const r=a.getChildAt(t);if(r){r.mask=this._renderDisplay}}}}}_updateTransform(){throw new Error}_updateTransformV3(){this.updateGlobalTransform();const t=this.global;if(this._renderDisplay===this._rawDisplay||this._renderDisplay===this._meshDisplay){const e=t.x-(this.globalTransformMatrix.a*this._pivotX+this.globalTransformMatrix.c*this._pivotY);const a=t.y-(this.globalTransformMatrix.b*this._pivotX+this.globalTransformMatrix.d*this._pivotY);this._renderDisplay.updateTransform({x:e,y:a,scaleX:t.scaleX*this._textureScale,scaleY:t.scaleY*this._textureScale,rotation:t.rotation,skewX:t.skew,skewY:0})}else{this._renderDisplay.position.set(t.x,t.y);this._renderDisplay.rotation=t.rotation;this._renderDisplay.skew.set(t.skew,0);this._renderDisplay.scale.set(t.scaleX,t.scaleY)}}_updateTransformV4(){this.updateGlobalTransform();const t=this.global;if(this._renderDisplay===this._rawDisplay||this._renderDisplay===this._meshDisplay){const e=t.x-(this.globalTransformMatrix.a*this._pivotX+this.globalTransformMatrix.c*this._pivotY);const a=t.y-(this.globalTransformMatrix.b*this._pivotX+this.globalTransformMatrix.d*this._pivotY);this._renderDisplay.updateTransform({x:e,y:a,scaleX:t.scaleX*this._textureScale,scaleY:t.scaleY*this._textureScale,rotation:t.rotation,skewX:-t.skew,skewY:0})}else{this._renderDisplay.position.set(t.x,t.y);this._renderDisplay.rotation=t.rotation;this._renderDisplay.skew.set(-t.skew,0);this._renderDisplay.scale.set(t.scaleX,t.scaleY)}}_identityTransform(){this._renderDisplay.updateTransform({x:0,y:0,scaleX:1,scaleY:1,rotation:0,skewX:0,skewY:0})}}A.PixiSlot=t})(dragonBones||(dragonBones={}));var dragonBones;(function(i){class a extends i.BaseFactory{static _clockHandler(t){const e=t.deltaTime;this._dragonBonesInstance.advanceTime(PIXI.Ticker.shared.elapsedMS*e*.001)}static get factory(){if(a._factory===null){a._factory=new a}return a._factory}constructor(t=null){super(t);this._app=null;if(a._dragonBonesInstance===null){PIXI.Assets.loader.parsers.push(new PixiDBBinParser);const e=new i.PixiArmatureDisplay;a._dragonBonesInstance=new i.DragonBones(e);PIXI.Ticker.shared.add(a._clockHandler,a)}this._dragonBones=a._dragonBonesInstance}_buildTextureAtlasData(t,e){if(t){t.renderTexture=e}else{t=i.BaseObject.borrowObject(i.PixiTextureAtlasData)}return t}_buildArmature(t){const e=i.BaseObject.borrowObject(i.Armature);const a=new i.PixiArmatureDisplay;a.pixiApp=this._app;e.init(t.armature,a,a,this._dragonBones);return e}_buildSlot(t,e,a){const s=i.BaseObject.borrowObject(i.PixiSlot);s.init(e,a,new PIXI.Sprite,new PIXI.MeshSimple({texture:PIXI.Texture.EMPTY}),new PIXI.Graphics);return s}buildArmatureDisplay(t,e="",a="",s=""){const i=this.buildArmature(t,e||"",a||"",s||"");if(i!==null){this._dragonBones.clock.add(i);return i.display}return null}getTextureDisplay(t,e=null){const a=this._getTextureData(e!==null?e:"",t);if(a!==null&&a.renderTexture!==null){return new PIXI.Sprite(a.renderTexture)}return null}get soundEventManager(){return this._dragonBones.eventManager}set pixiApp(t){this._app=t}}a._dragonBonesInstance=null;a._factory=null;i.PixiFactory=a})(dragonBones||(dragonBones={}));class PixiDBBinParser{constructor(){this.name="dbbin-loader";this.extension={type:PIXI.ExtensionType.LoadParser,name:"dbbin-loader",priority:0}}test(t){return t.indexOf(".dbbin")!==-1}load(t){return fetch(t).then(t=>t.arrayBuffer())}parse(t){return new DataView(t)}}